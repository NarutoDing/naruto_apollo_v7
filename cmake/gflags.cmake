# Finds gflags library and compilers and extends
include($ENV{THIRD_LIBRARY_INSTALL_PATH}/gflags-2.2.2/lib/cmake/gflags/gflags-config.cmake)
include($ENV{THIRD_LIBRARY_INSTALL_PATH}/gflags-2.2.2/lib/cmake/gflags/gflags-config-version.cmake)
include($ENV{THIRD_LIBRARY_INSTALL_PATH}/gflags-2.2.2/lib/cmake/gflags/gflags-nonamespace-targets.cmake)
include($ENV{THIRD_LIBRARY_INSTALL_PATH}/gflags-2.2.2/lib/cmake/gflags/gflags-targets.cmake)
find_package(gflags REQUIRED HINTS  $ENV{THIRD_LIBRARY_INSTALL_PATH}/gflags-2.2.2/lib/cmake/gflags)
if(gflags_FOUND)
  set(gflags_LIBRARIES $ENV{THIRD_LIBRARY_INSTALL_PATH}/gflags-2.2.2/lib/libgflags.so)
  message("${BoldCyan} [ok] gflags library found ${ColourReset}")
  message(STATUS "gflags version : ${PACKAGE_VERSION}")
  message(STATUS "gflags include path : ${gflags_INCLUDE_DIR}")
  message(STATUS "gflags libraries : ${gflags_LIBRARIES}")
  if(NOT ${PACKAGE_VERSION} STREQUAL "2.2.2")
    message(FATAL_ERROR "${Red} [error] naruto apollo need gflags 2.2.2 ${ColourReset}")
  endif()
else()
  message(FATAL_ERROR "${Red} [error] gflags is needed but can not be found ${ColourReset}")
endif()
include_directories(${gflags_INCLUDE_DIR})

