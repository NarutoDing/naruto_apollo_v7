// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cyber/proto/dag_conf.proto

#include "cyber/proto/dag_conf.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_cyber_2fproto_2fcomponent_5fconf_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ComponentConfig_cyber_2fproto_2fcomponent_5fconf_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cyber_2fproto_2fdag_5fconf_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ComponentInfo_cyber_2fproto_2fdag_5fconf_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cyber_2fproto_2fdag_5fconf_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ModuleConfig_cyber_2fproto_2fdag_5fconf_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cyber_2fproto_2fcomponent_5fconf_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TimerComponentConfig_cyber_2fproto_2fcomponent_5fconf_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cyber_2fproto_2fdag_5fconf_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TimerComponentInfo_cyber_2fproto_2fdag_5fconf_2eproto;
namespace apollo {
namespace cyber {
namespace proto {
class ComponentInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ComponentInfo> _instance;
} _ComponentInfo_default_instance_;
class TimerComponentInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TimerComponentInfo> _instance;
} _TimerComponentInfo_default_instance_;
class ModuleConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModuleConfig> _instance;
} _ModuleConfig_default_instance_;
class DagConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DagConfig> _instance;
} _DagConfig_default_instance_;
}  // namespace proto
}  // namespace cyber
}  // namespace apollo
static void InitDefaultsscc_info_ComponentInfo_cyber_2fproto_2fdag_5fconf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::cyber::proto::_ComponentInfo_default_instance_;
    new (ptr) ::apollo::cyber::proto::ComponentInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ComponentInfo_cyber_2fproto_2fdag_5fconf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ComponentInfo_cyber_2fproto_2fdag_5fconf_2eproto}, {
      &scc_info_ComponentConfig_cyber_2fproto_2fcomponent_5fconf_2eproto.base,}};

static void InitDefaultsscc_info_DagConfig_cyber_2fproto_2fdag_5fconf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::cyber::proto::_DagConfig_default_instance_;
    new (ptr) ::apollo::cyber::proto::DagConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DagConfig_cyber_2fproto_2fdag_5fconf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DagConfig_cyber_2fproto_2fdag_5fconf_2eproto}, {
      &scc_info_ModuleConfig_cyber_2fproto_2fdag_5fconf_2eproto.base,}};

static void InitDefaultsscc_info_ModuleConfig_cyber_2fproto_2fdag_5fconf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::cyber::proto::_ModuleConfig_default_instance_;
    new (ptr) ::apollo::cyber::proto::ModuleConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ModuleConfig_cyber_2fproto_2fdag_5fconf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ModuleConfig_cyber_2fproto_2fdag_5fconf_2eproto}, {
      &scc_info_ComponentInfo_cyber_2fproto_2fdag_5fconf_2eproto.base,
      &scc_info_TimerComponentInfo_cyber_2fproto_2fdag_5fconf_2eproto.base,}};

static void InitDefaultsscc_info_TimerComponentInfo_cyber_2fproto_2fdag_5fconf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::cyber::proto::_TimerComponentInfo_default_instance_;
    new (ptr) ::apollo::cyber::proto::TimerComponentInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TimerComponentInfo_cyber_2fproto_2fdag_5fconf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TimerComponentInfo_cyber_2fproto_2fdag_5fconf_2eproto}, {
      &scc_info_TimerComponentConfig_cyber_2fproto_2fcomponent_5fconf_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_cyber_2fproto_2fdag_5fconf_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_cyber_2fproto_2fdag_5fconf_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_cyber_2fproto_2fdag_5fconf_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_cyber_2fproto_2fdag_5fconf_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::ComponentInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::ComponentInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::ComponentInfo, class_name_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::ComponentInfo, config_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::TimerComponentInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::TimerComponentInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::TimerComponentInfo, class_name_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::TimerComponentInfo, config_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::ModuleConfig, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::ModuleConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::ModuleConfig, module_library_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::ModuleConfig, components_),
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::ModuleConfig, timer_components_),
  0,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::DagConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::cyber::proto::DagConfig, module_config_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::apollo::cyber::proto::ComponentInfo)},
  { 9, 16, sizeof(::apollo::cyber::proto::TimerComponentInfo)},
  { 18, 26, sizeof(::apollo::cyber::proto::ModuleConfig)},
  { 29, -1, sizeof(::apollo::cyber::proto::DagConfig)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::cyber::proto::_ComponentInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::cyber::proto::_TimerComponentInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::cyber::proto::_ModuleConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::cyber::proto::_DagConfig_default_instance_),
};

const char descriptor_table_protodef_cyber_2fproto_2fdag_5fconf_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032cyber/proto/dag_conf.proto\022\022apollo.cyb"
  "er.proto\032 cyber/proto/component_conf.pro"
  "to\"X\n\rComponentInfo\022\022\n\nclass_name\030\001 \001(\t\022"
  "3\n\006config\030\002 \001(\0132#.apollo.cyber.proto.Com"
  "ponentConfig\"b\n\022TimerComponentInfo\022\022\n\ncl"
  "ass_name\030\001 \001(\t\0228\n\006config\030\002 \001(\0132(.apollo."
  "cyber.proto.TimerComponentConfig\"\237\001\n\014Mod"
  "uleConfig\022\026\n\016module_library\030\001 \001(\t\0225\n\ncom"
  "ponents\030\002 \003(\0132!.apollo.cyber.proto.Compo"
  "nentInfo\022@\n\020timer_components\030\003 \003(\0132&.apo"
  "llo.cyber.proto.TimerComponentInfo\"D\n\tDa"
  "gConfig\0227\n\rmodule_config\030\001 \003(\0132 .apollo."
  "cyber.proto.ModuleConfig"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto_deps[1] = {
  &::descriptor_table_cyber_2fproto_2fcomponent_5fconf_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto_sccs[4] = {
  &scc_info_ComponentInfo_cyber_2fproto_2fdag_5fconf_2eproto.base,
  &scc_info_DagConfig_cyber_2fproto_2fdag_5fconf_2eproto.base,
  &scc_info_ModuleConfig_cyber_2fproto_2fdag_5fconf_2eproto.base,
  &scc_info_TimerComponentInfo_cyber_2fproto_2fdag_5fconf_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto = {
  false, false, descriptor_table_protodef_cyber_2fproto_2fdag_5fconf_2eproto, "cyber/proto/dag_conf.proto", 504,
  &descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto_once, descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto_sccs, descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto_deps, 4, 1,
  schemas, file_default_instances, TableStruct_cyber_2fproto_2fdag_5fconf_2eproto::offsets,
  file_level_metadata_cyber_2fproto_2fdag_5fconf_2eproto, 4, file_level_enum_descriptors_cyber_2fproto_2fdag_5fconf_2eproto, file_level_service_descriptors_cyber_2fproto_2fdag_5fconf_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_cyber_2fproto_2fdag_5fconf_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto)), true);
namespace apollo {
namespace cyber {
namespace proto {

// ===================================================================

class ComponentInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<ComponentInfo>()._has_bits_);
  static void set_has_class_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::cyber::proto::ComponentConfig& config(const ComponentInfo* msg);
  static void set_has_config(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::apollo::cyber::proto::ComponentConfig&
ComponentInfo::_Internal::config(const ComponentInfo* msg) {
  return *msg->config_;
}
void ComponentInfo::clear_config() {
  if (config_ != nullptr) config_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
ComponentInfo::ComponentInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.cyber.proto.ComponentInfo)
}
ComponentInfo::ComponentInfo(const ComponentInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  class_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_class_name()) {
    class_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_class_name(), 
      GetArena());
  }
  if (from._internal_has_config()) {
    config_ = new ::apollo::cyber::proto::ComponentConfig(*from.config_);
  } else {
    config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.ComponentInfo)
}

void ComponentInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ComponentInfo_cyber_2fproto_2fdag_5fconf_2eproto.base);
  class_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  config_ = nullptr;
}

ComponentInfo::~ComponentInfo() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.ComponentInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ComponentInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  class_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete config_;
}

void ComponentInfo::ArenaDtor(void* object) {
  ComponentInfo* _this = reinterpret_cast< ComponentInfo* >(object);
  (void)_this;
}
void ComponentInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ComponentInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ComponentInfo& ComponentInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ComponentInfo_cyber_2fproto_2fdag_5fconf_2eproto.base);
  return *internal_default_instance();
}


void ComponentInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.ComponentInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      class_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(config_ != nullptr);
      config_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComponentInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string class_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_class_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.cyber.proto.ComponentInfo.class_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.cyber.proto.ComponentConfig config = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ComponentInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.ComponentInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string class_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_class_name().data(), static_cast<int>(this->_internal_class_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ComponentInfo.class_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_class_name(), target);
  }

  // optional .apollo.cyber.proto.ComponentConfig config = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::config(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.ComponentInfo)
  return target;
}

size_t ComponentInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.ComponentInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string class_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_class_name());
    }

    // optional .apollo.cyber.proto.ComponentConfig config = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *config_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComponentInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.ComponentInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ComponentInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ComponentInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.ComponentInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.ComponentInfo)
    MergeFrom(*source);
  }
}

void ComponentInfo::MergeFrom(const ComponentInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.ComponentInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_class_name(from._internal_class_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_config()->::apollo::cyber::proto::ComponentConfig::MergeFrom(from._internal_config());
    }
  }
}

void ComponentInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.ComponentInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentInfo::CopyFrom(const ComponentInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.ComponentInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentInfo::IsInitialized() const {
  return true;
}

void ComponentInfo::InternalSwap(ComponentInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  class_name_.Swap(&other->class_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(config_, other->config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ComponentInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TimerComponentInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<TimerComponentInfo>()._has_bits_);
  static void set_has_class_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::cyber::proto::TimerComponentConfig& config(const TimerComponentInfo* msg);
  static void set_has_config(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::apollo::cyber::proto::TimerComponentConfig&
TimerComponentInfo::_Internal::config(const TimerComponentInfo* msg) {
  return *msg->config_;
}
void TimerComponentInfo::clear_config() {
  if (config_ != nullptr) config_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
TimerComponentInfo::TimerComponentInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.cyber.proto.TimerComponentInfo)
}
TimerComponentInfo::TimerComponentInfo(const TimerComponentInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  class_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_class_name()) {
    class_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_class_name(), 
      GetArena());
  }
  if (from._internal_has_config()) {
    config_ = new ::apollo::cyber::proto::TimerComponentConfig(*from.config_);
  } else {
    config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.TimerComponentInfo)
}

void TimerComponentInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TimerComponentInfo_cyber_2fproto_2fdag_5fconf_2eproto.base);
  class_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  config_ = nullptr;
}

TimerComponentInfo::~TimerComponentInfo() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.TimerComponentInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TimerComponentInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  class_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete config_;
}

void TimerComponentInfo::ArenaDtor(void* object) {
  TimerComponentInfo* _this = reinterpret_cast< TimerComponentInfo* >(object);
  (void)_this;
}
void TimerComponentInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TimerComponentInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TimerComponentInfo& TimerComponentInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TimerComponentInfo_cyber_2fproto_2fdag_5fconf_2eproto.base);
  return *internal_default_instance();
}


void TimerComponentInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.TimerComponentInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      class_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(config_ != nullptr);
      config_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TimerComponentInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string class_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_class_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.cyber.proto.TimerComponentInfo.class_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.cyber.proto.TimerComponentConfig config = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TimerComponentInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.TimerComponentInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string class_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_class_name().data(), static_cast<int>(this->_internal_class_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.TimerComponentInfo.class_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_class_name(), target);
  }

  // optional .apollo.cyber.proto.TimerComponentConfig config = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::config(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.TimerComponentInfo)
  return target;
}

size_t TimerComponentInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.TimerComponentInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string class_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_class_name());
    }

    // optional .apollo.cyber.proto.TimerComponentConfig config = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *config_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TimerComponentInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.TimerComponentInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TimerComponentInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TimerComponentInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.TimerComponentInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.TimerComponentInfo)
    MergeFrom(*source);
  }
}

void TimerComponentInfo::MergeFrom(const TimerComponentInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.TimerComponentInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_class_name(from._internal_class_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_config()->::apollo::cyber::proto::TimerComponentConfig::MergeFrom(from._internal_config());
    }
  }
}

void TimerComponentInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.TimerComponentInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimerComponentInfo::CopyFrom(const TimerComponentInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.TimerComponentInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimerComponentInfo::IsInitialized() const {
  return true;
}

void TimerComponentInfo::InternalSwap(TimerComponentInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  class_name_.Swap(&other->class_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(config_, other->config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TimerComponentInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ModuleConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<ModuleConfig>()._has_bits_);
  static void set_has_module_library(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ModuleConfig::ModuleConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  components_(arena),
  timer_components_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.cyber.proto.ModuleConfig)
}
ModuleConfig::ModuleConfig(const ModuleConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      components_(from.components_),
      timer_components_(from.timer_components_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  module_library_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_module_library()) {
    module_library_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_module_library(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.ModuleConfig)
}

void ModuleConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModuleConfig_cyber_2fproto_2fdag_5fconf_2eproto.base);
  module_library_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ModuleConfig::~ModuleConfig() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.ModuleConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ModuleConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  module_library_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ModuleConfig::ArenaDtor(void* object) {
  ModuleConfig* _this = reinterpret_cast< ModuleConfig* >(object);
  (void)_this;
}
void ModuleConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModuleConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModuleConfig& ModuleConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModuleConfig_cyber_2fproto_2fdag_5fconf_2eproto.base);
  return *internal_default_instance();
}


void ModuleConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.ModuleConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  components_.Clear();
  timer_components_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    module_library_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string module_library = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_module_library();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.cyber.proto.ModuleConfig.module_library");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .apollo.cyber.proto.ComponentInfo components = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_components(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .apollo.cyber.proto.TimerComponentInfo timer_components = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_timer_components(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModuleConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.ModuleConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string module_library = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_module_library().data(), static_cast<int>(this->_internal_module_library().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ModuleConfig.module_library");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_module_library(), target);
  }

  // repeated .apollo.cyber.proto.ComponentInfo components = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_components_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_components(i), target, stream);
  }

  // repeated .apollo.cyber.proto.TimerComponentInfo timer_components = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_timer_components_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_timer_components(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.ModuleConfig)
  return target;
}

size_t ModuleConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.ModuleConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.cyber.proto.ComponentInfo components = 2;
  total_size += 1UL * this->_internal_components_size();
  for (const auto& msg : this->components_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .apollo.cyber.proto.TimerComponentInfo timer_components = 3;
  total_size += 1UL * this->_internal_timer_components_size();
  for (const auto& msg : this->timer_components_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional string module_library = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_module_library());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModuleConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.ModuleConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModuleConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.ModuleConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.ModuleConfig)
    MergeFrom(*source);
  }
}

void ModuleConfig::MergeFrom(const ModuleConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.ModuleConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  components_.MergeFrom(from.components_);
  timer_components_.MergeFrom(from.timer_components_);
  if (from._internal_has_module_library()) {
    _internal_set_module_library(from._internal_module_library());
  }
}

void ModuleConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.ModuleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleConfig::CopyFrom(const ModuleConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.ModuleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleConfig::IsInitialized() const {
  return true;
}

void ModuleConfig::InternalSwap(ModuleConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  components_.InternalSwap(&other->components_);
  timer_components_.InternalSwap(&other->timer_components_);
  module_library_.Swap(&other->module_library_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DagConfig::_Internal {
 public:
};

DagConfig::DagConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  module_config_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.cyber.proto.DagConfig)
}
DagConfig::DagConfig(const DagConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      module_config_(from.module_config_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.DagConfig)
}

void DagConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DagConfig_cyber_2fproto_2fdag_5fconf_2eproto.base);
}

DagConfig::~DagConfig() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.DagConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DagConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DagConfig::ArenaDtor(void* object) {
  DagConfig* _this = reinterpret_cast< DagConfig* >(object);
  (void)_this;
}
void DagConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DagConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DagConfig& DagConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DagConfig_cyber_2fproto_2fdag_5fconf_2eproto.base);
  return *internal_default_instance();
}


void DagConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.DagConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  module_config_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DagConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .apollo.cyber.proto.ModuleConfig module_config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_module_config(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DagConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.DagConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.cyber.proto.ModuleConfig module_config = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_module_config_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_module_config(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.DagConfig)
  return target;
}

size_t DagConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.DagConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.cyber.proto.ModuleConfig module_config = 1;
  total_size += 1UL * this->_internal_module_config_size();
  for (const auto& msg : this->module_config_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DagConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.DagConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const DagConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DagConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.DagConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.DagConfig)
    MergeFrom(*source);
  }
}

void DagConfig::MergeFrom(const DagConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.DagConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  module_config_.MergeFrom(from.module_config_);
}

void DagConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.DagConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DagConfig::CopyFrom(const DagConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.DagConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DagConfig::IsInitialized() const {
  return true;
}

void DagConfig::InternalSwap(DagConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  module_config_.InternalSwap(&other->module_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DagConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace cyber
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::cyber::proto::ComponentInfo* Arena::CreateMaybeMessage< ::apollo::cyber::proto::ComponentInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::cyber::proto::ComponentInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::cyber::proto::TimerComponentInfo* Arena::CreateMaybeMessage< ::apollo::cyber::proto::TimerComponentInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::cyber::proto::TimerComponentInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::cyber::proto::ModuleConfig* Arena::CreateMaybeMessage< ::apollo::cyber::proto::ModuleConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::cyber::proto::ModuleConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::cyber::proto::DagConfig* Arena::CreateMaybeMessage< ::apollo::cyber::proto::DagConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::cyber::proto::DagConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
