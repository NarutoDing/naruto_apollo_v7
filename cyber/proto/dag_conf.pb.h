// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cyber/proto/dag_conf.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cyber_2fproto_2fdag_5fconf_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_cyber_2fproto_2fdag_5fconf_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "cyber/proto/component_conf.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_cyber_2fproto_2fdag_5fconf_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_cyber_2fproto_2fdag_5fconf_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto;
namespace apollo {
namespace cyber {
namespace proto {
class ComponentInfo;
class ComponentInfoDefaultTypeInternal;
extern ComponentInfoDefaultTypeInternal _ComponentInfo_default_instance_;
class DagConfig;
class DagConfigDefaultTypeInternal;
extern DagConfigDefaultTypeInternal _DagConfig_default_instance_;
class ModuleConfig;
class ModuleConfigDefaultTypeInternal;
extern ModuleConfigDefaultTypeInternal _ModuleConfig_default_instance_;
class TimerComponentInfo;
class TimerComponentInfoDefaultTypeInternal;
extern TimerComponentInfoDefaultTypeInternal _TimerComponentInfo_default_instance_;
}  // namespace proto
}  // namespace cyber
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> ::apollo::cyber::proto::ComponentInfo* Arena::CreateMaybeMessage<::apollo::cyber::proto::ComponentInfo>(Arena*);
template<> ::apollo::cyber::proto::DagConfig* Arena::CreateMaybeMessage<::apollo::cyber::proto::DagConfig>(Arena*);
template<> ::apollo::cyber::proto::ModuleConfig* Arena::CreateMaybeMessage<::apollo::cyber::proto::ModuleConfig>(Arena*);
template<> ::apollo::cyber::proto::TimerComponentInfo* Arena::CreateMaybeMessage<::apollo::cyber::proto::TimerComponentInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace cyber {
namespace proto {

// ===================================================================

class ComponentInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.cyber.proto.ComponentInfo) */ {
 public:
  inline ComponentInfo() : ComponentInfo(nullptr) {}
  virtual ~ComponentInfo();

  ComponentInfo(const ComponentInfo& from);
  ComponentInfo(ComponentInfo&& from) noexcept
    : ComponentInfo() {
    *this = ::std::move(from);
  }

  inline ComponentInfo& operator=(const ComponentInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComponentInfo& operator=(ComponentInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ComponentInfo& default_instance();

  static inline const ComponentInfo* internal_default_instance() {
    return reinterpret_cast<const ComponentInfo*>(
               &_ComponentInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ComponentInfo& a, ComponentInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ComponentInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComponentInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ComponentInfo* New() const final {
    return CreateMaybeMessage<ComponentInfo>(nullptr);
  }

  ComponentInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ComponentInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ComponentInfo& from);
  void MergeFrom(const ComponentInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComponentInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.cyber.proto.ComponentInfo";
  }
  protected:
  explicit ComponentInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto);
    return ::descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClassNameFieldNumber = 1,
    kConfigFieldNumber = 2,
  };
  // optional string class_name = 1;
  bool has_class_name() const;
  private:
  bool _internal_has_class_name() const;
  public:
  void clear_class_name();
  const std::string& class_name() const;
  void set_class_name(const std::string& value);
  void set_class_name(std::string&& value);
  void set_class_name(const char* value);
  void set_class_name(const char* value, size_t size);
  std::string* mutable_class_name();
  std::string* release_class_name();
  void set_allocated_class_name(std::string* class_name);
  private:
  const std::string& _internal_class_name() const;
  void _internal_set_class_name(const std::string& value);
  std::string* _internal_mutable_class_name();
  public:

  // optional .apollo.cyber.proto.ComponentConfig config = 2;
  bool has_config() const;
  private:
  bool _internal_has_config() const;
  public:
  void clear_config();
  const ::apollo::cyber::proto::ComponentConfig& config() const;
  ::apollo::cyber::proto::ComponentConfig* release_config();
  ::apollo::cyber::proto::ComponentConfig* mutable_config();
  void set_allocated_config(::apollo::cyber::proto::ComponentConfig* config);
  private:
  const ::apollo::cyber::proto::ComponentConfig& _internal_config() const;
  ::apollo::cyber::proto::ComponentConfig* _internal_mutable_config();
  public:
  void unsafe_arena_set_allocated_config(
      ::apollo::cyber::proto::ComponentConfig* config);
  ::apollo::cyber::proto::ComponentConfig* unsafe_arena_release_config();

  // @@protoc_insertion_point(class_scope:apollo.cyber.proto.ComponentInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr class_name_;
  ::apollo::cyber::proto::ComponentConfig* config_;
  friend struct ::TableStruct_cyber_2fproto_2fdag_5fconf_2eproto;
};
// -------------------------------------------------------------------

class TimerComponentInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.cyber.proto.TimerComponentInfo) */ {
 public:
  inline TimerComponentInfo() : TimerComponentInfo(nullptr) {}
  virtual ~TimerComponentInfo();

  TimerComponentInfo(const TimerComponentInfo& from);
  TimerComponentInfo(TimerComponentInfo&& from) noexcept
    : TimerComponentInfo() {
    *this = ::std::move(from);
  }

  inline TimerComponentInfo& operator=(const TimerComponentInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimerComponentInfo& operator=(TimerComponentInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TimerComponentInfo& default_instance();

  static inline const TimerComponentInfo* internal_default_instance() {
    return reinterpret_cast<const TimerComponentInfo*>(
               &_TimerComponentInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TimerComponentInfo& a, TimerComponentInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(TimerComponentInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TimerComponentInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TimerComponentInfo* New() const final {
    return CreateMaybeMessage<TimerComponentInfo>(nullptr);
  }

  TimerComponentInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TimerComponentInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TimerComponentInfo& from);
  void MergeFrom(const TimerComponentInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TimerComponentInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.cyber.proto.TimerComponentInfo";
  }
  protected:
  explicit TimerComponentInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto);
    return ::descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClassNameFieldNumber = 1,
    kConfigFieldNumber = 2,
  };
  // optional string class_name = 1;
  bool has_class_name() const;
  private:
  bool _internal_has_class_name() const;
  public:
  void clear_class_name();
  const std::string& class_name() const;
  void set_class_name(const std::string& value);
  void set_class_name(std::string&& value);
  void set_class_name(const char* value);
  void set_class_name(const char* value, size_t size);
  std::string* mutable_class_name();
  std::string* release_class_name();
  void set_allocated_class_name(std::string* class_name);
  private:
  const std::string& _internal_class_name() const;
  void _internal_set_class_name(const std::string& value);
  std::string* _internal_mutable_class_name();
  public:

  // optional .apollo.cyber.proto.TimerComponentConfig config = 2;
  bool has_config() const;
  private:
  bool _internal_has_config() const;
  public:
  void clear_config();
  const ::apollo::cyber::proto::TimerComponentConfig& config() const;
  ::apollo::cyber::proto::TimerComponentConfig* release_config();
  ::apollo::cyber::proto::TimerComponentConfig* mutable_config();
  void set_allocated_config(::apollo::cyber::proto::TimerComponentConfig* config);
  private:
  const ::apollo::cyber::proto::TimerComponentConfig& _internal_config() const;
  ::apollo::cyber::proto::TimerComponentConfig* _internal_mutable_config();
  public:
  void unsafe_arena_set_allocated_config(
      ::apollo::cyber::proto::TimerComponentConfig* config);
  ::apollo::cyber::proto::TimerComponentConfig* unsafe_arena_release_config();

  // @@protoc_insertion_point(class_scope:apollo.cyber.proto.TimerComponentInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr class_name_;
  ::apollo::cyber::proto::TimerComponentConfig* config_;
  friend struct ::TableStruct_cyber_2fproto_2fdag_5fconf_2eproto;
};
// -------------------------------------------------------------------

class ModuleConfig PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.cyber.proto.ModuleConfig) */ {
 public:
  inline ModuleConfig() : ModuleConfig(nullptr) {}
  virtual ~ModuleConfig();

  ModuleConfig(const ModuleConfig& from);
  ModuleConfig(ModuleConfig&& from) noexcept
    : ModuleConfig() {
    *this = ::std::move(from);
  }

  inline ModuleConfig& operator=(const ModuleConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleConfig& operator=(ModuleConfig&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ModuleConfig& default_instance();

  static inline const ModuleConfig* internal_default_instance() {
    return reinterpret_cast<const ModuleConfig*>(
               &_ModuleConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ModuleConfig& a, ModuleConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(ModuleConfig* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ModuleConfig* New() const final {
    return CreateMaybeMessage<ModuleConfig>(nullptr);
  }

  ModuleConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ModuleConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ModuleConfig& from);
  void MergeFrom(const ModuleConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModuleConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.cyber.proto.ModuleConfig";
  }
  protected:
  explicit ModuleConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto);
    return ::descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComponentsFieldNumber = 2,
    kTimerComponentsFieldNumber = 3,
    kModuleLibraryFieldNumber = 1,
  };
  // repeated .apollo.cyber.proto.ComponentInfo components = 2;
  int components_size() const;
  private:
  int _internal_components_size() const;
  public:
  void clear_components();
  ::apollo::cyber::proto::ComponentInfo* mutable_components(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::cyber::proto::ComponentInfo >*
      mutable_components();
  private:
  const ::apollo::cyber::proto::ComponentInfo& _internal_components(int index) const;
  ::apollo::cyber::proto::ComponentInfo* _internal_add_components();
  public:
  const ::apollo::cyber::proto::ComponentInfo& components(int index) const;
  ::apollo::cyber::proto::ComponentInfo* add_components();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::cyber::proto::ComponentInfo >&
      components() const;

  // repeated .apollo.cyber.proto.TimerComponentInfo timer_components = 3;
  int timer_components_size() const;
  private:
  int _internal_timer_components_size() const;
  public:
  void clear_timer_components();
  ::apollo::cyber::proto::TimerComponentInfo* mutable_timer_components(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::cyber::proto::TimerComponentInfo >*
      mutable_timer_components();
  private:
  const ::apollo::cyber::proto::TimerComponentInfo& _internal_timer_components(int index) const;
  ::apollo::cyber::proto::TimerComponentInfo* _internal_add_timer_components();
  public:
  const ::apollo::cyber::proto::TimerComponentInfo& timer_components(int index) const;
  ::apollo::cyber::proto::TimerComponentInfo* add_timer_components();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::cyber::proto::TimerComponentInfo >&
      timer_components() const;

  // optional string module_library = 1;
  bool has_module_library() const;
  private:
  bool _internal_has_module_library() const;
  public:
  void clear_module_library();
  const std::string& module_library() const;
  void set_module_library(const std::string& value);
  void set_module_library(std::string&& value);
  void set_module_library(const char* value);
  void set_module_library(const char* value, size_t size);
  std::string* mutable_module_library();
  std::string* release_module_library();
  void set_allocated_module_library(std::string* module_library);
  private:
  const std::string& _internal_module_library() const;
  void _internal_set_module_library(const std::string& value);
  std::string* _internal_mutable_module_library();
  public:

  // @@protoc_insertion_point(class_scope:apollo.cyber.proto.ModuleConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::cyber::proto::ComponentInfo > components_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::cyber::proto::TimerComponentInfo > timer_components_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr module_library_;
  friend struct ::TableStruct_cyber_2fproto_2fdag_5fconf_2eproto;
};
// -------------------------------------------------------------------

class DagConfig PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.cyber.proto.DagConfig) */ {
 public:
  inline DagConfig() : DagConfig(nullptr) {}
  virtual ~DagConfig();

  DagConfig(const DagConfig& from);
  DagConfig(DagConfig&& from) noexcept
    : DagConfig() {
    *this = ::std::move(from);
  }

  inline DagConfig& operator=(const DagConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline DagConfig& operator=(DagConfig&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DagConfig& default_instance();

  static inline const DagConfig* internal_default_instance() {
    return reinterpret_cast<const DagConfig*>(
               &_DagConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(DagConfig& a, DagConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(DagConfig* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DagConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DagConfig* New() const final {
    return CreateMaybeMessage<DagConfig>(nullptr);
  }

  DagConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DagConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DagConfig& from);
  void MergeFrom(const DagConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DagConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.cyber.proto.DagConfig";
  }
  protected:
  explicit DagConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto);
    return ::descriptor_table_cyber_2fproto_2fdag_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModuleConfigFieldNumber = 1,
  };
  // repeated .apollo.cyber.proto.ModuleConfig module_config = 1;
  int module_config_size() const;
  private:
  int _internal_module_config_size() const;
  public:
  void clear_module_config();
  ::apollo::cyber::proto::ModuleConfig* mutable_module_config(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::cyber::proto::ModuleConfig >*
      mutable_module_config();
  private:
  const ::apollo::cyber::proto::ModuleConfig& _internal_module_config(int index) const;
  ::apollo::cyber::proto::ModuleConfig* _internal_add_module_config();
  public:
  const ::apollo::cyber::proto::ModuleConfig& module_config(int index) const;
  ::apollo::cyber::proto::ModuleConfig* add_module_config();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::cyber::proto::ModuleConfig >&
      module_config() const;

  // @@protoc_insertion_point(class_scope:apollo.cyber.proto.DagConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::cyber::proto::ModuleConfig > module_config_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_cyber_2fproto_2fdag_5fconf_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ComponentInfo

// optional string class_name = 1;
inline bool ComponentInfo::_internal_has_class_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ComponentInfo::has_class_name() const {
  return _internal_has_class_name();
}
inline void ComponentInfo::clear_class_name() {
  class_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ComponentInfo::class_name() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ComponentInfo.class_name)
  return _internal_class_name();
}
inline void ComponentInfo::set_class_name(const std::string& value) {
  _internal_set_class_name(value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.ComponentInfo.class_name)
}
inline std::string* ComponentInfo::mutable_class_name() {
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ComponentInfo.class_name)
  return _internal_mutable_class_name();
}
inline const std::string& ComponentInfo::_internal_class_name() const {
  return class_name_.Get();
}
inline void ComponentInfo::_internal_set_class_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  class_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ComponentInfo::set_class_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  class_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.ComponentInfo.class_name)
}
inline void ComponentInfo::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  class_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.ComponentInfo.class_name)
}
inline void ComponentInfo::set_class_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  class_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.ComponentInfo.class_name)
}
inline std::string* ComponentInfo::_internal_mutable_class_name() {
  _has_bits_[0] |= 0x00000001u;
  return class_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ComponentInfo::release_class_name() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.ComponentInfo.class_name)
  if (!_internal_has_class_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return class_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ComponentInfo::set_allocated_class_name(std::string* class_name) {
  if (class_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  class_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), class_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.ComponentInfo.class_name)
}

// optional .apollo.cyber.proto.ComponentConfig config = 2;
inline bool ComponentInfo::_internal_has_config() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || config_ != nullptr);
  return value;
}
inline bool ComponentInfo::has_config() const {
  return _internal_has_config();
}
inline const ::apollo::cyber::proto::ComponentConfig& ComponentInfo::_internal_config() const {
  const ::apollo::cyber::proto::ComponentConfig* p = config_;
  return p != nullptr ? *p : reinterpret_cast<const ::apollo::cyber::proto::ComponentConfig&>(
      ::apollo::cyber::proto::_ComponentConfig_default_instance_);
}
inline const ::apollo::cyber::proto::ComponentConfig& ComponentInfo::config() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ComponentInfo.config)
  return _internal_config();
}
inline void ComponentInfo::unsafe_arena_set_allocated_config(
    ::apollo::cyber::proto::ComponentConfig* config) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(config_);
  }
  config_ = config;
  if (config) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:apollo.cyber.proto.ComponentInfo.config)
}
inline ::apollo::cyber::proto::ComponentConfig* ComponentInfo::release_config() {
  _has_bits_[0] &= ~0x00000002u;
  ::apollo::cyber::proto::ComponentConfig* temp = config_;
  config_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::apollo::cyber::proto::ComponentConfig* ComponentInfo::unsafe_arena_release_config() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.ComponentInfo.config)
  _has_bits_[0] &= ~0x00000002u;
  ::apollo::cyber::proto::ComponentConfig* temp = config_;
  config_ = nullptr;
  return temp;
}
inline ::apollo::cyber::proto::ComponentConfig* ComponentInfo::_internal_mutable_config() {
  _has_bits_[0] |= 0x00000002u;
  if (config_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::cyber::proto::ComponentConfig>(GetArena());
    config_ = p;
  }
  return config_;
}
inline ::apollo::cyber::proto::ComponentConfig* ComponentInfo::mutable_config() {
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ComponentInfo.config)
  return _internal_mutable_config();
}
inline void ComponentInfo::set_allocated_config(::apollo::cyber::proto::ComponentConfig* config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(config_);
  }
  if (config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(config)->GetArena();
    if (message_arena != submessage_arena) {
      config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.ComponentInfo.config)
}

// -------------------------------------------------------------------

// TimerComponentInfo

// optional string class_name = 1;
inline bool TimerComponentInfo::_internal_has_class_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TimerComponentInfo::has_class_name() const {
  return _internal_has_class_name();
}
inline void TimerComponentInfo::clear_class_name() {
  class_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TimerComponentInfo::class_name() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.TimerComponentInfo.class_name)
  return _internal_class_name();
}
inline void TimerComponentInfo::set_class_name(const std::string& value) {
  _internal_set_class_name(value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.TimerComponentInfo.class_name)
}
inline std::string* TimerComponentInfo::mutable_class_name() {
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.TimerComponentInfo.class_name)
  return _internal_mutable_class_name();
}
inline const std::string& TimerComponentInfo::_internal_class_name() const {
  return class_name_.Get();
}
inline void TimerComponentInfo::_internal_set_class_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  class_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void TimerComponentInfo::set_class_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  class_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.TimerComponentInfo.class_name)
}
inline void TimerComponentInfo::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  class_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.TimerComponentInfo.class_name)
}
inline void TimerComponentInfo::set_class_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  class_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.TimerComponentInfo.class_name)
}
inline std::string* TimerComponentInfo::_internal_mutable_class_name() {
  _has_bits_[0] |= 0x00000001u;
  return class_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* TimerComponentInfo::release_class_name() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.TimerComponentInfo.class_name)
  if (!_internal_has_class_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return class_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TimerComponentInfo::set_allocated_class_name(std::string* class_name) {
  if (class_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  class_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), class_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.TimerComponentInfo.class_name)
}

// optional .apollo.cyber.proto.TimerComponentConfig config = 2;
inline bool TimerComponentInfo::_internal_has_config() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || config_ != nullptr);
  return value;
}
inline bool TimerComponentInfo::has_config() const {
  return _internal_has_config();
}
inline const ::apollo::cyber::proto::TimerComponentConfig& TimerComponentInfo::_internal_config() const {
  const ::apollo::cyber::proto::TimerComponentConfig* p = config_;
  return p != nullptr ? *p : reinterpret_cast<const ::apollo::cyber::proto::TimerComponentConfig&>(
      ::apollo::cyber::proto::_TimerComponentConfig_default_instance_);
}
inline const ::apollo::cyber::proto::TimerComponentConfig& TimerComponentInfo::config() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.TimerComponentInfo.config)
  return _internal_config();
}
inline void TimerComponentInfo::unsafe_arena_set_allocated_config(
    ::apollo::cyber::proto::TimerComponentConfig* config) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(config_);
  }
  config_ = config;
  if (config) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:apollo.cyber.proto.TimerComponentInfo.config)
}
inline ::apollo::cyber::proto::TimerComponentConfig* TimerComponentInfo::release_config() {
  _has_bits_[0] &= ~0x00000002u;
  ::apollo::cyber::proto::TimerComponentConfig* temp = config_;
  config_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::apollo::cyber::proto::TimerComponentConfig* TimerComponentInfo::unsafe_arena_release_config() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.TimerComponentInfo.config)
  _has_bits_[0] &= ~0x00000002u;
  ::apollo::cyber::proto::TimerComponentConfig* temp = config_;
  config_ = nullptr;
  return temp;
}
inline ::apollo::cyber::proto::TimerComponentConfig* TimerComponentInfo::_internal_mutable_config() {
  _has_bits_[0] |= 0x00000002u;
  if (config_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::cyber::proto::TimerComponentConfig>(GetArena());
    config_ = p;
  }
  return config_;
}
inline ::apollo::cyber::proto::TimerComponentConfig* TimerComponentInfo::mutable_config() {
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.TimerComponentInfo.config)
  return _internal_mutable_config();
}
inline void TimerComponentInfo::set_allocated_config(::apollo::cyber::proto::TimerComponentConfig* config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(config_);
  }
  if (config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(config)->GetArena();
    if (message_arena != submessage_arena) {
      config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.TimerComponentInfo.config)
}

// -------------------------------------------------------------------

// ModuleConfig

// optional string module_library = 1;
inline bool ModuleConfig::_internal_has_module_library() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ModuleConfig::has_module_library() const {
  return _internal_has_module_library();
}
inline void ModuleConfig::clear_module_library() {
  module_library_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ModuleConfig::module_library() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ModuleConfig.module_library)
  return _internal_module_library();
}
inline void ModuleConfig::set_module_library(const std::string& value) {
  _internal_set_module_library(value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.ModuleConfig.module_library)
}
inline std::string* ModuleConfig::mutable_module_library() {
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ModuleConfig.module_library)
  return _internal_mutable_module_library();
}
inline const std::string& ModuleConfig::_internal_module_library() const {
  return module_library_.Get();
}
inline void ModuleConfig::_internal_set_module_library(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  module_library_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ModuleConfig::set_module_library(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  module_library_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.ModuleConfig.module_library)
}
inline void ModuleConfig::set_module_library(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  module_library_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.ModuleConfig.module_library)
}
inline void ModuleConfig::set_module_library(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  module_library_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.ModuleConfig.module_library)
}
inline std::string* ModuleConfig::_internal_mutable_module_library() {
  _has_bits_[0] |= 0x00000001u;
  return module_library_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ModuleConfig::release_module_library() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.ModuleConfig.module_library)
  if (!_internal_has_module_library()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return module_library_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ModuleConfig::set_allocated_module_library(std::string* module_library) {
  if (module_library != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  module_library_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), module_library,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.ModuleConfig.module_library)
}

// repeated .apollo.cyber.proto.ComponentInfo components = 2;
inline int ModuleConfig::_internal_components_size() const {
  return components_.size();
}
inline int ModuleConfig::components_size() const {
  return _internal_components_size();
}
inline void ModuleConfig::clear_components() {
  components_.Clear();
}
inline ::apollo::cyber::proto::ComponentInfo* ModuleConfig::mutable_components(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ModuleConfig.components)
  return components_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::cyber::proto::ComponentInfo >*
ModuleConfig::mutable_components() {
  // @@protoc_insertion_point(field_mutable_list:apollo.cyber.proto.ModuleConfig.components)
  return &components_;
}
inline const ::apollo::cyber::proto::ComponentInfo& ModuleConfig::_internal_components(int index) const {
  return components_.Get(index);
}
inline const ::apollo::cyber::proto::ComponentInfo& ModuleConfig::components(int index) const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ModuleConfig.components)
  return _internal_components(index);
}
inline ::apollo::cyber::proto::ComponentInfo* ModuleConfig::_internal_add_components() {
  return components_.Add();
}
inline ::apollo::cyber::proto::ComponentInfo* ModuleConfig::add_components() {
  // @@protoc_insertion_point(field_add:apollo.cyber.proto.ModuleConfig.components)
  return _internal_add_components();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::cyber::proto::ComponentInfo >&
ModuleConfig::components() const {
  // @@protoc_insertion_point(field_list:apollo.cyber.proto.ModuleConfig.components)
  return components_;
}

// repeated .apollo.cyber.proto.TimerComponentInfo timer_components = 3;
inline int ModuleConfig::_internal_timer_components_size() const {
  return timer_components_.size();
}
inline int ModuleConfig::timer_components_size() const {
  return _internal_timer_components_size();
}
inline void ModuleConfig::clear_timer_components() {
  timer_components_.Clear();
}
inline ::apollo::cyber::proto::TimerComponentInfo* ModuleConfig::mutable_timer_components(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ModuleConfig.timer_components)
  return timer_components_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::cyber::proto::TimerComponentInfo >*
ModuleConfig::mutable_timer_components() {
  // @@protoc_insertion_point(field_mutable_list:apollo.cyber.proto.ModuleConfig.timer_components)
  return &timer_components_;
}
inline const ::apollo::cyber::proto::TimerComponentInfo& ModuleConfig::_internal_timer_components(int index) const {
  return timer_components_.Get(index);
}
inline const ::apollo::cyber::proto::TimerComponentInfo& ModuleConfig::timer_components(int index) const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ModuleConfig.timer_components)
  return _internal_timer_components(index);
}
inline ::apollo::cyber::proto::TimerComponentInfo* ModuleConfig::_internal_add_timer_components() {
  return timer_components_.Add();
}
inline ::apollo::cyber::proto::TimerComponentInfo* ModuleConfig::add_timer_components() {
  // @@protoc_insertion_point(field_add:apollo.cyber.proto.ModuleConfig.timer_components)
  return _internal_add_timer_components();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::cyber::proto::TimerComponentInfo >&
ModuleConfig::timer_components() const {
  // @@protoc_insertion_point(field_list:apollo.cyber.proto.ModuleConfig.timer_components)
  return timer_components_;
}

// -------------------------------------------------------------------

// DagConfig

// repeated .apollo.cyber.proto.ModuleConfig module_config = 1;
inline int DagConfig::_internal_module_config_size() const {
  return module_config_.size();
}
inline int DagConfig::module_config_size() const {
  return _internal_module_config_size();
}
inline void DagConfig::clear_module_config() {
  module_config_.Clear();
}
inline ::apollo::cyber::proto::ModuleConfig* DagConfig::mutable_module_config(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.DagConfig.module_config)
  return module_config_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::cyber::proto::ModuleConfig >*
DagConfig::mutable_module_config() {
  // @@protoc_insertion_point(field_mutable_list:apollo.cyber.proto.DagConfig.module_config)
  return &module_config_;
}
inline const ::apollo::cyber::proto::ModuleConfig& DagConfig::_internal_module_config(int index) const {
  return module_config_.Get(index);
}
inline const ::apollo::cyber::proto::ModuleConfig& DagConfig::module_config(int index) const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.DagConfig.module_config)
  return _internal_module_config(index);
}
inline ::apollo::cyber::proto::ModuleConfig* DagConfig::_internal_add_module_config() {
  return module_config_.Add();
}
inline ::apollo::cyber::proto::ModuleConfig* DagConfig::add_module_config() {
  // @@protoc_insertion_point(field_add:apollo.cyber.proto.DagConfig.module_config)
  return _internal_add_module_config();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::cyber::proto::ModuleConfig >&
DagConfig::module_config() const {
  // @@protoc_insertion_point(field_list:apollo.cyber.proto.DagConfig.module_config)
  return module_config_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace cyber
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_cyber_2fproto_2fdag_5fconf_2eproto
