cyber_modules {
  key: "GPS"
  value: {
    dag_files: "/apollo/modules/drivers/gnss/dag/gnss.dag"
    dag_files: "/apollo/modules/localization/dag/dag_streaming_rtk_localization.dag"
    dag_files: "/apollo/modules/transform/dag/static_transform.dag"
    process_group: "compute_sched"
  }
}
cyber_modules {
  key: "Velodyne"
  value: {
    dag_files: "/apollo/modules/drivers/lidar/velodyne/dag/velodyne.dag"
  }
}
cyber_modules {
  key: "Camera"
  value: {
    dag_files: "/apollo/modules/drivers/camera/dag/camera.dag"
    dag_files: "/apollo/modules/drivers/video/dag/video.dag"
  }
}
modules {
  key: "Recorder"
  value: {
    start_command: "python /apollo/scripts/record_map_data.py --start"
    stop_command: "python /apollo/scripts/record_map_data.py --stop"
    process_monitor_config {
      command_keywords: "cyber_recorder record"
    }
  }
}
monitored_components {
  key: "Recorder"
  value: {
    process {
      command_keywords: "cyber_recorder record"
    }
    resource {
      disk_spaces {
        # For logs.
        path: "/apollo/data"
        insufficient_space_warning: 8
        insufficient_space_error: 2
      }
      disk_spaces {
        # For records.
        path: "/media/apollo/internal_nvme"
        insufficient_space_warning: 128
        insufficient_space_error: 32
      }
    }
  }
}
monitored_components {
  key: "GPS"
  value: {
    process {
      command_keywords: "mainboard"
      command_keywords: "/apollo/modules/drivers/gnss/dag/gnss.dag"
    }
    # We also have a special GPSMonitor to check message status.
  }
}
monitored_components {
  key: "Lidar 128"
  value: {
    channel {
      name: "/apollo/sensor/lidar128/compensator/PointCloud2"
    }
  }
}
monitored_components {
  key: "Front up lidar 16"
  value: {
    channel {
      name: "/apollo/sensor/lidar16/front/up/compensator/PointCloud2"
    }
  }
}
#monitored_components {
#  key: "Camer Long"
#  value: {
#    channel {
#      name: "/apollo/sensor/camera/front_12mm/image/compressed"
#    }
#  }
#}
