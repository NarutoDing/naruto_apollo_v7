{
  "parser": "babel-eslint",
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true,
      "modules": true,
      "legacyDecorators": true
    }
  },
  "env": {
    "browser": true
  },
  "rules": {
    // Require a semi colon at the end of a statement.
    "semi": ["error", "always"],
    // Maximum line length is 100.
    "max-len": ["error", 100, { "ignoreStrings": true }],
    // Always require curly brackets.
    "curly": "error",
    // specify whether double or single quotes should be used
    "quotes": ["error", "single", { "avoidEscape": true }],

    // Require the use of `===` and `!==`.
    "eqeqeq": "error",
    // Disallow the use of `eval()`.
    "no-eval": "error",
    // Every `async` function should have `await`.
    "require-await": "error",
    // Yoda style, do not do, we, here.
    "yoda": "error",
    // Disallow variable declarations from shadowing variables
    // declared in the outer scope.
    "no-shadow": "error",
    // Require initialization in variable declaration.
    "init-declarations": ["error", "always"],
    // Disallow unused variables.
    // TODO(breakds): Re-disallow when the repo is more stable.
    // "no-unused-vars": "error",
    // Require constructor names to begin with a capital letter.
    "new-cap": ["error", {
      "newIsCap": true,
      "capIsNew": false,
    }],
    // Require parentheses when invoking a constructor with no
    // arguments.
    "new-parens": "error",

    // disallow mixed spaces and tabs for indentation
    "no-mixed-spaces-and-tabs": "error",
    // Disallow trailing white space at the end of lines.
    "no-trailing-spaces": "error",
    // require or disallow space before blocks
    "space-before-blocks": "error",
    // require or disallow space before function opening parenthesis
    // https://eslint.org/docs/rules/space-before-function-paren
    "space-before-function-paren": ["error", {
      "anonymous": "always",
      "named": "never",
      "asyncArrow": "always"
    }],
    // require or disallow spaces inside parentheses
    "space-in-parens": ["error", "never"],
    // require spaces around operators
    "space-infix-ops": "error",
    // React specific rule. Enable this so that no-unused-vars respect
    // the use of a react component.
    "react/jsx-uses-vars": "error",
    // Enforce consistent spacing before and after the arrow in arrow
    // functions.
    "arrow-spacing": "error",
    // Disallow reassigning `const` variables.
    "no-const-assign": "error",
    // Disallow unnecessary constructors.
    "no-useless-constructor": "error",
    // Require `let` or `const` instead of `var`.
    "no-var": "error",
    // Require `const` declaration for variables that are never
    // reassigned after declared.
    "prefer-const": "error",

      // this option sets a specific tab width for your code
    // https://eslint.org/docs/rules/indent
    "indent": ["error", 2, {
      "SwitchCase": 1,
      "VariableDeclarator": 1,
      "outerIIFEBody": 1,
      // MemberExpression: null,
      "FunctionDeclaration": {
        "parameters": 1,
        "body": 1
      },
      "FunctionExpression": {
        "parameters": 1,
        "body": 1
      },
      "CallExpression": {
        "arguments": 1
      },
      "ArrayExpression": 1,
      "ObjectExpression": 1,
      "ImportDeclaration": 1,
      "flatTernaryExpressions": false,
      // list derived from https://github.com/benjamn/ast-types/blob/HEAD/def/jsx.js
      "ignoredNodes": ["JSXElement", "JSXElement > *", "JSXAttribute", "JSXIdentifier", "JSXNamespacedName", "JSXMemberExpression", "JSXSpreadAttribute", "JSXExpressionContainer", "JSXOpeningElement", "JSXClosingElement", "JSXFragment", "JSXOpeningFragment", "JSXClosingFragment", "JSXText", "JSXEmptyExpression", "JSXSpreadChild"],
      "ignoreComments": false
    }],
  },
  "plugins": [
    "react"
  ]
}