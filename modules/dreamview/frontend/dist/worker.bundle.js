!function(e){var t={};function i(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=t,i.d=function(e,t,o){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(i.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(o,n,function(t){return e[t]}.bind(null,n));return o},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="/",i(i.s=25)}([function(e,t,i){"use strict";var o,n,d=e.exports=i(1),r=i(14);d.codegen=i(39),d.fetch=i(40),d.path=i(41),d.fs=d.inquire("fs"),d.toArray=function(e){if(e){for(var t=Object.keys(e),i=new Array(t.length),o=0;o<t.length;)i[o]=e[t[o++]];return i}return[]},d.toObject=function(e){for(var t={},i=0;i<e.length;){var o=e[i++],n=e[i++];void 0!==n&&(t[o]=n)}return t};var a=/\\/g,p=/"/g;d.isReserved=function(e){return/^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(e)},d.safeProp=function(e){return!/^[$\w_]+$/.test(e)||d.isReserved(e)?'["'+e.replace(a,"\\\\").replace(p,'\\"')+'"]':"."+e},d.ucFirst=function(e){return e.charAt(0).toUpperCase()+e.substring(1)};var l=/_([a-z])/g;d.camelCase=function(e){return e.substring(0,1)+e.substring(1).replace(l,(function(e,t){return t.toUpperCase()}))},d.compareFieldsById=function(e,t){return e.id-t.id},d.decorateType=function(e,t){if(e.$type)return t&&e.$type.name!==t&&(d.decorateRoot.remove(e.$type),e.$type.name=t,d.decorateRoot.add(e.$type)),e.$type;o||(o=i(16));var n=new o(t||e.name);return d.decorateRoot.add(n),n.ctor=e,Object.defineProperty(e,"$type",{value:n,enumerable:!1}),Object.defineProperty(e.prototype,"$type",{value:n,enumerable:!1}),n};var s=0;d.decorateEnum=function(e){if(e.$type)return e.$type;n||(n=i(2));var t=new n("Enum"+s++,e);return d.decorateRoot.add(t),Object.defineProperty(e,"$type",{value:t,enumerable:!1}),t},Object.defineProperty(d,"decorateRoot",{get:function(){return r.decorated||(r.decorated=new(i(24)))}})},function(e,t,i){"use strict";(function(e){var o=t;function n(e,t,i){for(var o=Object.keys(t),n=0;n<o.length;++n)void 0!==e[o[n]]&&i||(e[o[n]]=t[o[n]]);return e}function d(e){function t(e,i){if(!(this instanceof t))return new t(e,i);Object.defineProperty(this,"message",{get:function(){return e}}),Error.captureStackTrace?Error.captureStackTrace(this,t):Object.defineProperty(this,"stack",{value:(new Error).stack||""}),i&&n(this,i)}return(t.prototype=Object.create(Error.prototype)).constructor=t,Object.defineProperty(t.prototype,"name",{get:function(){return e}}),t.prototype.toString=function(){return this.name+": "+this.message},t}o.asPromise=i(11),o.base64=i(30),o.EventEmitter=i(31),o.float=i(32),o.inquire=i(12),o.utf8=i(33),o.pool=i(34),o.LongBits=i(35),o.global="undefined"!=typeof window&&window||void 0!==e&&e||"undefined"!=typeof self&&self||this,o.emptyArray=Object.freeze?Object.freeze([]):[],o.emptyObject=Object.freeze?Object.freeze({}):{},o.isNode=Boolean(o.global.process&&o.global.process.versions&&o.global.process.versions.node),o.isInteger=Number.isInteger||function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e},o.isString=function(e){return"string"==typeof e||e instanceof String},o.isObject=function(e){return e&&"object"==typeof e},o.isset=o.isSet=function(e,t){var i=e[t];return!(null==i||!e.hasOwnProperty(t))&&("object"!=typeof i||(Array.isArray(i)?i.length:Object.keys(i).length)>0)},o.Buffer=function(){try{var e=o.inquire("buffer").Buffer;return e.prototype.utf8Write?e:null}catch(e){return null}}(),o._Buffer_from=null,o._Buffer_allocUnsafe=null,o.newBuffer=function(e){return"number"==typeof e?o.Buffer?o._Buffer_allocUnsafe(e):new o.Array(e):o.Buffer?o._Buffer_from(e):"undefined"==typeof Uint8Array?e:new Uint8Array(e)},o.Array="undefined"!=typeof Uint8Array?Uint8Array:Array,o.Long=o.global.dcodeIO&&o.global.dcodeIO.Long||o.global.Long||o.inquire("long"),o.key2Re=/^true|false|0|1$/,o.key32Re=/^-?(?:0|[1-9][0-9]*)$/,o.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,o.longToHash=function(e){return e?o.LongBits.from(e).toHash():o.LongBits.zeroHash},o.longFromHash=function(e,t){var i=o.LongBits.fromHash(e);return o.Long?o.Long.fromBits(i.lo,i.hi,t):i.toNumber(Boolean(t))},o.merge=n,o.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)},o.newError=d,o.ProtocolError=d("ProtocolError"),o.oneOfGetter=function(e){for(var t={},i=0;i<e.length;++i)t[e[i]]=1;return function(){for(var e=Object.keys(this),i=e.length-1;i>-1;--i)if(1===t[e[i]]&&void 0!==this[e[i]]&&null!==this[e[i]])return e[i]}},o.oneOfSetter=function(e){return function(t){for(var i=0;i<e.length;++i)e[i]!==t&&delete this[e[i]]}},o.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},o._configure=function(){var e=o.Buffer;e?(o._Buffer_from=e.from!==Uint8Array.from&&e.from||function(t,i){return new e(t,i)},o._Buffer_allocUnsafe=e.allocUnsafe||function(t){return new e(t)}):o._Buffer_from=o._Buffer_allocUnsafe=null}}).call(this,i(29))},function(e,t,i){"use strict";e.exports=r;var o=i(3);((r.prototype=Object.create(o.prototype)).constructor=r).className="Enum";var n=i(5),d=i(0);function r(e,t,i,n,d){if(o.call(this,e,i),t&&"object"!=typeof t)throw TypeError("values must be an object");if(this.valuesById={},this.values=Object.create(this.valuesById),this.comment=n,this.comments=d||{},this.reserved=void 0,t)for(var r=Object.keys(t),a=0;a<r.length;++a)"number"==typeof t[r[a]]&&(this.valuesById[this.values[r[a]]=t[r[a]]]=r[a])}r.fromJSON=function(e,t){var i=new r(e,t.values,t.options,t.comment,t.comments);return i.reserved=t.reserved,i},r.prototype.toJSON=function(e){var t=!!e&&Boolean(e.keepComments);return d.toObject(["options",this.options,"values",this.values,"reserved",this.reserved&&this.reserved.length?this.reserved:void 0,"comment",t?this.comment:void 0,"comments",t?this.comments:void 0])},r.prototype.add=function(e,t,i){if(!d.isString(e))throw TypeError("name must be a string");if(!d.isInteger(t))throw TypeError("id must be an integer");if(void 0!==this.values[e])throw Error("duplicate name '"+e+"' in "+this);if(this.isReservedId(t))throw Error("id "+t+" is reserved in "+this);if(this.isReservedName(e))throw Error("name '"+e+"' is reserved in "+this);if(void 0!==this.valuesById[t]){if(!this.options||!this.options.allow_alias)throw Error("duplicate id "+t+" in "+this);this.values[e]=t}else this.valuesById[this.values[e]=t]=e;return this.comments[e]=i||null,this},r.prototype.remove=function(e){if(!d.isString(e))throw TypeError("name must be a string");var t=this.values[e];if(null==t)throw Error("name '"+e+"' does not exist in "+this);return delete this.valuesById[t],delete this.values[e],delete this.comments[e],this},r.prototype.isReservedId=function(e){return n.isReservedId(this.reserved,e)},r.prototype.isReservedName=function(e){return n.isReservedName(this.reserved,e)}},function(e,t,i){"use strict";e.exports=d,d.className="ReflectionObject";var o,n=i(0);function d(e,t){if(!n.isString(e))throw TypeError("name must be a string");if(t&&!n.isObject(t))throw TypeError("options must be an object");this.options=t,this.name=e,this.parent=null,this.resolved=!1,this.comment=null,this.filename=null}Object.defineProperties(d.prototype,{root:{get:function(){for(var e=this;null!==e.parent;)e=e.parent;return e}},fullName:{get:function(){for(var e=[this.name],t=this.parent;t;)e.unshift(t.name),t=t.parent;return e.join(".")}}}),d.prototype.toJSON=function(){throw Error()},d.prototype.onAdd=function(e){this.parent&&this.parent!==e&&this.parent.remove(this),this.parent=e,this.resolved=!1;var t=e.root;t instanceof o&&t._handleAdd(this)},d.prototype.onRemove=function(e){var t=e.root;t instanceof o&&t._handleRemove(this),this.parent=null,this.resolved=!1},d.prototype.resolve=function(){return this.resolved||this.root instanceof o&&(this.resolved=!0),this},d.prototype.getOption=function(e){if(this.options)return this.options[e]},d.prototype.setOption=function(e,t,i){return i&&this.options&&void 0!==this.options[e]||((this.options||(this.options={}))[e]=t),this},d.prototype.setOptions=function(e,t){if(e)for(var i=Object.keys(e),o=0;o<i.length;++o)this.setOption(i[o],e[i[o]],t);return this},d.prototype.toString=function(){var e=this.constructor.className,t=this.fullName;return t.length?e+" "+t:e},d._configure=function(e){o=e}},function(e,t,i){"use strict";e.exports=l;var o=i(3);((l.prototype=Object.create(o.prototype)).constructor=l).className="Field";var n,d=i(2),r=i(6),a=i(0),p=/^required|optional|repeated$/;function l(e,t,i,n,d,l,s){if(a.isObject(n)?(s=d,l=n,n=d=void 0):a.isObject(d)&&(s=l,l=d,d=void 0),o.call(this,e,l),!a.isInteger(t)||t<0)throw TypeError("id must be a non-negative integer");if(!a.isString(i))throw TypeError("type must be a string");if(void 0!==n&&!p.test(n=n.toString().toLowerCase()))throw TypeError("rule must be a string rule");if(void 0!==d&&!a.isString(d))throw TypeError("extend must be a string");this.rule=n&&"optional"!==n?n:void 0,this.type=i,this.id=t,this.extend=d||void 0,this.required="required"===n,this.optional=!this.required,this.repeated="repeated"===n,this.map=!1,this.message=null,this.partOf=null,this.typeDefault=null,this.defaultValue=null,this.long=!!a.Long&&void 0!==r.long[i],this.bytes="bytes"===i,this.resolvedType=null,this.extensionField=null,this.declaringField=null,this._packed=null,this.comment=s}l.fromJSON=function(e,t){return new l(e,t.id,t.type,t.rule,t.extend,t.options,t.comment)},Object.defineProperty(l.prototype,"packed",{get:function(){return null===this._packed&&(this._packed=!1!==this.getOption("packed")),this._packed}}),l.prototype.setOption=function(e,t,i){return"packed"===e&&(this._packed=null),o.prototype.setOption.call(this,e,t,i)},l.prototype.toJSON=function(e){var t=!!e&&Boolean(e.keepComments);return a.toObject(["rule","optional"!==this.rule&&this.rule||void 0,"type",this.type,"id",this.id,"extend",this.extend,"options",this.options,"comment",t?this.comment:void 0])},l.prototype.resolve=function(){if(this.resolved)return this;if(void 0===(this.typeDefault=r.defaults[this.type])&&(this.resolvedType=(this.declaringField?this.declaringField.parent:this.parent).lookupTypeOrEnum(this.type),this.resolvedType instanceof n?this.typeDefault=null:this.typeDefault=this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]),this.options&&null!=this.options.default&&(this.typeDefault=this.options.default,this.resolvedType instanceof d&&"string"==typeof this.typeDefault&&(this.typeDefault=this.resolvedType.values[this.typeDefault])),this.options&&(!0!==this.options.packed&&(void 0===this.options.packed||!this.resolvedType||this.resolvedType instanceof d)||delete this.options.packed,Object.keys(this.options).length||(this.options=void 0)),this.long)this.typeDefault=a.Long.fromNumber(this.typeDefault,"u"===this.type.charAt(0)),Object.freeze&&Object.freeze(this.typeDefault);else if(this.bytes&&"string"==typeof this.typeDefault){var e;a.base64.test(this.typeDefault)?a.base64.decode(this.typeDefault,e=a.newBuffer(a.base64.length(this.typeDefault)),0):a.utf8.write(this.typeDefault,e=a.newBuffer(a.utf8.length(this.typeDefault)),0),this.typeDefault=e}return this.map?this.defaultValue=a.emptyObject:this.repeated?this.defaultValue=a.emptyArray:this.defaultValue=this.typeDefault,this.parent instanceof n&&(this.parent.ctor.prototype[this.name]=this.defaultValue),o.prototype.resolve.call(this)},l.d=function(e,t,i,o){return"function"==typeof t?t=a.decorateType(t).name:t&&"object"==typeof t&&(t=a.decorateEnum(t).name),function(n,d){a.decorateType(n.constructor).add(new l(d,e,t,i,{default:o}))}},l._configure=function(e){n=e}},function(e,t,i){"use strict";e.exports=s;var o=i(3);((s.prototype=Object.create(o.prototype)).constructor=s).className="Namespace";var n,d,r,a=i(4),p=i(0);function l(e,t){if(e&&e.length){for(var i={},o=0;o<e.length;++o)i[e[o].name]=e[o].toJSON(t);return i}}function s(e,t){o.call(this,e,t),this.nested=void 0,this._nestedArray=null}function u(e){return e._nestedArray=null,e}s.fromJSON=function(e,t){return new s(e,t.options).addJSON(t.nested)},s.arrayToJSON=l,s.isReservedId=function(e,t){if(e)for(var i=0;i<e.length;++i)if("string"!=typeof e[i]&&e[i][0]<=t&&e[i][1]>t)return!0;return!1},s.isReservedName=function(e,t){if(e)for(var i=0;i<e.length;++i)if(e[i]===t)return!0;return!1},Object.defineProperty(s.prototype,"nestedArray",{get:function(){return this._nestedArray||(this._nestedArray=p.toArray(this.nested))}}),s.prototype.toJSON=function(e){return p.toObject(["options",this.options,"nested",l(this.nestedArray,e)])},s.prototype.addJSON=function(e){if(e)for(var t,i=Object.keys(e),o=0;o<i.length;++o)t=e[i[o]],this.add((void 0!==t.fields?n.fromJSON:void 0!==t.values?r.fromJSON:void 0!==t.methods?d.fromJSON:void 0!==t.id?a.fromJSON:s.fromJSON)(i[o],t));return this},s.prototype.get=function(e){return this.nested&&this.nested[e]||null},s.prototype.getEnum=function(e){if(this.nested&&this.nested[e]instanceof r)return this.nested[e].values;throw Error("no such enum: "+e)},s.prototype.add=function(e){if(!(e instanceof a&&void 0!==e.extend||e instanceof n||e instanceof r||e instanceof d||e instanceof s))throw TypeError("object must be a valid nested object");if(this.nested){var t=this.get(e.name);if(t){if(!(t instanceof s&&e instanceof s)||t instanceof n||t instanceof d)throw Error("duplicate name '"+e.name+"' in "+this);for(var i=t.nestedArray,o=0;o<i.length;++o)e.add(i[o]);this.remove(t),this.nested||(this.nested={}),e.setOptions(t.options,!0)}}else this.nested={};return this.nested[e.name]=e,e.onAdd(this),u(this)},s.prototype.remove=function(e){if(!(e instanceof o))throw TypeError("object must be a ReflectionObject");if(e.parent!==this)throw Error(e+" is not a member of "+this);return delete this.nested[e.name],Object.keys(this.nested).length||(this.nested=void 0),e.onRemove(this),u(this)},s.prototype.define=function(e,t){if(p.isString(e))e=e.split(".");else if(!Array.isArray(e))throw TypeError("illegal path");if(e&&e.length&&""===e[0])throw Error("path must be relative");for(var i=this;e.length>0;){var o=e.shift();if(i.nested&&i.nested[o]){if(!((i=i.nested[o])instanceof s))throw Error("path conflicts with non-namespace objects")}else i.add(i=new s(o))}return t&&i.addJSON(t),i},s.prototype.resolveAll=function(){for(var e=this.nestedArray,t=0;t<e.length;)e[t]instanceof s?e[t++].resolveAll():e[t++].resolve();return this.resolve()},s.prototype.lookup=function(e,t,i){if("boolean"==typeof t?(i=t,t=void 0):t&&!Array.isArray(t)&&(t=[t]),p.isString(e)&&e.length){if("."===e)return this.root;e=e.split(".")}else if(!e.length)return this;if(""===e[0])return this.root.lookup(e.slice(1),t);var o=this.get(e[0]);if(o){if(1===e.length){if(!t||t.indexOf(o.constructor)>-1)return o}else if(o instanceof s&&(o=o.lookup(e.slice(1),t,!0)))return o}else for(var n=0;n<this.nestedArray.length;++n)if(this._nestedArray[n]instanceof s&&(o=this._nestedArray[n].lookup(e,t,!0)))return o;return null===this.parent||i?null:this.parent.lookup(e,t)},s.prototype.lookupType=function(e){var t=this.lookup(e,[n]);if(!t)throw Error("no such type: "+e);return t},s.prototype.lookupEnum=function(e){var t=this.lookup(e,[r]);if(!t)throw Error("no such Enum '"+e+"' in "+this);return t},s.prototype.lookupTypeOrEnum=function(e){var t=this.lookup(e,[n,r]);if(!t)throw Error("no such Type or Enum '"+e+"' in "+this);return t},s.prototype.lookupService=function(e){var t=this.lookup(e,[d]);if(!t)throw Error("no such Service '"+e+"' in "+this);return t},s._configure=function(e,t,i){n=e,d=t,r=i}},function(e,t,i){"use strict";var o=t,n=i(0),d=["double","float","int32","uint32","sint32","fixed32","sfixed32","int64","uint64","sint64","fixed64","sfixed64","bool","string","bytes"];function r(e,t){var i=0,o={};for(t|=0;i<e.length;)o[d[i+t]]=e[i++];return o}o.basic=r([1,5,0,0,0,5,5,0,0,0,1,1,0,2,2]),o.defaults=r([0,0,0,0,0,0,0,0,0,0,0,0,!1,"",n.emptyArray,null]),o.long=r([0,0,0,1,1],7),o.mapKey=r([0,0,0,5,5,0,0,0,1,1,0,2],2),o.packed=r([1,5,0,0,0,5,5,0,0,0,1,1,0])},function(e,t,i){"use strict";e.exports=u;var o,n=i(1),d=n.LongBits,r=n.base64,a=n.utf8;function p(e,t,i){this.fn=e,this.len=t,this.next=void 0,this.val=i}function l(){}function s(e){this.head=e.head,this.tail=e.tail,this.len=e.len,this.next=e.states}function u(){this.len=0,this.head=new p(l,0,0),this.tail=this.head,this.states=null}var y=function(){return n.Buffer?function(){return(u.create=function(){return new o})()}:function(){return new u}};function f(e,t,i){t[i]=255&e}function c(e,t){this.len=e,this.next=void 0,this.val=t}function g(e,t,i){for(;e.hi;)t[i++]=127&e.lo|128,e.lo=(e.lo>>>7|e.hi<<25)>>>0,e.hi>>>=7;for(;e.lo>127;)t[i++]=127&e.lo|128,e.lo=e.lo>>>7;t[i++]=e.lo}function h(e,t,i){t[i]=255&e,t[i+1]=e>>>8&255,t[i+2]=e>>>16&255,t[i+3]=e>>>24}u.create=y(),u.alloc=function(e){return new n.Array(e)},n.Array!==Array&&(u.alloc=n.pool(u.alloc,n.Array.prototype.subarray)),u.prototype._push=function(e,t,i){return this.tail=this.tail.next=new p(e,t,i),this.len+=t,this},c.prototype=Object.create(p.prototype),c.prototype.fn=function(e,t,i){for(;e>127;)t[i++]=127&e|128,e>>>=7;t[i]=e},u.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new c((e>>>=0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this},u.prototype.int32=function(e){return e<0?this._push(g,10,d.fromNumber(e)):this.uint32(e)},u.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)},u.prototype.uint64=function(e){var t=d.from(e);return this._push(g,t.length(),t)},u.prototype.int64=u.prototype.uint64,u.prototype.sint64=function(e){var t=d.from(e).zzEncode();return this._push(g,t.length(),t)},u.prototype.bool=function(e){return this._push(f,1,e?1:0)},u.prototype.fixed32=function(e){return this._push(h,4,e>>>0)},u.prototype.sfixed32=u.prototype.fixed32,u.prototype.fixed64=function(e){var t=d.from(e);return this._push(h,4,t.lo)._push(h,4,t.hi)},u.prototype.sfixed64=u.prototype.fixed64,u.prototype.float=function(e){return this._push(n.float.writeFloatLE,4,e)},u.prototype.double=function(e){return this._push(n.float.writeDoubleLE,8,e)};var b=n.Array.prototype.set?function(e,t,i){t.set(e,i)}:function(e,t,i){for(var o=0;o<e.length;++o)t[i+o]=e[o]};u.prototype.bytes=function(e){var t=e.length>>>0;if(!t)return this._push(f,1,0);if(n.isString(e)){var i=u.alloc(t=r.length(e));r.decode(e,i,0),e=i}return this.uint32(t)._push(b,t,e)},u.prototype.string=function(e){var t=a.length(e);return t?this.uint32(t)._push(a.write,t,e):this._push(f,1,0)},u.prototype.fork=function(){return this.states=new s(this),this.head=this.tail=new p(l,0,0),this.len=0,this},u.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new p(l,0,0),this.len=0),this},u.prototype.ldelim=function(){var e=this.head,t=this.tail,i=this.len;return this.reset().uint32(i),i&&(this.tail.next=e.next,this.tail=t,this.len+=i),this},u.prototype.finish=function(){for(var e=this.head.next,t=this.constructor.alloc(this.len),i=0;e;)e.fn(e.val,t,i),i+=e.len,e=e.next;return t},u._configure=function(e){o=e,u.create=y(),o._configure()}},function(e,t,i){"use strict";e.exports=p;var o,n=i(1),d=n.LongBits,r=n.utf8;function a(e,t){return RangeError("index out of range: "+e.pos+" + "+(t||1)+" > "+e.len)}function p(e){this.buf=e,this.pos=0,this.len=e.length}var l,s="undefined"!=typeof Uint8Array?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new p(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new p(e);throw Error("illegal buffer")},u=function(){return n.Buffer?function(e){return(p.create=function(e){return n.Buffer.isBuffer(e)?new o(e):s(e)})(e)}:s};function y(){var e=new d(0,0),t=0;if(!(this.len-this.pos>4)){for(;t<3;++t){if(this.pos>=this.len)throw a(this);if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e}return e.lo=(e.lo|(127&this.buf[this.pos++])<<7*t)>>>0,e}for(;t<4;++t)if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e;if(e.lo=(e.lo|(127&this.buf[this.pos])<<28)>>>0,e.hi=(e.hi|(127&this.buf[this.pos])>>4)>>>0,this.buf[this.pos++]<128)return e;if(t=0,this.len-this.pos>4){for(;t<5;++t)if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}else for(;t<5;++t){if(this.pos>=this.len)throw a(this);if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}throw Error("invalid varint encoding")}function f(e,t){return(e[t-4]|e[t-3]<<8|e[t-2]<<16|e[t-1]<<24)>>>0}function c(){if(this.pos+8>this.len)throw a(this,8);return new d(f(this.buf,this.pos+=4),f(this.buf,this.pos+=4))}p.create=u(),p.prototype._slice=n.Array.prototype.subarray||n.Array.prototype.slice,p.prototype.uint32=(l=4294967295,function(){if(l=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128)return l;if(l=(l|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)return l;if(l=(l|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)return l;if(l=(l|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)return l;if(l=(l|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128)return l;if((this.pos+=5)>this.len)throw this.pos=this.len,a(this,10);return l}),p.prototype.int32=function(){return 0|this.uint32()},p.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(1&e)|0},p.prototype.bool=function(){return 0!==this.uint32()},p.prototype.fixed32=function(){if(this.pos+4>this.len)throw a(this,4);return f(this.buf,this.pos+=4)},p.prototype.sfixed32=function(){if(this.pos+4>this.len)throw a(this,4);return 0|f(this.buf,this.pos+=4)},p.prototype.float=function(){if(this.pos+4>this.len)throw a(this,4);var e=n.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e},p.prototype.double=function(){if(this.pos+8>this.len)throw a(this,4);var e=n.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e},p.prototype.bytes=function(){var e=this.uint32(),t=this.pos,i=this.pos+e;if(i>this.len)throw a(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(t,i):t===i?new this.buf.constructor(0):this._slice.call(this.buf,t,i)},p.prototype.string=function(){var e=this.bytes();return r.read(e,0,e.length)},p.prototype.skip=function(e){if("number"==typeof e){if(this.pos+e>this.len)throw a(this,e);this.pos+=e}else do{if(this.pos>=this.len)throw a(this)}while(128&this.buf[this.pos++]);return this},p.prototype.skipType=function(e){switch(e){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;4!=(e=7&this.uint32());)this.skipType(e);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+e+" at offset "+this.pos)}return this},p._configure=function(e){o=e,p.create=u(),o._configure();var t=n.Long?"toLong":"toNumber";n.merge(p.prototype,{int64:function(){return y.call(this)[t](!1)},uint64:function(){return y.call(this)[t](!0)},sint64:function(){return y.call(this).zzDecode()[t](!1)},fixed64:function(){return c.call(this)[t](!0)},sfixed64:function(){return c.call(this)[t](!1)}})}},function(e,t,i){"use strict";e.exports=r;var o=i(3);((r.prototype=Object.create(o.prototype)).constructor=r).className="OneOf";var n=i(4),d=i(0);function r(e,t,i,n){if(Array.isArray(t)||(i=t,t=void 0),o.call(this,e,i),void 0!==t&&!Array.isArray(t))throw TypeError("fieldNames must be an Array");this.oneof=t||[],this.fieldsArray=[],this.comment=n}function a(e){if(e.parent)for(var t=0;t<e.fieldsArray.length;++t)e.fieldsArray[t].parent||e.parent.add(e.fieldsArray[t])}r.fromJSON=function(e,t){return new r(e,t.oneof,t.options,t.comment)},r.prototype.toJSON=function(e){var t=!!e&&Boolean(e.keepComments);return d.toObject(["options",this.options,"oneof",this.oneof,"comment",t?this.comment:void 0])},r.prototype.add=function(e){if(!(e instanceof n))throw TypeError("field must be a Field");return e.parent&&e.parent!==this.parent&&e.parent.remove(e),this.oneof.push(e.name),this.fieldsArray.push(e),e.partOf=this,a(this),this},r.prototype.remove=function(e){if(!(e instanceof n))throw TypeError("field must be a Field");var t=this.fieldsArray.indexOf(e);if(t<0)throw Error(e+" is not a member of "+this);return this.fieldsArray.splice(t,1),(t=this.oneof.indexOf(e.name))>-1&&this.oneof.splice(t,1),e.partOf=null,this},r.prototype.onAdd=function(e){o.prototype.onAdd.call(this,e);for(var t=0;t<this.oneof.length;++t){var i=e.get(this.oneof[t]);i&&!i.partOf&&(i.partOf=this,this.fieldsArray.push(i))}a(this)},r.prototype.onRemove=function(e){for(var t,i=0;i<this.fieldsArray.length;++i)(t=this.fieldsArray[i]).parent&&t.parent.remove(t);o.prototype.onRemove.call(this,e)},r.d=function(){for(var e=new Array(arguments.length),t=0;t<arguments.length;)e[t]=arguments[t++];return function(t,i){d.decorateType(t.constructor).add(new r(i,e)),Object.defineProperty(t,i,{get:d.oneOfGetter(e),set:d.oneOfSetter(e)})}}},function(e,t,i){"use strict";e.exports=n;var o=i(1);function n(e){if(e)for(var t=Object.keys(e),i=0;i<t.length;++i)this[t[i]]=e[t[i]]}n.create=function(e){return this.$type.create(e)},n.encode=function(e,t){return this.$type.encode(e,t)},n.encodeDelimited=function(e,t){return this.$type.encodeDelimited(e,t)},n.decode=function(e){return this.$type.decode(e)},n.decodeDelimited=function(e){return this.$type.decodeDelimited(e)},n.verify=function(e){return this.$type.verify(e)},n.fromObject=function(e){return this.$type.fromObject(e)},n.toObject=function(e,t){return this.$type.toObject(e,t)},n.prototype.toJSON=function(){return this.$type.toObject(this,o.toJSONOptions)}},function(e,t,i){"use strict";e.exports=function(e,t){var i=new Array(arguments.length-1),o=0,n=2,d=!0;for(;n<arguments.length;)i[o++]=arguments[n++];return new Promise((function(n,r){i[o]=function(e){if(d)if(d=!1,e)r(e);else{for(var t=new Array(arguments.length-1),i=0;i<t.length;)t[i++]=arguments[i];n.apply(null,t)}};try{e.apply(t||null,i)}catch(e){d&&(d=!1,r(e))}}))}},function(module,exports,__webpack_require__){"use strict";function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(e){}return null}module.exports=inquire},function(e,t,i){"use strict";t.Service=i(38)},function(e,t,i){"use strict";e.exports={}},function(e,t,i){"use strict";e.exports=function(e){for(var t,i=d.codegen(["m","w"],e.name+"$encode")("if(!w)")("w=Writer.create()"),a=e.fieldsArray.slice().sort(d.compareFieldsById),p=0;p<a.length;++p){var l=a[p].resolve(),s=e._fieldsArray.indexOf(l),u=l.resolvedType instanceof o?"int32":l.type,y=n.basic[u];t="m"+d.safeProp(l.name),l.map?(i("if(%s!=null&&Object.hasOwnProperty.call(m,%j)){",t,l.name)("for(var ks=Object.keys(%s),i=0;i<ks.length;++i){",t)("w.uint32(%i).fork().uint32(%i).%s(ks[i])",(l.id<<3|2)>>>0,8|n.mapKey[l.keyType],l.keyType),void 0===y?i("types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()",s,t):i(".uint32(%i).%s(%s[ks[i]]).ldelim()",16|y,u,t),i("}")("}")):l.repeated?(i("if(%s!=null&&%s.length){",t,t),l.packed&&void 0!==n.packed[u]?i("w.uint32(%i).fork()",(l.id<<3|2)>>>0)("for(var i=0;i<%s.length;++i)",t)("w.%s(%s[i])",u,t)("w.ldelim()"):(i("for(var i=0;i<%s.length;++i)",t),void 0===y?r(i,l,s,t+"[i]"):i("w.uint32(%i).%s(%s[i])",(l.id<<3|y)>>>0,u,t)),i("}")):(l.optional&&i("if(%s!=null&&Object.hasOwnProperty.call(m,%j))",t,l.name),void 0===y?r(i,l,s,t):i("w.uint32(%i).%s(%s)",(l.id<<3|y)>>>0,u,t))}return i("return w")};var o=i(2),n=i(6),d=i(0);function r(e,t,i,o){return t.resolvedType.group?e("types[%i].encode(%s,w.uint32(%i)).uint32(%i)",i,o,(t.id<<3|3)>>>0,(t.id<<3|4)>>>0):e("types[%i].encode(%s,w.uint32(%i).fork()).ldelim()",i,o,(t.id<<3|2)>>>0)}},function(e,t,i){"use strict";e.exports=m;var o=i(5);((m.prototype=Object.create(o.prototype)).constructor=m).className="Type";var n=i(2),d=i(9),r=i(4),a=i(17),p=i(18),l=i(10),s=i(8),u=i(7),y=i(0),f=i(15),c=i(20),g=i(21),h=i(22),b=i(23);function m(e,t){o.call(this,e,t),this.fields={},this.oneofs=void 0,this.extensions=void 0,this.reserved=void 0,this.group=void 0,this._fieldsById=null,this._fieldsArray=null,this._oneofsArray=null,this._ctor=null}function S(e){return e._fieldsById=e._fieldsArray=e._oneofsArray=null,delete e.encode,delete e.decode,delete e.verify,e}Object.defineProperties(m.prototype,{fieldsById:{get:function(){if(this._fieldsById)return this._fieldsById;this._fieldsById={};for(var e=Object.keys(this.fields),t=0;t<e.length;++t){var i=this.fields[e[t]],o=i.id;if(this._fieldsById[o])throw Error("duplicate id "+o+" in "+this);this._fieldsById[o]=i}return this._fieldsById}},fieldsArray:{get:function(){return this._fieldsArray||(this._fieldsArray=y.toArray(this.fields))}},oneofsArray:{get:function(){return this._oneofsArray||(this._oneofsArray=y.toArray(this.oneofs))}},ctor:{get:function(){return this._ctor||(this.ctor=m.generateConstructor(this)())},set:function(e){var t=e.prototype;t instanceof l||((e.prototype=new l).constructor=e,y.merge(e.prototype,t)),e.$type=e.prototype.$type=this,y.merge(e,l,!0),this._ctor=e;for(var i=0;i<this.fieldsArray.length;++i)this._fieldsArray[i].resolve();var o={};for(i=0;i<this.oneofsArray.length;++i)o[this._oneofsArray[i].resolve().name]={get:y.oneOfGetter(this._oneofsArray[i].oneof),set:y.oneOfSetter(this._oneofsArray[i].oneof)};i&&Object.defineProperties(e.prototype,o)}}}),m.generateConstructor=function(e){for(var t,i=y.codegen(["p"],e.name),o=0;o<e.fieldsArray.length;++o)(t=e._fieldsArray[o]).map?i("this%s={}",y.safeProp(t.name)):t.repeated&&i("this%s=[]",y.safeProp(t.name));return i("if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)")("this[ks[i]]=p[ks[i]]")},m.fromJSON=function(e,t){var i=new m(e,t.options);i.extensions=t.extensions,i.reserved=t.reserved;for(var l=Object.keys(t.fields),s=0;s<l.length;++s)i.add((void 0!==t.fields[l[s]].keyType?a.fromJSON:r.fromJSON)(l[s],t.fields[l[s]]));if(t.oneofs)for(l=Object.keys(t.oneofs),s=0;s<l.length;++s)i.add(d.fromJSON(l[s],t.oneofs[l[s]]));if(t.nested)for(l=Object.keys(t.nested),s=0;s<l.length;++s){var u=t.nested[l[s]];i.add((void 0!==u.id?r.fromJSON:void 0!==u.fields?m.fromJSON:void 0!==u.values?n.fromJSON:void 0!==u.methods?p.fromJSON:o.fromJSON)(l[s],u))}return t.extensions&&t.extensions.length&&(i.extensions=t.extensions),t.reserved&&t.reserved.length&&(i.reserved=t.reserved),t.group&&(i.group=!0),t.comment&&(i.comment=t.comment),i},m.prototype.toJSON=function(e){var t=o.prototype.toJSON.call(this,e),i=!!e&&Boolean(e.keepComments);return y.toObject(["options",t&&t.options||void 0,"oneofs",o.arrayToJSON(this.oneofsArray,e),"fields",o.arrayToJSON(this.fieldsArray.filter((function(e){return!e.declaringField})),e)||{},"extensions",this.extensions&&this.extensions.length?this.extensions:void 0,"reserved",this.reserved&&this.reserved.length?this.reserved:void 0,"group",this.group||void 0,"nested",t&&t.nested||void 0,"comment",i?this.comment:void 0])},m.prototype.resolveAll=function(){for(var e=this.fieldsArray,t=0;t<e.length;)e[t++].resolve();var i=this.oneofsArray;for(t=0;t<i.length;)i[t++].resolve();return o.prototype.resolveAll.call(this)},m.prototype.get=function(e){return this.fields[e]||this.oneofs&&this.oneofs[e]||this.nested&&this.nested[e]||null},m.prototype.add=function(e){if(this.get(e.name))throw Error("duplicate name '"+e.name+"' in "+this);if(e instanceof r&&void 0===e.extend){if(this._fieldsById?this._fieldsById[e.id]:this.fieldsById[e.id])throw Error("duplicate id "+e.id+" in "+this);if(this.isReservedId(e.id))throw Error("id "+e.id+" is reserved in "+this);if(this.isReservedName(e.name))throw Error("name '"+e.name+"' is reserved in "+this);return e.parent&&e.parent.remove(e),this.fields[e.name]=e,e.message=this,e.onAdd(this),S(this)}return e instanceof d?(this.oneofs||(this.oneofs={}),this.oneofs[e.name]=e,e.onAdd(this),S(this)):o.prototype.add.call(this,e)},m.prototype.remove=function(e){if(e instanceof r&&void 0===e.extend){if(!this.fields||this.fields[e.name]!==e)throw Error(e+" is not a member of "+this);return delete this.fields[e.name],e.parent=null,e.onRemove(this),S(this)}if(e instanceof d){if(!this.oneofs||this.oneofs[e.name]!==e)throw Error(e+" is not a member of "+this);return delete this.oneofs[e.name],e.parent=null,e.onRemove(this),S(this)}return o.prototype.remove.call(this,e)},m.prototype.isReservedId=function(e){return o.isReservedId(this.reserved,e)},m.prototype.isReservedName=function(e){return o.isReservedName(this.reserved,e)},m.prototype.create=function(e){return new this.ctor(e)},m.prototype.setup=function(){for(var e=this.fullName,t=[],i=0;i<this.fieldsArray.length;++i)t.push(this._fieldsArray[i].resolve().resolvedType);this.encode=f(this)({Writer:u,types:t,util:y}),this.decode=c(this)({Reader:s,types:t,util:y}),this.verify=g(this)({types:t,util:y}),this.fromObject=h.fromObject(this)({types:t,util:y}),this.toObject=h.toObject(this)({types:t,util:y});var o=b[e];if(o){var n=Object.create(this);n.fromObject=this.fromObject,this.fromObject=o.fromObject.bind(n),n.toObject=this.toObject,this.toObject=o.toObject.bind(n)}return this},m.prototype.encode=function(e,t){return this.setup().encode(e,t)},m.prototype.encodeDelimited=function(e,t){return this.encode(e,t&&t.len?t.fork():t).ldelim()},m.prototype.decode=function(e,t){return this.setup().decode(e,t)},m.prototype.decodeDelimited=function(e){return e instanceof s||(e=s.create(e)),this.decode(e,e.uint32())},m.prototype.verify=function(e){return this.setup().verify(e)},m.prototype.fromObject=function(e){return this.setup().fromObject(e)},m.prototype.toObject=function(e,t){return this.setup().toObject(e,t)},m.d=function(e){return function(t){y.decorateType(t,e)}}},function(e,t,i){"use strict";e.exports=r;var o=i(4);((r.prototype=Object.create(o.prototype)).constructor=r).className="MapField";var n=i(6),d=i(0);function r(e,t,i,n,r,a){if(o.call(this,e,t,n,void 0,void 0,r,a),!d.isString(i))throw TypeError("keyType must be a string");this.keyType=i,this.resolvedKeyType=null,this.map=!0}r.fromJSON=function(e,t){return new r(e,t.id,t.keyType,t.type,t.options,t.comment)},r.prototype.toJSON=function(e){var t=!!e&&Boolean(e.keepComments);return d.toObject(["keyType",this.keyType,"type",this.type,"id",this.id,"extend",this.extend,"options",this.options,"comment",t?this.comment:void 0])},r.prototype.resolve=function(){if(this.resolved)return this;if(void 0===n.mapKey[this.keyType])throw Error("invalid key type: "+this.keyType);return o.prototype.resolve.call(this)},r.d=function(e,t,i){return"function"==typeof i?i=d.decorateType(i).name:i&&"object"==typeof i&&(i=d.decorateEnum(i).name),function(o,n){d.decorateType(o.constructor).add(new r(n,e,t,i))}}},function(e,t,i){"use strict";e.exports=a;var o=i(5);((a.prototype=Object.create(o.prototype)).constructor=a).className="Service";var n=i(19),d=i(0),r=i(13);function a(e,t){o.call(this,e,t),this.methods={},this._methodsArray=null}function p(e){return e._methodsArray=null,e}a.fromJSON=function(e,t){var i=new a(e,t.options);if(t.methods)for(var o=Object.keys(t.methods),d=0;d<o.length;++d)i.add(n.fromJSON(o[d],t.methods[o[d]]));return t.nested&&i.addJSON(t.nested),i.comment=t.comment,i},a.prototype.toJSON=function(e){var t=o.prototype.toJSON.call(this,e),i=!!e&&Boolean(e.keepComments);return d.toObject(["options",t&&t.options||void 0,"methods",o.arrayToJSON(this.methodsArray,e)||{},"nested",t&&t.nested||void 0,"comment",i?this.comment:void 0])},Object.defineProperty(a.prototype,"methodsArray",{get:function(){return this._methodsArray||(this._methodsArray=d.toArray(this.methods))}}),a.prototype.get=function(e){return this.methods[e]||o.prototype.get.call(this,e)},a.prototype.resolveAll=function(){for(var e=this.methodsArray,t=0;t<e.length;++t)e[t].resolve();return o.prototype.resolve.call(this)},a.prototype.add=function(e){if(this.get(e.name))throw Error("duplicate name '"+e.name+"' in "+this);return e instanceof n?(this.methods[e.name]=e,e.parent=this,p(this)):o.prototype.add.call(this,e)},a.prototype.remove=function(e){if(e instanceof n){if(this.methods[e.name]!==e)throw Error(e+" is not a member of "+this);return delete this.methods[e.name],e.parent=null,p(this)}return o.prototype.remove.call(this,e)},a.prototype.create=function(e,t,i){for(var o,n=new r.Service(e,t,i),a=0;a<this.methodsArray.length;++a){var p=d.lcFirst((o=this._methodsArray[a]).resolve().name).replace(/[^$\w_]/g,"");n[p]=d.codegen(["r","c"],d.isReserved(p)?p+"_":p)("return this.rpcCall(m,q,s,r,c)")({m:o,q:o.resolvedRequestType.ctor,s:o.resolvedResponseType.ctor})}return n}},function(e,t,i){"use strict";e.exports=d;var o=i(3);((d.prototype=Object.create(o.prototype)).constructor=d).className="Method";var n=i(0);function d(e,t,i,d,r,a,p,l){if(n.isObject(r)?(p=r,r=a=void 0):n.isObject(a)&&(p=a,a=void 0),void 0!==t&&!n.isString(t))throw TypeError("type must be a string");if(!n.isString(i))throw TypeError("requestType must be a string");if(!n.isString(d))throw TypeError("responseType must be a string");o.call(this,e,p),this.type=t||"rpc",this.requestType=i,this.requestStream=!!r||void 0,this.responseType=d,this.responseStream=!!a||void 0,this.resolvedRequestType=null,this.resolvedResponseType=null,this.comment=l}d.fromJSON=function(e,t){return new d(e,t.type,t.requestType,t.responseType,t.requestStream,t.responseStream,t.options,t.comment)},d.prototype.toJSON=function(e){var t=!!e&&Boolean(e.keepComments);return n.toObject(["type","rpc"!==this.type&&this.type||void 0,"requestType",this.requestType,"requestStream",this.requestStream,"responseType",this.responseType,"responseStream",this.responseStream,"options",this.options,"comment",t?this.comment:void 0])},d.prototype.resolve=function(){return this.resolved?this:(this.resolvedRequestType=this.parent.lookupType(this.requestType),this.resolvedResponseType=this.parent.lookupType(this.responseType),o.prototype.resolve.call(this))}},function(e,t,i){"use strict";e.exports=function(e){var t=d.codegen(["r","l"],e.name+"$decode")("if(!(r instanceof Reader))")("r=Reader.create(r)")("var c=l===undefined?r.len:r.pos+l,m=new this.ctor"+(e.fieldsArray.filter((function(e){return e.map})).length?",k":""))("while(r.pos<c){")("var t=r.uint32()");e.group&&t("if((t&7)===4)")("break");t("switch(t>>>3){");for(var i=0;i<e.fieldsArray.length;++i){var a=e._fieldsArray[i].resolve(),p=a.resolvedType instanceof o?"int32":a.type,l="m"+d.safeProp(a.name);t("case %i:",a.id),a.map?(t("r.skip().pos++")("if(%s===util.emptyObject)",l)("%s={}",l)("k=r.%s()",a.keyType)("r.pos++"),void 0!==n.long[a.keyType]?void 0===n.basic[p]?t('%s[typeof k==="object"?util.longToHash(k):k]=types[%i].decode(r,r.uint32())',l,i):t('%s[typeof k==="object"?util.longToHash(k):k]=r.%s()',l,p):void 0===n.basic[p]?t("%s[k]=types[%i].decode(r,r.uint32())",l,i):t("%s[k]=r.%s()",l,p)):a.repeated?(t("if(!(%s&&%s.length))",l,l)("%s=[]",l),void 0!==n.packed[p]&&t("if((t&7)===2){")("var c2=r.uint32()+r.pos")("while(r.pos<c2)")("%s.push(r.%s())",l,p)("}else"),void 0===n.basic[p]?t(a.resolvedType.group?"%s.push(types[%i].decode(r))":"%s.push(types[%i].decode(r,r.uint32()))",l,i):t("%s.push(r.%s())",l,p)):void 0===n.basic[p]?t(a.resolvedType.group?"%s=types[%i].decode(r)":"%s=types[%i].decode(r,r.uint32())",l,i):t("%s=r.%s()",l,p),t("break")}for(t("default:")("r.skipType(t&7)")("break")("}")("}"),i=0;i<e._fieldsArray.length;++i){var s=e._fieldsArray[i];s.required&&t("if(!m.hasOwnProperty(%j))",s.name)("throw util.ProtocolError(%j,{instance:m})",r(s))}return t("return m")};var o=i(2),n=i(6),d=i(0);function r(e){return"missing required '"+e.name+"'"}},function(e,t,i){"use strict";e.exports=function(e){var t=n.codegen(["m"],e.name+"$verify")('if(typeof m!=="object"||m===null)')("return%j","object expected"),i=e.oneofsArray,o={};i.length&&t("var p={}");for(var p=0;p<e.fieldsArray.length;++p){var l=e._fieldsArray[p].resolve(),s="m"+n.safeProp(l.name);if(l.optional&&t("if(%s!=null&&m.hasOwnProperty(%j)){",s,l.name),l.map)t("if(!util.isObject(%s))",s)("return%j",d(l,"object"))("var k=Object.keys(%s)",s)("for(var i=0;i<k.length;++i){"),a(t,l,"k[i]"),r(t,l,p,s+"[k[i]]")("}");else if(l.repeated)t("if(!Array.isArray(%s))",s)("return%j",d(l,"array"))("for(var i=0;i<%s.length;++i){",s),r(t,l,p,s+"[i]")("}");else{if(l.partOf){var u=n.safeProp(l.partOf.name);1===o[l.partOf.name]&&t("if(p%s===1)",u)("return%j",l.partOf.name+": multiple values"),o[l.partOf.name]=1,t("p%s=1",u)}r(t,l,p,s)}l.optional&&t("}")}return t("return null")};var o=i(2),n=i(0);function d(e,t){return e.name+": "+t+(e.repeated&&"array"!==t?"[]":e.map&&"object"!==t?"{k:"+e.keyType+"}":"")+" expected"}function r(e,t,i,n){if(t.resolvedType)if(t.resolvedType instanceof o){e("switch(%s){",n)("default:")("return%j",d(t,"enum value"));for(var r=Object.keys(t.resolvedType.values),a=0;a<r.length;++a)e("case %i:",t.resolvedType.values[r[a]]);e("break")("}")}else e("{")("var e=types[%i].verify(%s);",i,n)("if(e)")("return%j+e",t.name+".")("}");else switch(t.type){case"int32":case"uint32":case"sint32":case"fixed32":case"sfixed32":e("if(!util.isInteger(%s))",n)("return%j",d(t,"integer"));break;case"int64":case"uint64":case"sint64":case"fixed64":case"sfixed64":e("if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))",n,n,n,n)("return%j",d(t,"integer|Long"));break;case"float":case"double":e('if(typeof %s!=="number")',n)("return%j",d(t,"number"));break;case"bool":e('if(typeof %s!=="boolean")',n)("return%j",d(t,"boolean"));break;case"string":e("if(!util.isString(%s))",n)("return%j",d(t,"string"));break;case"bytes":e('if(!(%s&&typeof %s.length==="number"||util.isString(%s)))',n,n,n)("return%j",d(t,"buffer"))}return e}function a(e,t,i){switch(t.keyType){case"int32":case"uint32":case"sint32":case"fixed32":case"sfixed32":e("if(!util.key32Re.test(%s))",i)("return%j",d(t,"integer key"));break;case"int64":case"uint64":case"sint64":case"fixed64":case"sfixed64":e("if(!util.key64Re.test(%s))",i)("return%j",d(t,"integer|Long key"));break;case"bool":e("if(!util.key2Re.test(%s))",i)("return%j",d(t,"boolean key"))}return e}},function(e,t,i){"use strict";var o=t,n=i(2),d=i(0);function r(e,t,i,o){if(t.resolvedType)if(t.resolvedType instanceof n){e("switch(d%s){",o);for(var d=t.resolvedType.values,r=Object.keys(d),a=0;a<r.length;++a)t.repeated&&d[r[a]]===t.typeDefault&&e("default:"),e("case%j:",r[a])("case %i:",d[r[a]])("m%s=%j",o,d[r[a]])("break");e("}")}else e('if(typeof d%s!=="object")',o)("throw TypeError(%j)",t.fullName+": object expected")("m%s=types[%i].fromObject(d%s)",o,i,o);else{var p=!1;switch(t.type){case"double":case"float":e("m%s=Number(d%s)",o,o);break;case"uint32":case"fixed32":e("m%s=d%s>>>0",o,o);break;case"int32":case"sint32":case"sfixed32":e("m%s=d%s|0",o,o);break;case"uint64":p=!0;case"int64":case"sint64":case"fixed64":case"sfixed64":e("if(util.Long)")("(m%s=util.Long.fromValue(d%s)).unsigned=%j",o,o,p)('else if(typeof d%s==="string")',o)("m%s=parseInt(d%s,10)",o,o)('else if(typeof d%s==="number")',o)("m%s=d%s",o,o)('else if(typeof d%s==="object")',o)("m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)",o,o,o,p?"true":"");break;case"bytes":e('if(typeof d%s==="string")',o)("util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)",o,o,o)("else if(d%s.length)",o)("m%s=d%s",o,o);break;case"string":e("m%s=String(d%s)",o,o);break;case"bool":e("m%s=Boolean(d%s)",o,o)}}return e}function a(e,t,i,o){if(t.resolvedType)t.resolvedType instanceof n?e("d%s=o.enums===String?types[%i].values[m%s]:m%s",o,i,o,o):e("d%s=types[%i].toObject(m%s,o)",o,i,o);else{var d=!1;switch(t.type){case"double":case"float":e("d%s=o.json&&!isFinite(m%s)?String(m%s):m%s",o,o,o,o);break;case"uint64":d=!0;case"int64":case"sint64":case"fixed64":case"sfixed64":e('if(typeof m%s==="number")',o)("d%s=o.longs===String?String(m%s):m%s",o,o,o)("else")("d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s",o,o,o,o,d?"true":"",o);break;case"bytes":e("d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s",o,o,o,o,o);break;default:e("d%s=m%s",o,o)}}return e}o.fromObject=function(e){var t=e.fieldsArray,i=d.codegen(["d"],e.name+"$fromObject")("if(d instanceof this.ctor)")("return d");if(!t.length)return i("return new this.ctor");i("var m=new this.ctor");for(var o=0;o<t.length;++o){var a=t[o].resolve(),p=d.safeProp(a.name);a.map?(i("if(d%s){",p)('if(typeof d%s!=="object")',p)("throw TypeError(%j)",a.fullName+": object expected")("m%s={}",p)("for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){",p),r(i,a,o,p+"[ks[i]]")("}")("}")):a.repeated?(i("if(d%s){",p)("if(!Array.isArray(d%s))",p)("throw TypeError(%j)",a.fullName+": array expected")("m%s=[]",p)("for(var i=0;i<d%s.length;++i){",p),r(i,a,o,p+"[i]")("}")("}")):(a.resolvedType instanceof n||i("if(d%s!=null){",p),r(i,a,o,p),a.resolvedType instanceof n||i("}"))}return i("return m")},o.toObject=function(e){var t=e.fieldsArray.slice().sort(d.compareFieldsById);if(!t.length)return d.codegen()("return {}");for(var i=d.codegen(["m","o"],e.name+"$toObject")("if(!o)")("o={}")("var d={}"),o=[],r=[],p=[],l=0;l<t.length;++l)t[l].partOf||(t[l].resolve().repeated?o:t[l].map?r:p).push(t[l]);if(o.length){for(i("if(o.arrays||o.defaults){"),l=0;l<o.length;++l)i("d%s=[]",d.safeProp(o[l].name));i("}")}if(r.length){for(i("if(o.objects||o.defaults){"),l=0;l<r.length;++l)i("d%s={}",d.safeProp(r[l].name));i("}")}if(p.length){for(i("if(o.defaults){"),l=0;l<p.length;++l){var s=p[l],u=d.safeProp(s.name);if(s.resolvedType instanceof n)i("d%s=o.enums===String?%j:%j",u,s.resolvedType.valuesById[s.typeDefault],s.typeDefault);else if(s.long)i("if(util.Long){")("var n=new util.Long(%i,%i,%j)",s.typeDefault.low,s.typeDefault.high,s.typeDefault.unsigned)("d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n",u)("}else")("d%s=o.longs===String?%j:%i",u,s.typeDefault.toString(),s.typeDefault.toNumber());else if(s.bytes){var y="["+Array.prototype.slice.call(s.typeDefault).join(",")+"]";i("if(o.bytes===String)d%s=%j",u,String.fromCharCode.apply(String,s.typeDefault))("else{")("d%s=%s",u,y)("if(o.bytes!==Array)d%s=util.newBuffer(d%s)",u,u)("}")}else i("d%s=%j",u,s.typeDefault)}i("}")}var f=!1;for(l=0;l<t.length;++l){s=t[l];var c=e._fieldsArray.indexOf(s);u=d.safeProp(s.name);s.map?(f||(f=!0,i("var ks2")),i("if(m%s&&(ks2=Object.keys(m%s)).length){",u,u)("d%s={}",u)("for(var j=0;j<ks2.length;++j){"),a(i,s,c,u+"[ks2[j]]")("}")):s.repeated?(i("if(m%s&&m%s.length){",u,u)("d%s=[]",u)("for(var j=0;j<m%s.length;++j){",u),a(i,s,c,u+"[j]")("}")):(i("if(m%s!=null&&m.hasOwnProperty(%j)){",u,s.name),a(i,s,c,u),s.partOf&&i("if(o.oneofs)")("d%s=%j",d.safeProp(s.partOf.name),s.name)),i("}")}return i("return d")}},function(e,t,i){"use strict";var o=t,n=i(10);o[".google.protobuf.Any"]={fromObject:function(e){if(e&&e["@type"]){var t=this.lookup(e["@type"]);if(t){var i="."===e["@type"].charAt(0)?e["@type"].substr(1):e["@type"];return this.create({type_url:"/"+i,value:t.encode(t.fromObject(e)).finish()})}}return this.fromObject(e)},toObject:function(e,t){if(t&&t.json&&e.type_url&&e.value){var i=e.type_url.substring(e.type_url.lastIndexOf("/")+1),o=this.lookup(i);o&&(e=o.decode(e.value))}if(!(e instanceof this.ctor)&&e instanceof n){var d=e.$type.toObject(e,t);return d["@type"]=e.$type.fullName,d}return this.toObject(e,t)}}},function(e,t,i){"use strict";e.exports=u;var o=i(5);((u.prototype=Object.create(o.prototype)).constructor=u).className="Root";var n,d,r,a=i(4),p=i(2),l=i(9),s=i(0);function u(e){o.call(this,"",e),this.deferred=[],this.files=[]}function y(){}u.fromJSON=function(e,t){return t||(t=new u),e.options&&t.setOptions(e.options),t.addJSON(e.nested)},u.prototype.resolvePath=s.path.resolve,u.prototype.load=function e(t,i,o){"function"==typeof i&&(o=i,i=void 0);var n=this;if(!o)return s.asPromise(e,n,t,i);var a=o===y;function p(e,t){if(o){var i=o;if(o=null,a)throw e;i(e,t)}}function l(e){var t=e.lastIndexOf("google/protobuf/");if(t>-1){var i=e.substring(t);if(i in r)return i}return null}function u(e,t){try{if(s.isString(t)&&"{"===t.charAt(0)&&(t=JSON.parse(t)),s.isString(t)){d.filename=e;var o,r=d(t,n,i),u=0;if(r.imports)for(;u<r.imports.length;++u)(o=l(r.imports[u])||n.resolvePath(e,r.imports[u]))&&f(o);if(r.weakImports)for(u=0;u<r.weakImports.length;++u)(o=l(r.weakImports[u])||n.resolvePath(e,r.weakImports[u]))&&f(o,!0)}else n.setOptions(t.options).addJSON(t.nested)}catch(e){p(e)}a||c||p(null,n)}function f(e,t){if(!(n.files.indexOf(e)>-1))if(n.files.push(e),e in r)a?u(e,r[e]):(++c,setTimeout((function(){--c,u(e,r[e])})));else if(a){var i;try{i=s.fs.readFileSync(e).toString("utf8")}catch(e){return void(t||p(e))}u(e,i)}else++c,s.fetch(e,(function(i,d){--c,o&&(i?t?c||p(null,n):p(i):u(e,d))}))}var c=0;s.isString(t)&&(t=[t]);for(var g,h=0;h<t.length;++h)(g=n.resolvePath("",t[h]))&&f(g);if(a)return n;c||p(null,n)},u.prototype.loadSync=function(e,t){if(!s.isNode)throw Error("not supported");return this.load(e,t,y)},u.prototype.resolveAll=function(){if(this.deferred.length)throw Error("unresolvable extensions: "+this.deferred.map((function(e){return"'extend "+e.extend+"' in "+e.parent.fullName})).join(", "));return o.prototype.resolveAll.call(this)};var f=/^[A-Z]/;function c(e,t){var i=t.parent.lookup(t.extend);if(i){var o=new a(t.fullName,t.id,t.type,t.rule,void 0,t.options);return o.declaringField=t,t.extensionField=o,i.add(o),!0}return!1}u.prototype._handleAdd=function(e){if(e instanceof a)void 0===e.extend||e.extensionField||c(0,e)||this.deferred.push(e);else if(e instanceof p)f.test(e.name)&&(e.parent[e.name]=e.values);else if(!(e instanceof l)){if(e instanceof n)for(var t=0;t<this.deferred.length;)c(0,this.deferred[t])?this.deferred.splice(t,1):++t;for(var i=0;i<e.nestedArray.length;++i)this._handleAdd(e._nestedArray[i]);f.test(e.name)&&(e.parent[e.name]=e)}},u.prototype._handleRemove=function(e){if(e instanceof a){if(void 0!==e.extend)if(e.extensionField)e.extensionField.parent.remove(e.extensionField),e.extensionField=null;else{var t=this.deferred.indexOf(e);t>-1&&this.deferred.splice(t,1)}}else if(e instanceof p)f.test(e.name)&&delete e.parent[e.name];else if(e instanceof o){for(var i=0;i<e.nestedArray.length;++i)this._handleRemove(e._nestedArray[i]);f.test(e.name)&&delete e.parent[e.name]}},u._configure=function(e,t,i){n=e,d=t,r=i}},function(e,t,i){"use strict";var o=i(26),n=o.Root.fromJSON(i(42)),d=n.lookupType("apollo.dreamview.SimulationWorld"),r=n.lookupType("apollo.hdmap.Map"),a=n.lookupType("apollo.dreamview.CameraUpdate"),p=o.Root.fromJSON(i(43)).lookupType("apollo.dreamview.PointCloud");self.addEventListener("message",(function(e){var t=null,i=e.data.data;switch(e.data.source){case"realtime":"string"==typeof i?t=JSON.parse(i):(t=d.toObject(d.decode(new Uint8Array(i)),{enums:String})).type="SimWorldUpdate";break;case"map":(t=r.toObject(r.decode(new Uint8Array(i)),{enums:String})).type="MapData";break;case"point_cloud":t="string"==typeof i?JSON.parse(i):p.toObject(p.decode(new Uint8Array(i)),{arrays:!0});break;case"camera":(t=a.toObject(a.decode(new Uint8Array(i)),{enums:String})).type="CameraData";break;case"teleop":"string"==typeof i&&(t=JSON.parse(i));break;default:console.error("Unknown data source found:",e.data.source)}t&&self.postMessage(t)}))},function(e,t,i){"use strict";e.exports=i(27)},function(e,t,i){"use strict";var o=e.exports=i(28);o.build="light",o.load=function(e,t,i){return"function"==typeof t?(i=t,t=new o.Root):t||(t=new o.Root),t.load(e,i)},o.loadSync=function(e,t){return t||(t=new o.Root),t.loadSync(e)},o.encoder=i(15),o.decoder=i(20),o.verifier=i(21),o.converter=i(22),o.ReflectionObject=i(3),o.Namespace=i(5),o.Root=i(24),o.Enum=i(2),o.Type=i(16),o.Field=i(4),o.OneOf=i(9),o.MapField=i(17),o.Service=i(18),o.Method=i(19),o.Message=i(10),o.wrappers=i(23),o.types=i(6),o.util=i(0),o.ReflectionObject._configure(o.Root),o.Namespace._configure(o.Type,o.Service,o.Enum),o.Root._configure(o.Type),o.Field._configure(o.Type)},function(e,t,i){"use strict";var o=t;function n(){o.util._configure(),o.Writer._configure(o.BufferWriter),o.Reader._configure(o.BufferReader)}o.build="minimal",o.Writer=i(7),o.BufferWriter=i(36),o.Reader=i(8),o.BufferReader=i(37),o.util=i(1),o.rpc=i(13),o.roots=i(14),o.configure=n,n()},function(e,t){var i;i=function(){return this}();try{i=i||new Function("return this")()}catch(e){"object"==typeof window&&(i=window)}e.exports=i},function(e,t,i){"use strict";var o=t;o.length=function(e){var t=e.length;if(!t)return 0;for(var i=0;--t%4>1&&"="===e.charAt(t);)++i;return Math.ceil(3*e.length)/4-i};for(var n=new Array(64),d=new Array(123),r=0;r<64;)d[n[r]=r<26?r+65:r<52?r+71:r<62?r-4:r-59|43]=r++;o.encode=function(e,t,i){for(var o,d=null,r=[],a=0,p=0;t<i;){var l=e[t++];switch(p){case 0:r[a++]=n[l>>2],o=(3&l)<<4,p=1;break;case 1:r[a++]=n[o|l>>4],o=(15&l)<<2,p=2;break;case 2:r[a++]=n[o|l>>6],r[a++]=n[63&l],p=0}a>8191&&((d||(d=[])).push(String.fromCharCode.apply(String,r)),a=0)}return p&&(r[a++]=n[o],r[a++]=61,1===p&&(r[a++]=61)),d?(a&&d.push(String.fromCharCode.apply(String,r.slice(0,a))),d.join("")):String.fromCharCode.apply(String,r.slice(0,a))};o.decode=function(e,t,i){for(var o,n=i,r=0,a=0;a<e.length;){var p=e.charCodeAt(a++);if(61===p&&r>1)break;if(void 0===(p=d[p]))throw Error("invalid encoding");switch(r){case 0:o=p,r=1;break;case 1:t[i++]=o<<2|(48&p)>>4,o=p,r=2;break;case 2:t[i++]=(15&o)<<4|(60&p)>>2,o=p,r=3;break;case 3:t[i++]=(3&o)<<6|p,r=0}}if(1===r)throw Error("invalid encoding");return i-n},o.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}},function(e,t,i){"use strict";function o(){this._listeners={}}e.exports=o,o.prototype.on=function(e,t,i){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:t,ctx:i||this}),this},o.prototype.off=function(e,t){if(void 0===e)this._listeners={};else if(void 0===t)this._listeners[e]=[];else for(var i=this._listeners[e],o=0;o<i.length;)i[o].fn===t?i.splice(o,1):++o;return this},o.prototype.emit=function(e){var t=this._listeners[e];if(t){for(var i=[],o=1;o<arguments.length;)i.push(arguments[o++]);for(o=0;o<t.length;)t[o].fn.apply(t[o++].ctx,i)}return this}},function(e,t,i){"use strict";function o(e){return"undefined"!=typeof Float32Array?function(){var t=new Float32Array([-0]),i=new Uint8Array(t.buffer),o=128===i[3];function n(e,o,n){t[0]=e,o[n]=i[0],o[n+1]=i[1],o[n+2]=i[2],o[n+3]=i[3]}function d(e,o,n){t[0]=e,o[n]=i[3],o[n+1]=i[2],o[n+2]=i[1],o[n+3]=i[0]}function r(e,o){return i[0]=e[o],i[1]=e[o+1],i[2]=e[o+2],i[3]=e[o+3],t[0]}function a(e,o){return i[3]=e[o],i[2]=e[o+1],i[1]=e[o+2],i[0]=e[o+3],t[0]}e.writeFloatLE=o?n:d,e.writeFloatBE=o?d:n,e.readFloatLE=o?r:a,e.readFloatBE=o?a:r}():function(){function t(e,t,i,o){var n=t<0?1:0;if(n&&(t=-t),0===t)e(1/t>0?0:2147483648,i,o);else if(isNaN(t))e(2143289344,i,o);else if(t>34028234663852886e22)e((n<<31|2139095040)>>>0,i,o);else if(t<11754943508222875e-54)e((n<<31|Math.round(t/1401298464324817e-60))>>>0,i,o);else{var d=Math.floor(Math.log(t)/Math.LN2);e((n<<31|d+127<<23|8388607&Math.round(t*Math.pow(2,-d)*8388608))>>>0,i,o)}}function i(e,t,i){var o=e(t,i),n=2*(o>>31)+1,d=o>>>23&255,r=8388607&o;return 255===d?r?NaN:n*(1/0):0===d?1401298464324817e-60*n*r:n*Math.pow(2,d-150)*(r+8388608)}e.writeFloatLE=t.bind(null,n),e.writeFloatBE=t.bind(null,d),e.readFloatLE=i.bind(null,r),e.readFloatBE=i.bind(null,a)}(),"undefined"!=typeof Float64Array?function(){var t=new Float64Array([-0]),i=new Uint8Array(t.buffer),o=128===i[7];function n(e,o,n){t[0]=e,o[n]=i[0],o[n+1]=i[1],o[n+2]=i[2],o[n+3]=i[3],o[n+4]=i[4],o[n+5]=i[5],o[n+6]=i[6],o[n+7]=i[7]}function d(e,o,n){t[0]=e,o[n]=i[7],o[n+1]=i[6],o[n+2]=i[5],o[n+3]=i[4],o[n+4]=i[3],o[n+5]=i[2],o[n+6]=i[1],o[n+7]=i[0]}function r(e,o){return i[0]=e[o],i[1]=e[o+1],i[2]=e[o+2],i[3]=e[o+3],i[4]=e[o+4],i[5]=e[o+5],i[6]=e[o+6],i[7]=e[o+7],t[0]}function a(e,o){return i[7]=e[o],i[6]=e[o+1],i[5]=e[o+2],i[4]=e[o+3],i[3]=e[o+4],i[2]=e[o+5],i[1]=e[o+6],i[0]=e[o+7],t[0]}e.writeDoubleLE=o?n:d,e.writeDoubleBE=o?d:n,e.readDoubleLE=o?r:a,e.readDoubleBE=o?a:r}():function(){function t(e,t,i,o,n,d){var r=o<0?1:0;if(r&&(o=-o),0===o)e(0,n,d+t),e(1/o>0?0:2147483648,n,d+i);else if(isNaN(o))e(0,n,d+t),e(2146959360,n,d+i);else if(o>17976931348623157e292)e(0,n,d+t),e((r<<31|2146435072)>>>0,n,d+i);else{var a;if(o<22250738585072014e-324)e((a=o/5e-324)>>>0,n,d+t),e((r<<31|a/4294967296)>>>0,n,d+i);else{var p=Math.floor(Math.log(o)/Math.LN2);1024===p&&(p=1023),e(4503599627370496*(a=o*Math.pow(2,-p))>>>0,n,d+t),e((r<<31|p+1023<<20|1048576*a&1048575)>>>0,n,d+i)}}}function i(e,t,i,o,n){var d=e(o,n+t),r=e(o,n+i),a=2*(r>>31)+1,p=r>>>20&2047,l=4294967296*(1048575&r)+d;return 2047===p?l?NaN:a*(1/0):0===p?5e-324*a*l:a*Math.pow(2,p-1075)*(l+4503599627370496)}e.writeDoubleLE=t.bind(null,n,0,4),e.writeDoubleBE=t.bind(null,d,4,0),e.readDoubleLE=i.bind(null,r,0,4),e.readDoubleBE=i.bind(null,a,4,0)}(),e}function n(e,t,i){t[i]=255&e,t[i+1]=e>>>8&255,t[i+2]=e>>>16&255,t[i+3]=e>>>24}function d(e,t,i){t[i]=e>>>24,t[i+1]=e>>>16&255,t[i+2]=e>>>8&255,t[i+3]=255&e}function r(e,t){return(e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24)>>>0}function a(e,t){return(e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3])>>>0}e.exports=o(o)},function(e,t,i){"use strict";var o=t;o.length=function(e){for(var t=0,i=0,o=0;o<e.length;++o)(i=e.charCodeAt(o))<128?t+=1:i<2048?t+=2:55296==(64512&i)&&56320==(64512&e.charCodeAt(o+1))?(++o,t+=4):t+=3;return t},o.read=function(e,t,i){if(i-t<1)return"";for(var o,n=null,d=[],r=0;t<i;)(o=e[t++])<128?d[r++]=o:o>191&&o<224?d[r++]=(31&o)<<6|63&e[t++]:o>239&&o<365?(o=((7&o)<<18|(63&e[t++])<<12|(63&e[t++])<<6|63&e[t++])-65536,d[r++]=55296+(o>>10),d[r++]=56320+(1023&o)):d[r++]=(15&o)<<12|(63&e[t++])<<6|63&e[t++],r>8191&&((n||(n=[])).push(String.fromCharCode.apply(String,d)),r=0);return n?(r&&n.push(String.fromCharCode.apply(String,d.slice(0,r))),n.join("")):String.fromCharCode.apply(String,d.slice(0,r))},o.write=function(e,t,i){for(var o,n,d=i,r=0;r<e.length;++r)(o=e.charCodeAt(r))<128?t[i++]=o:o<2048?(t[i++]=o>>6|192,t[i++]=63&o|128):55296==(64512&o)&&56320==(64512&(n=e.charCodeAt(r+1)))?(o=65536+((1023&o)<<10)+(1023&n),++r,t[i++]=o>>18|240,t[i++]=o>>12&63|128,t[i++]=o>>6&63|128,t[i++]=63&o|128):(t[i++]=o>>12|224,t[i++]=o>>6&63|128,t[i++]=63&o|128);return i-d}},function(e,t,i){"use strict";e.exports=function(e,t,i){var o=i||8192,n=o>>>1,d=null,r=o;return function(i){if(i<1||i>n)return e(i);r+i>o&&(d=e(o),r=0);var a=t.call(d,r,r+=i);return 7&r&&(r=1+(7|r)),a}}},function(e,t,i){"use strict";e.exports=n;var o=i(1);function n(e,t){this.lo=e>>>0,this.hi=t>>>0}var d=n.zero=new n(0,0);d.toNumber=function(){return 0},d.zzEncode=d.zzDecode=function(){return this},d.length=function(){return 1};var r=n.zeroHash="\0\0\0\0\0\0\0\0";n.fromNumber=function(e){if(0===e)return d;var t=e<0;t&&(e=-e);var i=e>>>0,o=(e-i)/4294967296>>>0;return t&&(o=~o>>>0,i=~i>>>0,++i>4294967295&&(i=0,++o>4294967295&&(o=0))),new n(i,o)},n.from=function(e){if("number"==typeof e)return n.fromNumber(e);if(o.isString(e)){if(!o.Long)return n.fromNumber(parseInt(e,10));e=o.Long.fromString(e)}return e.low||e.high?new n(e.low>>>0,e.high>>>0):d},n.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var t=1+~this.lo>>>0,i=~this.hi>>>0;return t||(i=i+1>>>0),-(t+4294967296*i)}return this.lo+4294967296*this.hi},n.prototype.toLong=function(e){return o.Long?new o.Long(0|this.lo,0|this.hi,Boolean(e)):{low:0|this.lo,high:0|this.hi,unsigned:Boolean(e)}};var a=String.prototype.charCodeAt;n.fromHash=function(e){return e===r?d:new n((a.call(e,0)|a.call(e,1)<<8|a.call(e,2)<<16|a.call(e,3)<<24)>>>0,(a.call(e,4)|a.call(e,5)<<8|a.call(e,6)<<16|a.call(e,7)<<24)>>>0)},n.prototype.toHash=function(){return String.fromCharCode(255&this.lo,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,255&this.hi,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},n.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this},n.prototype.zzDecode=function(){var e=-(1&this.lo);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this},n.prototype.length=function(){var e=this.lo,t=(this.lo>>>28|this.hi<<4)>>>0,i=this.hi>>>24;return 0===i?0===t?e<16384?e<128?1:2:e<2097152?3:4:t<16384?t<128?5:6:t<2097152?7:8:i<128?9:10}},function(e,t,i){"use strict";e.exports=d;var o=i(7);(d.prototype=Object.create(o.prototype)).constructor=d;var n=i(1);function d(){o.call(this)}function r(e,t,i){e.length<40?n.utf8.write(e,t,i):t.utf8Write?t.utf8Write(e,i):t.write(e,i)}d._configure=function(){d.alloc=n._Buffer_allocUnsafe,d.writeBytesBuffer=n.Buffer&&n.Buffer.prototype instanceof Uint8Array&&"set"===n.Buffer.prototype.set.name?function(e,t,i){t.set(e,i)}:function(e,t,i){if(e.copy)e.copy(t,i,0,e.length);else for(var o=0;o<e.length;)t[i++]=e[o++]}},d.prototype.bytes=function(e){n.isString(e)&&(e=n._Buffer_from(e,"base64"));var t=e.length>>>0;return this.uint32(t),t&&this._push(d.writeBytesBuffer,t,e),this},d.prototype.string=function(e){var t=n.Buffer.byteLength(e);return this.uint32(t),t&&this._push(r,t,e),this},d._configure()},function(e,t,i){"use strict";e.exports=d;var o=i(8);(d.prototype=Object.create(o.prototype)).constructor=d;var n=i(1);function d(e){o.call(this,e)}d._configure=function(){n.Buffer&&(d.prototype._slice=n.Buffer.prototype.slice)},d.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))},d._configure()},function(e,t,i){"use strict";e.exports=n;var o=i(1);function n(e,t,i){if("function"!=typeof e)throw TypeError("rpcImpl must be a function");o.EventEmitter.call(this),this.rpcImpl=e,this.requestDelimited=Boolean(t),this.responseDelimited=Boolean(i)}(n.prototype=Object.create(o.EventEmitter.prototype)).constructor=n,n.prototype.rpcCall=function e(t,i,n,d,r){if(!d)throw TypeError("request must be specified");var a=this;if(!r)return o.asPromise(e,a,t,i,n,d);if(a.rpcImpl)try{return a.rpcImpl(t,i[a.requestDelimited?"encodeDelimited":"encode"](d).finish(),(function(e,i){if(e)return a.emit("error",e,t),r(e);if(null!==i){if(!(i instanceof n))try{i=n[a.responseDelimited?"decodeDelimited":"decode"](i)}catch(e){return a.emit("error",e,t),r(e)}return a.emit("data",i,t),r(null,i)}a.end(!0)}))}catch(e){return a.emit("error",e,t),void setTimeout((function(){r(e)}),0)}else setTimeout((function(){r(Error("already ended"))}),0)},n.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}},function(e,t,i){"use strict";function o(e,t){"string"==typeof e&&(t=e,e=void 0);var i=[];function n(e){if("string"!=typeof e){var t=d();if(o.verbose&&console.log("codegen: "+t),t="return "+t,e){for(var r=Object.keys(e),a=new Array(r.length+1),p=new Array(r.length),l=0;l<r.length;)a[l]=r[l],p[l]=e[r[l++]];return a[l]=t,Function.apply(null,a).apply(null,p)}return Function(t)()}for(var s=new Array(arguments.length-1),u=0;u<s.length;)s[u]=arguments[++u];if(u=0,e=e.replace(/%([%dfijs])/g,(function(e,t){var i=s[u++];switch(t){case"d":case"f":return String(Number(i));case"i":return String(Math.floor(i));case"j":return JSON.stringify(i);case"s":return String(i)}return"%"})),u!==s.length)throw Error("parameter count mismatch");return i.push(e),n}function d(o){return"function "+(o||t||"")+"("+(e&&e.join(",")||"")+"){\n  "+i.join("\n  ")+"\n}"}return n.toString=d,n}e.exports=o,o.verbose=!1},function(e,t,i){"use strict";e.exports=d;var o=i(11),n=i(12)("fs");function d(e,t,i){return"function"==typeof t?(i=t,t={}):t||(t={}),i?!t.xhr&&n&&n.readFile?n.readFile(e,(function(o,n){return o&&"undefined"!=typeof XMLHttpRequest?d.xhr(e,t,i):o?i(o):i(null,t.binary?n:n.toString("utf8"))})):d.xhr(e,t,i):o(d,this,e,t)}d.xhr=function(e,t,i){var o=new XMLHttpRequest;o.onreadystatechange=function(){if(4===o.readyState){if(0!==o.status&&200!==o.status)return i(Error("status "+o.status));if(t.binary){var e=o.response;if(!e){e=[];for(var n=0;n<o.responseText.length;++n)e.push(255&o.responseText.charCodeAt(n))}return i(null,"undefined"!=typeof Uint8Array?new Uint8Array(e):e)}return i(null,o.responseText)}},t.binary&&("overrideMimeType"in o&&o.overrideMimeType("text/plain; charset=x-user-defined"),o.responseType="arraybuffer"),o.open("GET",e),o.send()}},function(e,t,i){"use strict";var o=t,n=o.isAbsolute=function(e){return/^(?:\/|\w+:)/.test(e)},d=o.normalize=function(e){var t=(e=e.replace(/\\/g,"/").replace(/\/{2,}/g,"/")).split("/"),i=n(e),o="";i&&(o=t.shift()+"/");for(var d=0;d<t.length;)".."===t[d]?d>0&&".."!==t[d-1]?t.splice(--d,2):i?t.splice(d,1):++d:"."===t[d]?t.splice(d,1):++d;return o+t.join("/")};o.resolve=function(e,t,i){return i||(t=d(t)),n(t)?t:(i||(e=d(e)),(e=e.replace(/(?:\/|^)[^/]+$/,"")).length?d(e+"/"+t):t)}},function(e){e.exports={nested:{apollo:{nested:{dreamview:{nested:{PolygonPoint:{fields:{x:{type:"double",id:1},y:{type:"double",id:2},z:{type:"double",id:3,options:{default:0}},gaussianInfo:{type:"apollo.common.GaussianInfo",id:4}}},Prediction:{fields:{probability:{type:"double",id:1},predictedTrajectory:{rule:"repeated",type:"PolygonPoint",id:2}}},Decision:{fields:{type:{type:"Type",id:1,options:{default:"IGNORE"}},polygonPoint:{rule:"repeated",type:"PolygonPoint",id:2},heading:{type:"double",id:3},latitude:{type:"double",id:4},longitude:{type:"double",id:5},positionX:{type:"double",id:6},positionY:{type:"double",id:7},length:{type:"double",id:8,options:{default:2.8}},width:{type:"double",id:9,options:{default:1.4}},height:{type:"double",id:10,options:{default:1.8}},stopReason:{type:"StopReasonCode",id:11},changeLaneType:{type:"apollo.routing.ChangeLaneType",id:12}},nested:{Type:{values:{IGNORE:0,STOP:1,NUDGE:2,YIELD:3,OVERTAKE:4,FOLLOW:5,SIDEPASS:6}},StopReasonCode:{values:{STOP_REASON_HEAD_VEHICLE:1,STOP_REASON_DESTINATION:2,STOP_REASON_PEDESTRIAN:3,STOP_REASON_OBSTACLE:4,STOP_REASON_SIGNAL:100,STOP_REASON_STOP_SIGN:101,STOP_REASON_YIELD_SIGN:102,STOP_REASON_CLEAR_ZONE:103,STOP_REASON_CROSSWALK:104,STOP_REASON_EMERGENCY:105,STOP_REASON_NOT_READY:106,STOP_REASON_PULL_OVER:107}}}},Object:{fields:{id:{type:"string",id:1},polygonPoint:{rule:"repeated",type:"PolygonPoint",id:2},heading:{type:"double",id:3},latitude:{type:"double",id:4},longitude:{type:"double",id:5},positionX:{type:"double",id:6},positionY:{type:"double",id:7},length:{type:"double",id:8,options:{default:2.8}},width:{type:"double",id:9,options:{default:1.4}},height:{type:"double",id:10,options:{default:1.8}},speed:{type:"double",id:11},speedAcceleration:{type:"double",id:12},speedJerk:{type:"double",id:13},spin:{type:"double",id:14},spinAcceleration:{type:"double",id:15},spinJerk:{type:"double",id:16},speedHeading:{type:"double",id:17},kappa:{type:"double",id:18},dkappa:{type:"double",id:35},signalSet:{rule:"repeated",type:"string",id:19},currentSignal:{type:"string",id:20},timestampSec:{type:"double",id:21},decision:{rule:"repeated",type:"Decision",id:22},yieldedObstacle:{type:"bool",id:32,options:{default:!1}},throttlePercentage:{type:"double",id:23},brakePercentage:{type:"double",id:24},steeringPercentage:{type:"double",id:25},steeringAngle:{type:"double",id:26},steeringRatio:{type:"double",id:27},batteryPercentage:{type:"int32",id:38},gearLocation:{type:"apollo.canbus.Chassis.GearPosition",id:39},disengageType:{type:"DisengageType",id:28},type:{type:"Type",id:29},subType:{type:"apollo.perception.PerceptionObstacle.SubType",id:34},prediction:{rule:"repeated",type:"Prediction",id:30},confidence:{type:"double",id:31,options:{default:1}},obstaclePriority:{type:"apollo.prediction.ObstaclePriority",id:33},interactiveTag:{type:"apollo.prediction.ObstacleInteractiveTag",id:40},source:{type:"apollo.perception.PerceptionObstacle.Source",id:36,options:{default:"HOST_VEHICLE"}},v2xInfo:{type:"apollo.perception.V2XInformation",id:37}},nested:{DisengageType:{values:{DISENGAGE_NONE:0,DISENGAGE_UNKNOWN:1,DISENGAGE_MANUAL:2,DISENGAGE_EMERGENCY:3,DISENGAGE_AUTO_STEER_ONLY:4,DISENGAGE_AUTO_SPEED_ONLY:5,DISENGAGE_CHASSIS_ERROR:6}},Type:{values:{UNKNOWN:0,UNKNOWN_MOVABLE:1,UNKNOWN_UNMOVABLE:2,PEDESTRIAN:3,BICYCLE:4,VEHICLE:5,VIRTUAL:6,CIPV:7}}}},DelaysInMs:{fields:{chassis:{type:"double",id:1},localization:{type:"double",id:3},perceptionObstacle:{type:"double",id:4},planning:{type:"double",id:5},prediction:{type:"double",id:7},trafficLight:{type:"double",id:8},control:{type:"double",id:9}}},RoutePath:{fields:{point:{rule:"repeated",type:"PolygonPoint",id:1}}},Latency:{fields:{timestampSec:{type:"double",id:1},totalTimeMs:{type:"double",id:2}}},MapElementIds:{fields:{lane:{rule:"repeated",type:"string",id:1},crosswalk:{rule:"repeated",type:"string",id:2},junction:{rule:"repeated",type:"string",id:3},signal:{rule:"repeated",type:"string",id:4},stopSign:{rule:"repeated",type:"string",id:5},yield:{rule:"repeated",type:"string",id:6},overlap:{rule:"repeated",type:"string",id:7},road:{rule:"repeated",type:"string",id:8},clearArea:{rule:"repeated",type:"string",id:9},parkingSpace:{rule:"repeated",type:"string",id:10},speedBump:{rule:"repeated",type:"string",id:11},pncJunction:{rule:"repeated",type:"string",id:12}}},ControlData:{fields:{timestampSec:{type:"double",id:1},stationError:{type:"double",id:2},lateralError:{type:"double",id:3},headingError:{type:"double",id:4},currentTargetPoint:{type:"apollo.common.TrajectoryPoint",id:5}}},Notification:{fields:{timestampSec:{type:"double",id:1},item:{type:"apollo.common.monitor.MonitorMessageItem",id:2}}},SensorMeasurements:{fields:{sensorMeasurement:{rule:"repeated",type:"Object",id:1}}},SimulationWorld:{fields:{timestamp:{type:"double",id:1},sequenceNum:{type:"uint32",id:2},object:{rule:"repeated",type:"Object",id:3},autoDrivingCar:{type:"Object",id:4},trafficSignal:{type:"Object",id:5},routePath:{rule:"repeated",type:"RoutePath",id:6},routingTime:{type:"double",id:7},planningTrajectory:{rule:"repeated",type:"Object",id:8},mainStop:{type:"Object",id:9,options:{deprecated:!0}},mainDecision:{type:"Object",id:10},speedLimit:{type:"double",id:11},delay:{type:"DelaysInMs",id:12},monitor:{type:"apollo.common.monitor.MonitorMessage",id:13,options:{deprecated:!0}},notification:{rule:"repeated",type:"Notification",id:14},engageAdvice:{type:"string",id:15},latency:{keyType:"string",type:"Latency",id:16},mapElementIds:{type:"MapElementIds",id:17},mapHash:{type:"uint64",id:18},mapRadius:{type:"double",id:19},planningData:{type:"apollo.planning_internal.PlanningData",id:20},gps:{type:"Object",id:21},laneMarker:{type:"apollo.perception.LaneMarkers",id:22},controlData:{type:"ControlData",id:23},navigationPath:{rule:"repeated",type:"apollo.common.Path",id:24},isRssSafe:{type:"bool",id:25,options:{default:!0}},shadowLocalization:{type:"Object",id:26},perceivedSignal:{rule:"repeated",type:"Object",id:27},stories:{keyType:"string",type:"bool",id:28},sensorMeasurements:{keyType:"string",type:"SensorMeasurements",id:29},isSirenOn:{type:"bool",id:30,options:{default:!1}}}},Options:{fields:{legendDisplay:{type:"bool",id:1,options:{default:!0}},x:{type:"Axis",id:2},y:{type:"Axis",id:3},aspectRatio:{type:"double",id:4},syncXyWindowSize:{type:"bool",id:5,options:{default:!1}}},nested:{Axis:{fields:{min:{type:"double",id:1},max:{type:"double",id:2},labelString:{type:"string",id:3},windowSize:{type:"double",id:4},stepSize:{type:"double",id:5},midValue:{type:"double",id:6}}}}},Line:{fields:{label:{type:"string",id:1},hideLabelInLegend:{type:"bool",id:2,options:{default:!1}},point:{rule:"repeated",type:"apollo.common.Point2D",id:3},properties:{keyType:"string",type:"string",id:4}}},Polygon:{fields:{label:{type:"string",id:1},hideLabelInLegend:{type:"bool",id:2,options:{default:!1}},point:{rule:"repeated",type:"apollo.common.Point2D",id:3},properties:{keyType:"string",type:"string",id:4}}},Car:{fields:{label:{type:"string",id:1},hideLabelInLegend:{type:"bool",id:2,options:{default:!1}},x:{type:"double",id:3},y:{type:"double",id:4},heading:{type:"double",id:5},color:{type:"string",id:6}}},Chart:{fields:{title:{type:"string",id:1},options:{type:"Options",id:2},line:{rule:"repeated",type:"Line",id:3},polygon:{rule:"repeated",type:"Polygon",id:4},car:{rule:"repeated",type:"Car",id:5}}},CameraUpdate:{fields:{localization:{rule:"repeated",type:"double",id:1,options:{packed:!1}},localization2cameraTf:{rule:"repeated",type:"double",id:2,options:{packed:!1}},image:{type:"bytes",id:3},imageAspectRatio:{type:"double",id:4}}}}},common:{nested:{Direction:{values:{EAST:0,WEST:1,SOUTH:2,NORTH:3,NORTHEAST:4,SOUTHEAST:5,SOUTHWEST:6,NORTHWEST:7}},DriveEvent:{fields:{header:{type:"apollo.common.Header",id:1},event:{type:"string",id:2},location:{type:"apollo.localization.Pose",id:3},type:{rule:"repeated",type:"Type",id:4,options:{packed:!1}},isReportable:{type:"bool",id:5}},nested:{Type:{values:{CRITICAL:0,PROBLEM:1,DESIRED:2,OUT_OF_SCOPE:3}}}},EngageAdvice:{fields:{advice:{type:"Advice",id:1,options:{default:"DISALLOW_ENGAGE"}},reason:{type:"string",id:2}},nested:{Advice:{values:{UNKNOWN:0,DISALLOW_ENGAGE:1,READY_TO_ENGAGE:2,KEEP_ENGAGED:3,PREPARE_DISENGAGE:4}}}},ErrorCode:{values:{OK:0,CONTROL_ERROR:1e3,CONTROL_INIT_ERROR:1001,CONTROL_COMPUTE_ERROR:1002,CONTROL_ESTOP_ERROR:1003,PERFECT_CONTROL_ERROR:1004,CANBUS_ERROR:2e3,CAN_CLIENT_ERROR_BASE:2100,CAN_CLIENT_ERROR_OPEN_DEVICE_FAILED:2101,CAN_CLIENT_ERROR_FRAME_NUM:2102,CAN_CLIENT_ERROR_SEND_FAILED:2103,CAN_CLIENT_ERROR_RECV_FAILED:2104,LOCALIZATION_ERROR:3e3,LOCALIZATION_ERROR_MSG:3100,LOCALIZATION_ERROR_LIDAR:3200,LOCALIZATION_ERROR_INTEG:3300,LOCALIZATION_ERROR_GNSS:3400,PERCEPTION_ERROR:4e3,PERCEPTION_ERROR_TF:4001,PERCEPTION_ERROR_PROCESS:4002,PERCEPTION_FATAL:4003,PERCEPTION_ERROR_NONE:4004,PERCEPTION_ERROR_UNKNOWN:4005,PREDICTION_ERROR:5e3,PLANNING_ERROR:6e3,PLANNING_ERROR_NOT_READY:6001,HDMAP_DATA_ERROR:7e3,ROUTING_ERROR:8e3,ROUTING_ERROR_REQUEST:8001,ROUTING_ERROR_RESPONSE:8002,ROUTING_ERROR_NOT_READY:8003,END_OF_INPUT:9e3,HTTP_LOGIC_ERROR:1e4,HTTP_RUNTIME_ERROR:10001,RELATIVE_MAP_ERROR:11e3,RELATIVE_MAP_NOT_READY:11001,DRIVER_ERROR_GNSS:12e3,DRIVER_ERROR_VELODYNE:13e3,STORYTELLING_ERROR:14e3}},StatusPb:{fields:{errorCode:{type:"ErrorCode",id:1,options:{default:"OK"}},msg:{type:"string",id:2}}},PointENU:{fields:{x:{type:"double",id:1,options:{default:null}},y:{type:"double",id:2,options:{default:null}},z:{type:"double",id:3,options:{default:0}}}},PointLLH:{fields:{lon:{type:"double",id:1,options:{default:null}},lat:{type:"double",id:2,options:{default:null}},height:{type:"double",id:3,options:{default:0}}}},Point2D:{fields:{x:{type:"double",id:1,options:{default:null}},y:{type:"double",id:2,options:{default:null}}}},Point3D:{fields:{x:{type:"double",id:1,options:{default:null}},y:{type:"double",id:2,options:{default:null}},z:{type:"double",id:3,options:{default:null}}}},Quaternion:{fields:{qx:{type:"double",id:1,options:{default:null}},qy:{type:"double",id:2,options:{default:null}},qz:{type:"double",id:3,options:{default:null}},qw:{type:"double",id:4,options:{default:null}}}},Polygon:{fields:{point:{rule:"repeated",type:"Point3D",id:1}}},Header:{fields:{timestampSec:{type:"double",id:1},moduleName:{type:"string",id:2},sequenceNum:{type:"uint32",id:3},lidarTimestamp:{type:"uint64",id:4},cameraTimestamp:{type:"uint64",id:5},radarTimestamp:{type:"uint64",id:6},version:{type:"uint32",id:7,options:{default:1}},status:{type:"StatusPb",id:8},frameId:{type:"string",id:9}}},SLPoint:{fields:{s:{type:"double",id:1},l:{type:"double",id:2}}},FrenetFramePoint:{fields:{s:{type:"double",id:1},l:{type:"double",id:2},dl:{type:"double",id:3},ddl:{type:"double",id:4}}},SpeedPoint:{fields:{s:{type:"double",id:1},t:{type:"double",id:2},v:{type:"double",id:3},a:{type:"double",id:4},da:{type:"double",id:5}}},PathPoint:{fields:{x:{type:"double",id:1},y:{type:"double",id:2},z:{type:"double",id:3},theta:{type:"double",id:4},kappa:{type:"double",id:5},s:{type:"double",id:6},dkappa:{type:"double",id:7},ddkappa:{type:"double",id:8},laneId:{type:"string",id:9},xDerivative:{type:"double",id:10},yDerivative:{type:"double",id:11}}},Path:{fields:{name:{type:"string",id:1},pathPoint:{rule:"repeated",type:"PathPoint",id:2}}},TrajectoryPoint:{fields:{pathPoint:{type:"PathPoint",id:1},v:{type:"double",id:2},a:{type:"double",id:3},relativeTime:{type:"double",id:4},da:{type:"double",id:5},steer:{type:"double",id:6},gaussianInfo:{type:"GaussianInfo",id:7}}},Trajectory:{fields:{name:{type:"string",id:1},trajectoryPoint:{rule:"repeated",type:"TrajectoryPoint",id:2}}},VehicleMotionPoint:{fields:{trajectoryPoint:{type:"TrajectoryPoint",id:1},steer:{type:"double",id:2}}},VehicleMotion:{fields:{name:{type:"string",id:1},vehicleMotionPoint:{rule:"repeated",type:"VehicleMotionPoint",id:2}}},GaussianInfo:{fields:{sigmaX:{type:"double",id:1},sigmaY:{type:"double",id:2},correlation:{type:"double",id:3},areaProbability:{type:"double",id:4},ellipseA:{type:"double",id:5},ellipseB:{type:"double",id:6},thetaA:{type:"double",id:7}}},VehicleSignal:{fields:{turnSignal:{type:"TurnSignal",id:1},highBeam:{type:"bool",id:2},lowBeam:{type:"bool",id:3},horn:{type:"bool",id:4},emergencyLight:{type:"bool",id:5}},nested:{TurnSignal:{values:{TURN_NONE:0,TURN_LEFT:1,TURN_RIGHT:2}}}},Transform:{fields:{sourceFrame:{type:"bytes",id:1},targetFrame:{type:"bytes",id:2},translation:{type:"Point3D",id:3},rotation:{type:"Quaternion",id:4}}},Extrinsics:{fields:{tansforms:{rule:"repeated",type:"Transform",id:1}}},VehicleBrand:{values:{LINCOLN_MKZ:0,GEM:1,LEXUS:2,TRANSIT:3,GE3:4,WEY:5,ZHONGYUN:6,CH:7,DKIT:8,NEOLIX:9}},VehicleID:{fields:{vin:{type:"string",id:1},plate:{type:"string",id:2},otherUniqueId:{type:"string",id:3}}},LatencyParam:{fields:{deadTime:{type:"double",id:1},riseTime:{type:"double",id:2},peakTime:{type:"double",id:3},settlingTime:{type:"double",id:4}}},VehicleParam:{fields:{brand:{type:"VehicleBrand",id:1},vehicleId:{type:"VehicleID",id:2},frontEdgeToCenter:{type:"double",id:3,options:{default:null}},backEdgeToCenter:{type:"double",id:4,options:{default:null}},leftEdgeToCenter:{type:"double",id:5,options:{default:null}},rightEdgeToCenter:{type:"double",id:6,options:{default:null}},length:{type:"double",id:7,options:{default:null}},width:{type:"double",id:8,options:{default:null}},height:{type:"double",id:9,options:{default:null}},minTurnRadius:{type:"double",id:10,options:{default:null}},maxAcceleration:{type:"double",id:11,options:{default:null}},maxDeceleration:{type:"double",id:12,options:{default:null}},maxSteerAngle:{type:"double",id:13,options:{default:null}},maxSteerAngleRate:{type:"double",id:14,options:{default:null}},minSteerAngleRate:{type:"double",id:15,options:{default:null}},steerRatio:{type:"double",id:16,options:{default:null}},wheelBase:{type:"double",id:17,options:{default:null}},wheelRollingRadius:{type:"double",id:18,options:{default:null}},maxAbsSpeedWhenStopped:{type:"float",id:19,options:{default:null}},brakeDeadzone:{type:"double",id:20,options:{default:null}},throttleDeadzone:{type:"double",id:21,options:{default:null}},steeringLatencyParam:{type:"LatencyParam",id:22},throttleLatencyParam:{type:"LatencyParam",id:23},brakeLatencyParam:{type:"LatencyParam",id:24}}},VehicleConfig:{fields:{header:{type:"apollo.common.Header",id:1},vehicleParam:{type:"VehicleParam",id:2},extrinsics:{type:"Extrinsics",id:3}}},monitor:{nested:{MonitorMessageItem:{fields:{source:{type:"MessageSource",id:1,options:{default:"UNKNOWN"}},msg:{type:"string",id:2},logLevel:{type:"LogLevel",id:3,options:{default:"INFO"}}},nested:{MessageSource:{values:{UNKNOWN:1,CANBUS:2,CONTROL:3,DECISION:4,LOCALIZATION:5,PLANNING:6,PREDICTION:7,SIMULATOR:8,HWSYS:9,ROUTING:10,MONITOR:11,HMI:12,RELATIVE_MAP:13,GNSS:14,CONTI_RADAR:15,RACOBIT_RADAR:16,ULTRASONIC_RADAR:17,MOBILEYE:18,DELPHI_ESR:19,STORYTELLING:20,TASK_MANAGER:21}},LogLevel:{values:{INFO:0,WARN:1,ERROR:2,FATAL:3}}}},MonitorMessage:{fields:{header:{type:"apollo.common.Header",id:1},item:{rule:"repeated",type:"MonitorMessageItem",id:2}}}}}}},localization:{nested:{Uncertainty:{fields:{positionStdDev:{type:"apollo.common.Point3D",id:1},orientationStdDev:{type:"apollo.common.Point3D",id:2},linearVelocityStdDev:{type:"apollo.common.Point3D",id:3},linearAccelerationStdDev:{type:"apollo.common.Point3D",id:4},angularVelocityStdDev:{type:"apollo.common.Point3D",id:5}}},LocalizationEstimate:{fields:{header:{type:"apollo.common.Header",id:1},pose:{type:"apollo.localization.Pose",id:2},uncertainty:{type:"Uncertainty",id:3},measurementTime:{type:"double",id:4},trajectoryPoint:{rule:"repeated",type:"apollo.common.TrajectoryPoint",id:5},msfStatus:{type:"MsfStatus",id:6},sensorStatus:{type:"MsfSensorMsgStatus",id:7}}},MeasureState:{values:{OK:0,WARNNING:1,ERROR:2,CRITICAL_ERROR:3,FATAL_ERROR:4}},LocalizationStatus:{fields:{header:{type:"apollo.common.Header",id:1},fusionStatus:{type:"MeasureState",id:2},gnssStatus:{type:"MeasureState",id:3,options:{deprecated:!0}},lidarStatus:{type:"MeasureState",id:4,options:{deprecated:!0}},measurementTime:{type:"double",id:5},stateMessage:{type:"string",id:6}}},Pose:{fields:{position:{type:"apollo.common.PointENU",id:1},orientation:{type:"apollo.common.Quaternion",id:2},linearVelocity:{type:"apollo.common.Point3D",id:3},linearAcceleration:{type:"apollo.common.Point3D",id:4},angularVelocity:{type:"apollo.common.Point3D",id:5},heading:{type:"double",id:6},linearAccelerationVrf:{type:"apollo.common.Point3D",id:7},angularVelocityVrf:{type:"apollo.common.Point3D",id:8},eulerAngles:{type:"apollo.common.Point3D",id:9}}},LocalLidarStatus:{values:{MSF_LOCAL_LIDAR_NORMAL:0,MSF_LOCAL_LIDAR_MAP_MISSING:1,MSF_LOCAL_LIDAR_EXTRINSICS_MISSING:2,MSF_LOCAL_LIDAR_MAP_LOADING_FAILED:3,MSF_LOCAL_LIDAR_NO_OUTPUT:4,MSF_LOCAL_LIDAR_OUT_OF_MAP:5,MSF_LOCAL_LIDAR_NOT_GOOD:6,MSF_LOCAL_LIDAR_UNDEFINED_STATUS:7}},LocalLidarQuality:{values:{MSF_LOCAL_LIDAR_VERY_GOOD:0,MSF_LOCAL_LIDAR_GOOD:1,MSF_LOCAL_LIDAR_NOT_BAD:2,MSF_LOCAL_LIDAR_BAD:3}},LocalLidarConsistency:{values:{MSF_LOCAL_LIDAR_CONSISTENCY_00:0,MSF_LOCAL_LIDAR_CONSISTENCY_01:1,MSF_LOCAL_LIDAR_CONSISTENCY_02:2,MSF_LOCAL_LIDAR_CONSISTENCY_03:3}},GnssConsistency:{values:{MSF_GNSS_CONSISTENCY_00:0,MSF_GNSS_CONSISTENCY_01:1,MSF_GNSS_CONSISTENCY_02:2,MSF_GNSS_CONSISTENCY_03:3}},GnssPositionType:{values:{NONE:0,FIXEDPOS:1,FIXEDHEIGHT:2,FLOATCONV:4,WIDELANE:5,NARROWLANE:6,DOPPLER_VELOCITY:8,SINGLE:16,PSRDIFF:17,WAAS:18,PROPOGATED:19,OMNISTAR:20,L1_FLOAT:32,IONOFREE_FLOAT:33,NARROW_FLOAT:34,L1_INT:48,WIDE_INT:49,NARROW_INT:50,RTK_DIRECT_INS:51,INS_SBAS:52,INS_PSRSP:53,INS_PSRDIFF:54,INS_RTKFLOAT:55,INS_RTKFIXED:56,INS_OMNISTAR:57,INS_OMNISTAR_HP:58,INS_OMNISTAR_XP:59,OMNISTAR_HP:64,OMNISTAR_XP:65,PPP_CONVERGING:68,PPP:69,INS_PPP_Converging:73,INS_PPP:74,MSG_LOSS:91}},ImuMsgDelayStatus:{values:{IMU_DELAY_NORMAL:0,IMU_DELAY_1:1,IMU_DELAY_2:2,IMU_DELAY_3:3,IMU_DELAY_ABNORMAL:4}},ImuMsgMissingStatus:{values:{IMU_MISSING_NORMAL:0,IMU_MISSING_1:1,IMU_MISSING_2:2,IMU_MISSING_3:3,IMU_MISSING_4:4,IMU_MISSING_5:5,IMU_MISSING_ABNORMAL:6}},ImuMsgDataStatus:{values:{IMU_DATA_NORMAL:0,IMU_DATA_ABNORMAL:1,IMU_DATA_OTHER:2}},MsfRunningStatus:{values:{MSF_SOL_LIDAR_GNSS:0,MSF_SOL_X_GNSS:1,MSF_SOL_LIDAR_X:2,MSF_SOL_LIDAR_XX:3,MSF_SOL_LIDAR_XXX:4,MSF_SOL_X_X:5,MSF_SOL_X_XX:6,MSF_SOL_X_XXX:7,MSF_SSOL_LIDAR_GNSS:8,MSF_SSOL_X_GNSS:9,MSF_SSOL_LIDAR_X:10,MSF_SSOL_LIDAR_XX:11,MSF_SSOL_LIDAR_XXX:12,MSF_SSOL_X_X:13,MSF_SSOL_X_XX:14,MSF_SSOL_X_XXX:15,MSF_NOSOL_LIDAR_GNSS:16,MSF_NOSOL_X_GNSS:17,MSF_NOSOL_LIDAR_X:18,MSF_NOSOL_LIDAR_XX:19,MSF_NOSOL_LIDAR_XXX:20,MSF_NOSOL_X_X:21,MSF_NOSOL_X_XX:22,MSF_NOSOL_X_XXX:23,MSF_RUNNING_INIT:24}},MsfSensorMsgStatus:{fields:{imuDelayStatus:{type:"ImuMsgDelayStatus",id:1},imuMissingStatus:{type:"ImuMsgMissingStatus",id:2},imuDataStatus:{type:"ImuMsgDataStatus",id:3}}},MsfStatus:{fields:{localLidarConsistency:{type:"LocalLidarConsistency",id:1},gnssConsistency:{type:"GnssConsistency",id:2},localLidarStatus:{type:"LocalLidarStatus",id:3},localLidarQuality:{type:"LocalLidarQuality",id:4},gnssposPositionType:{type:"GnssPositionType",id:5},msfRunningStatus:{type:"MsfRunningStatus",id:6}}}}},canbus:{nested:{Chassis:{fields:{engineStarted:{type:"bool",id:3},engineRpm:{type:"float",id:4,options:{default:null}},speedMps:{type:"float",id:5,options:{default:null}},odometerM:{type:"float",id:6,options:{default:null}},fuelRangeM:{type:"int32",id:7},throttlePercentage:{type:"float",id:8,options:{default:null}},brakePercentage:{type:"float",id:9,options:{default:null}},steeringPercentage:{type:"float",id:11,options:{default:null}},steeringTorqueNm:{type:"float",id:12,options:{default:null}},parkingBrake:{type:"bool",id:13},highBeamSignal:{type:"bool",id:14,options:{deprecated:!0}},lowBeamSignal:{type:"bool",id:15,options:{deprecated:!0}},leftTurnSignal:{type:"bool",id:16,options:{deprecated:!0}},rightTurnSignal:{type:"bool",id:17,options:{deprecated:!0}},horn:{type:"bool",id:18,options:{deprecated:!0}},wiper:{type:"bool",id:19},disengageStatus:{type:"bool",id:20,options:{deprecated:!0}},drivingMode:{type:"DrivingMode",id:21,options:{default:"COMPLETE_MANUAL"}},errorCode:{type:"ErrorCode",id:22,options:{default:"NO_ERROR"}},gearLocation:{type:"GearPosition",id:23},steeringTimestamp:{type:"double",id:24},header:{type:"apollo.common.Header",id:25},chassisErrorMask:{type:"int32",id:26,options:{default:0}},signal:{type:"apollo.common.VehicleSignal",id:27},chassisGps:{type:"ChassisGPS",id:28},engageAdvice:{type:"apollo.common.EngageAdvice",id:29},wheelSpeed:{type:"WheelSpeed",id:30},surround:{type:"Surround",id:31},license:{type:"License",id:32,options:{deprecated:!0}},vehicleId:{type:"apollo.common.VehicleID",id:33},batterySocPercentage:{type:"int32",id:34,options:{default:-1}}},nested:{DrivingMode:{values:{COMPLETE_MANUAL:0,COMPLETE_AUTO_DRIVE:1,AUTO_STEER_ONLY:2,AUTO_SPEED_ONLY:3,EMERGENCY_MODE:4}},ErrorCode:{values:{NO_ERROR:0,CMD_NOT_IN_PERIOD:1,CHASSIS_ERROR:2,CHASSIS_ERROR_ON_STEER:6,CHASSIS_ERROR_ON_BRAKE:7,CHASSIS_ERROR_ON_THROTTLE:8,CHASSIS_ERROR_ON_GEAR:9,MANUAL_INTERVENTION:3,CHASSIS_CAN_NOT_IN_PERIOD:4,UNKNOWN_ERROR:5}},GearPosition:{values:{GEAR_NEUTRAL:0,GEAR_DRIVE:1,GEAR_REVERSE:2,GEAR_PARKING:3,GEAR_LOW:4,GEAR_INVALID:5,GEAR_NONE:6}}}},ChassisGPS:{fields:{latitude:{type:"double",id:1},longitude:{type:"double",id:2},gpsValid:{type:"bool",id:3},year:{type:"int32",id:4},month:{type:"int32",id:5},day:{type:"int32",id:6},hours:{type:"int32",id:7},minutes:{type:"int32",id:8},seconds:{type:"int32",id:9},compassDirection:{type:"double",id:10},pdop:{type:"double",id:11},isGpsFault:{type:"bool",id:12},isInferred:{type:"bool",id:13},altitude:{type:"double",id:14},heading:{type:"double",id:15},hdop:{type:"double",id:16},vdop:{type:"double",id:17},quality:{type:"GpsQuality",id:18},numSatellites:{type:"int32",id:19},gpsSpeed:{type:"double",id:20}}},GpsQuality:{values:{FIX_NO:0,FIX_2D:1,FIX_3D:2,FIX_INVALID:3}},WheelSpeed:{fields:{isWheelSpdRrValid:{type:"bool",id:1,options:{default:!1}},wheelDirectionRr:{type:"WheelSpeedType",id:2,options:{default:"INVALID"}},wheelSpdRr:{type:"double",id:3,options:{default:0}},isWheelSpdRlValid:{type:"bool",id:4,options:{default:!1}},wheelDirectionRl:{type:"WheelSpeedType",id:5,options:{default:"INVALID"}},wheelSpdRl:{type:"double",id:6,options:{default:0}},isWheelSpdFrValid:{type:"bool",id:7,options:{default:!1}},wheelDirectionFr:{type:"WheelSpeedType",id:8,options:{default:"INVALID"}},wheelSpdFr:{type:"double",id:9,options:{default:0}},isWheelSpdFlValid:{type:"bool",id:10,options:{default:!1}},wheelDirectionFl:{type:"WheelSpeedType",id:11,options:{default:"INVALID"}},wheelSpdFl:{type:"double",id:12,options:{default:0}}},nested:{WheelSpeedType:{values:{FORWARD:0,BACKWARD:1,STANDSTILL:2,INVALID:3}}}},Sonar:{fields:{range:{type:"double",id:1},translation:{type:"apollo.common.Point3D",id:2},rotation:{type:"apollo.common.Quaternion",id:3}}},Surround:{fields:{crossTrafficAlertLeft:{type:"bool",id:1},crossTrafficAlertLeftEnabled:{type:"bool",id:2},blindSpotLeftAlert:{type:"bool",id:3},blindSpotLeftAlertEnabled:{type:"bool",id:4},crossTrafficAlertRight:{type:"bool",id:5},crossTrafficAlertRightEnabled:{type:"bool",id:6},blindSpotRightAlert:{type:"bool",id:7},blindSpotRightAlertEnabled:{type:"bool",id:8},sonar00:{type:"double",id:9},sonar01:{type:"double",id:10},sonar02:{type:"double",id:11},sonar03:{type:"double",id:12},sonar04:{type:"double",id:13},sonar05:{type:"double",id:14},sonar06:{type:"double",id:15},sonar07:{type:"double",id:16},sonar08:{type:"double",id:17},sonar09:{type:"double",id:18},sonar10:{type:"double",id:19},sonar11:{type:"double",id:20},sonarEnabled:{type:"bool",id:21},sonarFault:{type:"bool",id:22},sonarRange:{rule:"repeated",type:"double",id:23,options:{packed:!1}},sonar:{rule:"repeated",type:"Sonar",id:24}}},License:{fields:{vin:{type:"string",id:1,options:{deprecated:!0}}}}}},planning:{nested:{autotuning:{nested:{PathPointwiseFeature:{fields:{l:{type:"double",id:1},dl:{type:"double",id:2},ddl:{type:"double",id:3},kappa:{type:"double",id:4},obstacleInfo:{rule:"repeated",type:"ObstacleFeature",id:5},leftBoundFeature:{type:"BoundRelatedFeature",id:6},rightBoundFeature:{type:"BoundRelatedFeature",id:7}},nested:{ObstacleFeature:{fields:{lateralDistance:{type:"double",id:1}}},BoundRelatedFeature:{fields:{boundDistance:{type:"double",id:1},crossableLevel:{type:"CrossableLevel",id:2}},nested:{CrossableLevel:{values:{CROSS_FREE:0,CROSS_ABLE:1,CROSS_FORBIDDEN:2}}}}}},SpeedPointwiseFeature:{fields:{s:{type:"double",id:1,options:{default:0}},t:{type:"double",id:2,options:{default:0}},v:{type:"double",id:3,options:{default:0}},speedLimit:{type:"double",id:4,options:{default:0}},acc:{type:"double",id:5,options:{default:0}},jerk:{type:"double",id:6,options:{default:0}},followObsFeature:{rule:"repeated",type:"ObstacleFeature",id:7},overtakeObsFeature:{rule:"repeated",type:"ObstacleFeature",id:8},nudgeObsFeature:{rule:"repeated",type:"ObstacleFeature",id:9},stopObsFeature:{rule:"repeated",type:"ObstacleFeature",id:10},collisionTimes:{type:"int32",id:11,options:{default:0}},virtualObsFeature:{rule:"repeated",type:"ObstacleFeature",id:12},lateralAcc:{type:"double",id:13,options:{default:0}},pathCurvatureAbs:{type:"double",id:14,options:{default:0}},sidepassFrontObsFeature:{rule:"repeated",type:"ObstacleFeature",id:15},sidepassRearObsFeature:{rule:"repeated",type:"ObstacleFeature",id:16}},nested:{ObstacleFeature:{fields:{longitudinalDistance:{type:"double",id:1},obstacleSpeed:{type:"double",id:2},lateralDistance:{type:"double",id:3,options:{default:10}},probability:{type:"double",id:4},relativeV:{type:"double",id:5}}}}},TrajectoryPointwiseFeature:{fields:{pathInputFeature:{type:"PathPointwiseFeature",id:1},speedInputFeature:{type:"SpeedPointwiseFeature",id:2}}},TrajectoryFeature:{fields:{pointFeature:{rule:"repeated",type:"TrajectoryPointwiseFeature",id:1}}},PathPointRawFeature:{fields:{cartesianCoord:{type:"apollo.common.PathPoint",id:1},frenetCoord:{type:"apollo.common.FrenetFramePoint",id:2}}},SpeedPointRawFeature:{fields:{s:{type:"double",id:1},t:{type:"double",id:2},v:{type:"double",id:3},a:{type:"double",id:4},j:{type:"double",id:5},speedLimit:{type:"double",id:6},follow:{rule:"repeated",type:"ObjectDecisionFeature",id:10},overtake:{rule:"repeated",type:"ObjectDecisionFeature",id:11},virtualDecision:{rule:"repeated",type:"ObjectDecisionFeature",id:13},stop:{rule:"repeated",type:"ObjectDecisionFeature",id:14},collision:{rule:"repeated",type:"ObjectDecisionFeature",id:15},nudge:{rule:"repeated",type:"ObjectDecisionFeature",id:12},sidepassFront:{rule:"repeated",type:"ObjectDecisionFeature",id:16},sidepassRear:{rule:"repeated",type:"ObjectDecisionFeature",id:17},keepClear:{rule:"repeated",type:"ObjectDecisionFeature",id:18}},nested:{ObjectDecisionFeature:{fields:{id:{type:"int32",id:1},relativeS:{type:"double",id:2},relativeL:{type:"double",id:3},relativeV:{type:"double",id:4},speed:{type:"double",id:5}}}}},ObstacleSTRawData:{fields:{obstacleStData:{rule:"repeated",type:"ObstacleSTData",id:1},obstacleStNudge:{rule:"repeated",type:"ObstacleSTData",id:2},obstacleStSidepass:{rule:"repeated",type:"ObstacleSTData",id:3}},nested:{STPointPair:{fields:{sLower:{type:"double",id:1},sUpper:{type:"double",id:2},t:{type:"double",id:3},l:{type:"double",id:4,options:{default:10}}}},ObstacleSTData:{fields:{id:{type:"int32",id:1},speed:{type:"double",id:2},isVirtual:{type:"bool",id:3},probability:{type:"double",id:4},polygon:{rule:"repeated",type:"STPointPair",id:8},distribution:{rule:"repeated",type:"STPointPair",id:9}}}}},TrajectoryPointRawFeature:{fields:{pathFeature:{type:"PathPointRawFeature",id:1},speedFeature:{type:"SpeedPointRawFeature",id:2}}},TrajectoryRawFeature:{fields:{pointFeature:{rule:"repeated",type:"TrajectoryPointRawFeature",id:1},stRawData:{type:"ObstacleSTRawData",id:2}}}}},TargetLane:{fields:{id:{type:"string",id:1},startS:{type:"double",id:2},endS:{type:"double",id:3},speedLimit:{type:"double",id:4}}},ObjectIgnore:{fields:{}},StopReasonCode:{values:{STOP_REASON_HEAD_VEHICLE:1,STOP_REASON_DESTINATION:2,STOP_REASON_PEDESTRIAN:3,STOP_REASON_OBSTACLE:4,STOP_REASON_PREPARKING:5,STOP_REASON_SIGNAL:100,STOP_REASON_STOP_SIGN:101,STOP_REASON_YIELD_SIGN:102,STOP_REASON_CLEAR_ZONE:103,STOP_REASON_CROSSWALK:104,STOP_REASON_CREEPER:105,STOP_REASON_REFERENCE_END:106,STOP_REASON_YELLOW_SIGNAL:107,STOP_REASON_PULL_OVER:108,STOP_REASON_SIDEPASS_SAFETY:109,STOP_REASON_PRE_OPEN_SPACE_STOP:200,STOP_REASON_LANE_CHANGE_URGENCY:201,STOP_REASON_EMERGENCY:202}},ObjectStop:{fields:{reasonCode:{type:"StopReasonCode",id:1},distanceS:{type:"double",id:2},stopPoint:{type:"apollo.common.PointENU",id:3},stopHeading:{type:"double",id:4},waitForObstacle:{rule:"repeated",type:"string",id:5}}},ObjectNudge:{fields:{type:{type:"Type",id:1},distanceL:{type:"double",id:2}},nested:{Type:{values:{LEFT_NUDGE:1,RIGHT_NUDGE:2,DYNAMIC_LEFT_NUDGE:3,DYNAMIC_RIGHT_NUDGE:4}}}},ObjectYield:{fields:{distanceS:{type:"double",id:1},fencePoint:{type:"apollo.common.PointENU",id:2},fenceHeading:{type:"double",id:3},timeBuffer:{type:"double",id:4}}},ObjectFollow:{fields:{distanceS:{type:"double",id:1},fencePoint:{type:"apollo.common.PointENU",id:2},fenceHeading:{type:"double",id:3}}},ObjectOvertake:{fields:{distanceS:{type:"double",id:1},fencePoint:{type:"apollo.common.PointENU",id:2},fenceHeading:{type:"double",id:3},timeBuffer:{type:"double",id:4}}},ObjectSidePass:{fields:{type:{type:"Type",id:1}},nested:{Type:{values:{LEFT:1,RIGHT:2}}}},ObjectAvoid:{fields:{}},ObjectStatus:{fields:{motionType:{type:"ObjectMotionType",id:1},decisionType:{type:"ObjectDecisionType",id:2}}},ObjectStatic:{fields:{}},ObjectDynamic:{fields:{}},ObjectMotionType:{oneofs:{motionTag:{oneof:["static","dynamic"]}},fields:{static:{type:"ObjectStatic",id:1},dynamic:{type:"ObjectDynamic",id:2}}},ObjectDecisionType:{oneofs:{objectTag:{oneof:["ignore","stop","follow","yield","overtake","nudge","avoid","sidePass"]}},fields:{ignore:{type:"ObjectIgnore",id:1},stop:{type:"ObjectStop",id:2},follow:{type:"ObjectFollow",id:3},yield:{type:"ObjectYield",id:4},overtake:{type:"ObjectOvertake",id:5},nudge:{type:"ObjectNudge",id:6},avoid:{type:"ObjectAvoid",id:7},sidePass:{type:"ObjectSidePass",id:8}}},ObjectDecision:{fields:{id:{type:"string",id:1},perceptionId:{type:"int32",id:2},objectDecision:{rule:"repeated",type:"ObjectDecisionType",id:3}}},ObjectDecisions:{fields:{decision:{rule:"repeated",type:"ObjectDecision",id:1}}},MainStop:{fields:{reasonCode:{type:"StopReasonCode",id:1},reason:{type:"string",id:2},stopPoint:{type:"apollo.common.PointENU",id:3},stopHeading:{type:"double",id:4},changeLaneType:{type:"apollo.routing.ChangeLaneType",id:5}}},EmergencyStopHardBrake:{fields:{}},EmergencyStopCruiseToStop:{fields:{}},MainEmergencyStop:{oneofs:{task:{oneof:["hardBrake","cruiseToStop"]}},fields:{reasonCode:{type:"ReasonCode",id:1},reason:{type:"string",id:2},hardBrake:{type:"EmergencyStopHardBrake",id:3},cruiseToStop:{type:"EmergencyStopCruiseToStop",id:4}},nested:{ReasonCode:{values:{ESTOP_REASON_INTERNAL_ERR:1,ESTOP_REASON_COLLISION:2,ESTOP_REASON_ST_FIND_PATH:3,ESTOP_REASON_ST_MAKE_DECISION:4,ESTOP_REASON_SENSOR_ERROR:5}}}},MainCruise:{fields:{changeLaneType:{type:"apollo.routing.ChangeLaneType",id:1}}},MainChangeLane:{fields:{type:{type:"Type",id:1},defaultLane:{rule:"repeated",type:"TargetLane",id:2},defaultLaneStop:{type:"MainStop",id:3},targetLaneStop:{type:"MainStop",id:4}},nested:{Type:{values:{LEFT:1,RIGHT:2}}}},MainMissionComplete:{fields:{stopPoint:{type:"apollo.common.PointENU",id:1},stopHeading:{type:"double",id:2}}},MainNotReady:{fields:{reason:{type:"string",id:1}}},MainParking:{fields:{status:{type:"ParkingStatus",id:1}},nested:{ParkingStatus:{values:{IN_PARKING:1}}}},MainDecision:{oneofs:{task:{oneof:["cruise","stop","estop","changeLane","missionComplete","notReady","parking"]}},fields:{cruise:{type:"MainCruise",id:1},stop:{type:"MainStop",id:2},estop:{type:"MainEmergencyStop",id:3},changeLane:{type:"MainChangeLane",id:4,options:{deprecated:!0}},missionComplete:{type:"MainMissionComplete",id:6},notReady:{type:"MainNotReady",id:7},parking:{type:"MainParking",id:8},targetLane:{rule:"repeated",type:"TargetLane",id:5,options:{deprecated:!0}}}},DecisionResult:{fields:{mainDecision:{type:"MainDecision",id:1},objectDecision:{type:"ObjectDecisions",id:2},vehicleSignal:{type:"apollo.common.VehicleSignal",id:3}}},IpoptReturnStatus:{values:{SOLVE_SUCCEEDED:0,SOLVED_TO_ACCEPTABLE_LEVEL:1,INFEASIBLE_PROBLEM_DETECTED:2,SEARCH_DIRECTION_BECOMES_TOO_SMALL:3,DIVERGIN_ITERATES:4,USER_REQUESTED_STOP:5,FEASIBLE_POINT_FOUND:6,MAXIMUM_ITERATIONS_EXCEEDED:-1,RESTORATION_FAILED:-2,ERROR_IN_STEP_COMPUTATION:-3,NOT_ENOUGH_DEGREES_OF_FREEDOM:-10,INVALID_PROGRAM_DEFINITION:-11,INVALID_OPTION:-12,INVALID_NUMBER_DETECTED:-13,UNRECOVERABLE_EXCEPTION:-100,NONIPOPT_EXCEPTION_THROWN:-101,INSUFFICIENT_MEMORY:-102,INTERNAL_ERROR:199}},StopPoint:{fields:{s:{type:"double",id:1},type:{type:"Type",id:2,options:{default:"HARD"}}},nested:{Type:{values:{HARD:0,SOFT:1}}}},PlanningTarget:{fields:{stopPoint:{type:"StopPoint",id:1},cruiseSpeed:{type:"double",id:2}}},OverlapFeature:{fields:{id:{type:"string",id:1},distance:{type:"double",id:2}}},PlanningTag:{fields:{laneTurn:{type:"apollo.hdmap.Lane.LaneTurn",id:1},clearArea:{type:"OverlapFeature",id:2},crosswalk:{type:"OverlapFeature",id:3},pncJunction:{type:"OverlapFeature",id:4},signal:{type:"OverlapFeature",id:5},stopSign:{type:"OverlapFeature",id:6},yieldSign:{type:"OverlapFeature",id:7}}},ChassisFeature:{fields:{messageTimestampSec:{type:"double",id:1},speedMps:{type:"float",id:2},throttlePercentage:{type:"float",id:3},brakePercentage:{type:"float",id:4},steeringPercentage:{type:"float",id:5},gearLocation:{type:"apollo.canbus.Chassis.GearPosition",id:6}}},LocalizationFeature:{fields:{messageTimestampSec:{type:"double",id:1},position:{type:"apollo.common.PointENU",id:2},heading:{type:"double",id:3},linearVelocity:{type:"apollo.common.Point3D",id:4},linearAcceleration:{type:"apollo.common.Point3D",id:5},angularVelocity:{type:"apollo.common.Point3D",id:6}}},CommonPathPointFeature:{fields:{x:{type:"double",id:1},y:{type:"double",id:2},z:{type:"double",id:3},theta:{type:"double",id:4},s:{type:"double",id:5},laneId:{type:"string",id:6}}},CommonTrajectoryPointFeature:{fields:{pathPoint:{type:"CommonPathPointFeature",id:1},v:{type:"double",id:2},a:{type:"double",id:3},relativeTime:{type:"double",id:4},gaussianInfo:{type:"apollo.common.GaussianInfo",id:5}}},TrajectoryPointFeature:{fields:{timestampSec:{type:"double",id:1},trajectoryPoint:{type:"CommonTrajectoryPointFeature",id:2}}},PerceptionObstacleFeature:{fields:{timestampSec:{type:"double",id:1},position:{type:"apollo.common.Point3D",id:2},theta:{type:"double",id:3},velocity:{type:"apollo.common.Point3D",id:4},acceleration:{type:"apollo.common.Point3D",id:5},polygonPoint:{rule:"repeated",type:"apollo.common.Point3D",id:6}}},ObstacleTrajectoryFeature:{fields:{perceptionObstacleHistory:{rule:"repeated",type:"PerceptionObstacleFeature",id:1},evaluatedTrajectoryPoint:{rule:"repeated",type:"TrajectoryPointFeature",id:2}}},PredictionTrajectoryFeature:{fields:{probability:{type:"double",id:1},trajectoryPoint:{rule:"repeated",type:"TrajectoryPointFeature",id:2}}},PredictionObstacleFeature:{fields:{timestampSec:{type:"double",id:1},predictedPeriod:{type:"double",id:2},intent:{type:"apollo.prediction.ObstacleIntent",id:3},priority:{type:"apollo.prediction.ObstaclePriority",id:4},isStatic:{type:"bool",id:5,options:{default:!1}},trajectory:{rule:"repeated",type:"PredictionTrajectoryFeature",id:6}}},ObstacleFeature:{fields:{id:{type:"int32",id:1},length:{type:"double",id:2},width:{type:"double",id:3},height:{type:"double",id:4},type:{type:"apollo.perception.PerceptionObstacle.Type",id:5},obstacleTrajectory:{type:"ObstacleTrajectoryFeature",id:6},obstaclePrediction:{type:"PredictionObstacleFeature",id:7}}},RoutingResponseFeature:{fields:{road:{rule:"repeated",type:"apollo.routing.RoadSegment",id:1},measurement:{type:"apollo.routing.Measurement",id:2}}},RoutingFeature:{fields:{routingResponse:{type:"RoutingResponseFeature",id:1},localRoutingLaneId:{rule:"repeated",type:"string",id:2},localRouting:{type:"RoutingResponseFeature",id:3}}},TrafficLightFeature:{fields:{color:{type:"apollo.perception.TrafficLight.Color",id:1},id:{type:"string",id:2},confidence:{type:"double",id:3,options:{default:1}},trackingTime:{type:"double",id:4},blink:{type:"bool",id:5},remainingTime:{type:"double",id:6}}},TrafficLightDetectionFeature:{fields:{messageTimestampSec:{type:"double",id:1},trafficLight:{rule:"repeated",type:"TrafficLightFeature",id:2}}},ADCTrajectoryPoint:{fields:{timestampSec:{type:"double",id:1},planningTag:{type:"PlanningTag",id:2},trajectoryPoint:{type:"CommonTrajectoryPointFeature",id:3}}},LearningOutput:{fields:{adcFutureTrajectoryPoint:{rule:"repeated",type:"TrajectoryPointFeature",id:1}}},LearningDataFrame:{fields:{messageTimestampSec:{type:"double",id:1},frameNum:{type:"uint32",id:2},mapName:{type:"string",id:3},planningTag:{type:"PlanningTag",id:4},chassis:{type:"ChassisFeature",id:5},localization:{type:"LocalizationFeature",id:6},obstacle:{rule:"repeated",type:"ObstacleFeature",id:7},routing:{type:"RoutingFeature",id:8},trafficLightDetection:{type:"TrafficLightDetectionFeature",id:9},adcTrajectoryPoint:{rule:"repeated",type:"ADCTrajectoryPoint",id:10},output:{type:"LearningOutput",id:11}}},LearningData:{fields:{learningDataFrame:{rule:"repeated",type:"LearningDataFrame",id:1}}},PlanningLearningData:{fields:{header:{type:"apollo.common.Header",id:1},learningDataFrame:{type:"LearningDataFrame",id:2}}},OpenSpaceFallBackDeciderConfig:{fields:{openSpacePredictionTimePeriod:{type:"double",id:1,options:{default:5}},openSpaceFallbackCollisionDistance:{type:"double",id:2,options:{default:5}},openSpaceFallbackStopDistance:{type:"double",id:3,options:{default:2}},openSpaceFallbackCollisionTimeBuffer:{type:"double",id:4,options:{default:10}}}},OpenSpacePreStopDeciderConfig:{fields:{stopType:{type:"StopType",id:1},rightawayStopDistance:{type:"double",id:2,options:{default:2}},stopDistanceToTarget:{type:"double",id:3,options:{default:5}}},nested:{StopType:{values:{NOT_DEFINED:0,PARKING:1,PULL_OVER:2,NARROW_STREET_U_TURN:3,DEAD_END_PRE_STOP:4}}}},OpenSpaceRoiDeciderConfig:{fields:{roiType:{type:"RoiType",id:1},roiLongitudinalRangeStart:{type:"double",id:2,options:{default:10}},roiLongitudinalRangeEnd:{type:"double",id:3,options:{default:10}},parkingStartRange:{type:"double",id:4,options:{default:7}},parkingInwards:{type:"bool",id:5,options:{default:!1}},enablePerceptionObstacles:{type:"bool",id:6},parkingDepthBuffer:{type:"double",id:7,options:{default:.1}},roiLineSegmentMinAngle:{type:"double",id:8,options:{default:.3}},roiLineSegmentLength:{type:"double",id:9,options:{default:1}},roiLineSegmentLengthFromMap:{type:"double",id:10,options:{default:10}},perceptionObstacleFilteringDistance:{type:"double",id:11,options:{default:1e3}},perceptionObstacleBuffer:{type:"double",id:12},curbHeadingTangentChangeUpperLimit:{type:"double",id:13,options:{default:1}},endPoseSDistance:{type:"double",id:14,options:{default:10}},parallelParkEndXBuffer:{type:"double",id:15,options:{default:.2}},extendRightXBuffer:{type:"double",id:16,options:{default:0}},extendLeftXBuffer:{type:"double",id:17,options:{default:0}}},nested:{RoiType:{values:{NOT_DEFINED:0,PARKING:1,PULL_OVER:2,PARK_AND_GO:3,NARROW_STREET_U_TURN:4,DEAD_END:5}}}},OpenSpaceTrajectoryPartitionConfig:{fields:{gearShiftMaxT:{type:"double",id:1},gearShiftUnitT:{type:"double",id:2},gearShiftPeriodDuration:{type:"double",id:3},interpolatedPiecesNum:{type:"uint64",id:4},initialGearCheckHorizon:{type:"uint64",id:5},headingSearchRange:{type:"double",id:6},headingTrackRange:{type:"double",id:7},distanceSearchRange:{type:"double",id:8,options:{default:1e-6}},headingOffsetToMidpoint:{type:"double",id:9},lateralOffsetToMidpoint:{type:"double",id:10,options:{default:.1}},longitudinalOffsetToMidpoint:{type:"double",id:11,options:{default:.1}},vehicleBoxIouThresholdToMidpoint:{type:"double",id:12,options:{default:.95}},linearVelocityThresholdOnEgo:{type:"double",id:13,options:{default:.2}}}},OpenSpaceTrajectoryProviderConfig:{fields:{openSpaceTrajectoryOptimizerConfig:{type:"OpenSpaceTrajectoryOptimizerConfig",id:1}}},OpenSpaceTrajectoryOptimizerConfig:{fields:{hybridAStarConfig:{type:"HybridAStarConfig",id:1},dualVariableWarmStartConfig:{type:"DualVariableConfig",id:2},distanceApproachTrajectorySmootherConfig:{type:"DistanceApproachTrajectorySmootherConfig",id:3},deltaT:{type:"float",id:4,options:{default:.5}},isNearDestinationThreshold:{type:"double",id:5,options:{default:.001}},plannerOpenSpaceConfig:{type:"PlannerOpenSpaceConfig",id:6}}},HybridAStarConfig:{fields:{xyGridResolution:{type:"double",id:1,options:{default:.2}},phiGridResolution:{type:"double",id:2,options:{default:.05}},nextNodeNum:{type:"uint64",id:3,options:{default:10}},stepSize:{type:"double",id:4,options:{default:.5}},trajForwardPenalty:{type:"double",id:5,options:{default:0}},trajBackPenalty:{type:"double",id:6,options:{default:0}},trajGearSwitchPenalty:{type:"double",id:7,options:{default:10}},trajSteerPenalty:{type:"double",id:8,options:{default:100}},trajSteerChangePenalty:{type:"double",id:9,options:{default:10}},gridAStarXyResolution:{type:"double",id:15,options:{default:.1}},nodeRadius:{type:"double",id:16,options:{default:.5}}}},DualVariableMode:{values:{DUAL_VARIABLE_IPOPT:0,DUAL_VARIABLE_IPOPTQP:1,DUAL_VARIABLE_OSQP:2,DUAL_VARIABLE_DEBUG:3}},DualVariableConfig:{fields:{weightD:{type:"double",id:1,options:{default:1}},ipoptConfig:{type:"IpoptSolverConfig",id:2},qpFormat:{type:"DualVariableMode",id:3},minSafetyDistance:{type:"double",id:4,options:{default:0}},debugOsqp:{type:"bool",id:5,options:{default:!1}},beta:{type:"double",id:6,options:{default:1}}}},DistanceApproachTrajectorySmootherConfig:{fields:{weightSteer:{type:"double",id:1},weightA:{type:"double",id:2},weightSteerRate:{type:"double",id:3},weightARate:{type:"double",id:4},weightX:{type:"double",id:5},weightY:{type:"double",id:6},weightPhi:{type:"double",id:7},weightV:{type:"double",id:8},weightSteerStitching:{type:"double",id:9},weightAStitching:{type:"double",id:10},weightFirstOrderTime:{type:"double",id:11},weightSecondOrderTime:{type:"double",id:12},minSafetyDistance:{type:"double",id:13,options:{default:0}},maxSpeedForward:{type:"double",id:14,options:{default:3}},maxSpeedReverse:{type:"double",id:15,options:{default:2}},maxAccelerationForward:{type:"double",id:16,options:{default:2}},maxAccelerationReverse:{type:"double",id:17,options:{default:2}},minTimeSampleScaling:{type:"double",id:18,options:{default:.1}},maxTimeSampleScaling:{type:"double",id:19,options:{default:10}},useFixTime:{type:"bool",id:20,options:{default:!1}},ipoptConfig:{type:"IpoptSolverConfig",id:21},enableConstraintCheck:{type:"bool",id:22},enableHandDerivative:{type:"bool",id:23},enableDerivativeCheck:{type:"bool",id:24},enableInitialFinalCheck:{type:"bool",id:25,options:{default:!1}}}},IpoptSolverConfig:{fields:{ipoptPrintLevel:{type:"int32",id:1},mumpsMemPercent:{type:"int32",id:2},mumpsPivtol:{type:"double",id:3},ipoptMaxIter:{type:"int32",id:4},ipoptTol:{type:"double",id:5},ipoptAcceptableConstrViolTol:{type:"double",id:6},ipoptMinHessianPerturbation:{type:"double",id:7},ipoptJacobianRegularizationValue:{type:"double",id:8},ipoptPrintTimingStatistics:{type:"string",id:9},ipoptAlphaForY:{type:"string",id:10},ipoptRecalcY:{type:"string",id:11},ipoptMuInit:{type:"double",id:12,options:{default:.1}}}},DrivingAction:{values:{NONE:100,FOLLOW:0,CHANGE_LEFT:1,CHANGE_RIGHT:2,PULL_OVER:3,STOP:4,RESUME_CRUISE:5}},PadMessage:{fields:{header:{type:"apollo.common.Header",id:1},action:{type:"DrivingAction",id:2}}},DualWarmUpMode:{values:{IPOPT:0,IPOPTQP:1,OSQP:2,DEBUG:3,SLACKQP:4}},DistanceApproachMode:{values:{DISTANCE_APPROACH_IPOPT:0,DISTANCE_APPROACH_IPOPT_CUDA:1,DISTANCE_APPROACH_IPOPT_FIXED_TS:2,DISTANCE_APPROACH_IPOPT_FIXED_DUAL:3,DISTANCE_APPROACH_IPOPT_RELAX_END:4,DISTANCE_APPROACH_IPOPT_RELAX_END_SLACK:5}},PlannerOpenSpaceConfig:{fields:{roiConfig:{type:"ROIConfig",id:1},warmStartConfig:{type:"WarmStartConfig",id:2},dualVariableWarmStartConfig:{type:"DualVariableWarmStartConfig",id:3},distanceApproachConfig:{type:"DistanceApproachConfig",id:4},iterativeAnchoringSmootherConfig:{type:"IterativeAnchoringConfig",id:5},trajectoryPartitionConfig:{type:"TrajectoryPartitionConfig",id:6},deltaT:{type:"float",id:7,options:{default:1}},isNearDestinationThreshold:{type:"double",id:8,options:{default:.001}},enableCheckParallelTrajectory:{type:"bool",id:9,options:{default:!1}},enableLinearInterpolation:{type:"bool",id:10,options:{default:!1}},isNearDestinationThetaThreshold:{type:"double",id:11,options:{default:.05}}}},ROIConfig:{fields:{roiLongitudinalRangeStart:{type:"double",id:1,options:{default:10}},roiLongitudinalRangeEnd:{type:"double",id:2,options:{default:10}},parkingStartRange:{type:"double",id:3,options:{default:7}},parkingInwards:{type:"bool",id:4,options:{default:!1}}}},WarmStartConfig:{fields:{xyGridResolution:{type:"double",id:1,options:{default:.2}},phiGridResolution:{type:"double",id:2,options:{default:.05}},nextNodeNum:{type:"uint64",id:3,options:{default:10}},stepSize:{type:"double",id:4,options:{default:.5}},trajForwardPenalty:{type:"double",id:5,options:{default:0}},trajBackPenalty:{type:"double",id:6,options:{default:0}},trajGearSwitchPenalty:{type:"double",id:7,options:{default:10}},trajSteerPenalty:{type:"double",id:8,options:{default:100}},trajSteerChangePenalty:{type:"double",id:9,options:{default:10}},gridAStarXyResolution:{type:"double",id:15,options:{default:.1}},nodeRadius:{type:"double",id:16,options:{default:.5}},sCurveConfig:{type:"PiecewiseJerkSpeedOptimizerConfig",id:17}}},DualVariableWarmStartConfig:{fields:{weightD:{type:"double",id:1,options:{default:1}},ipoptConfig:{type:"IpoptConfig",id:2},qpFormat:{type:"DualWarmUpMode",id:3},minSafetyDistance:{type:"double",id:4,options:{default:0}},debugOsqp:{type:"bool",id:5,options:{default:!1}},beta:{type:"double",id:6,options:{default:1}},osqpConfig:{type:"OSQPConfig",id:7}}},DistanceApproachConfig:{fields:{weightSteer:{type:"double",id:1},weightA:{type:"double",id:2},weightSteerRate:{type:"double",id:3},weightARate:{type:"double",id:4},weightX:{type:"double",id:5},weightY:{type:"double",id:6},weightPhi:{type:"double",id:7},weightV:{type:"double",id:8},weightSteerStitching:{type:"double",id:9},weightAStitching:{type:"double",id:10},weightFirstOrderTime:{type:"double",id:11},weightSecondOrderTime:{type:"double",id:12},minSafetyDistance:{type:"double",id:13,options:{default:0}},maxSpeedForward:{type:"double",id:14,options:{default:3}},maxSpeedReverse:{type:"double",id:15,options:{default:2}},maxAccelerationForward:{type:"double",id:16,options:{default:2}},maxAccelerationReverse:{type:"double",id:17,options:{default:2}},minTimeSampleScaling:{type:"double",id:18,options:{default:.1}},maxTimeSampleScaling:{type:"double",id:19,options:{default:10}},useFixTime:{type:"bool",id:20,options:{default:!1}},ipoptConfig:{type:"IpoptConfig",id:21},enableConstraintCheck:{type:"bool",id:22},enableHandDerivative:{type:"bool",id:23},enableDerivativeCheck:{type:"bool",id:24},enableInitialFinalCheck:{type:"bool",id:25,options:{default:!1}},distanceApproachMode:{type:"DistanceApproachMode",id:26},enableJacobianAd:{type:"bool",id:27,options:{default:!1}},enableCheckInitialState:{type:"bool",id:28,options:{default:!1}},weightEndState:{type:"double",id:29,options:{default:0}},weightSlack:{type:"double",id:30,options:{default:0}}}},IpoptConfig:{fields:{ipoptPrintLevel:{type:"int32",id:1},mumpsMemPercent:{type:"int32",id:2},mumpsPivtol:{type:"double",id:3},ipoptMaxIter:{type:"int32",id:4},ipoptTol:{type:"double",id:5},ipoptAcceptableConstrViolTol:{type:"double",id:6},ipoptMinHessianPerturbation:{type:"double",id:7},ipoptJacobianRegularizationValue:{type:"double",id:8},ipoptPrintTimingStatistics:{type:"string",id:9},ipoptAlphaForY:{type:"string",id:10},ipoptRecalcY:{type:"string",id:11},ipoptMuInit:{type:"double",id:12,options:{default:.1}}}},OSQPConfig:{fields:{alpha:{type:"double",id:1,options:{default:1}},epsAbs:{type:"double",id:2,options:{default:.001}},epsRel:{type:"double",id:3,options:{default:.001}},maxIter:{type:"int32",id:4,options:{default:1e4}},polish:{type:"bool",id:5,options:{default:!0}},osqpDebugLog:{type:"bool",id:6,options:{default:!1}}}},IterativeAnchoringConfig:{fields:{interpolatedDeltaS:{type:"double",id:1,options:{default:.1}},reanchoringTrailsNum:{type:"int32",id:2,options:{default:50}},reanchoringPosStddev:{type:"double",id:3,options:{default:.25}},reanchoringLengthStddev:{type:"double",id:4,options:{default:1}},estimateBound:{type:"bool",id:5,options:{default:!1}},defaultBound:{type:"double",id:6,options:{default:2}},vehicleShortestDimension:{type:"double",id:7,options:{default:1.04}},femPosDeviationSmootherConfig:{type:"FemPosDeviationSmootherConfig",id:8},collisionDecreaseRatio:{type:"double",id:9,options:{default:.9}},maxForwardV:{type:"double",id:10,options:{default:2}},maxReverseV:{type:"double",id:11,options:{default:2}},maxForwardAcc:{type:"double",id:12,options:{default:3}},maxReverseAcc:{type:"double",id:13,options:{default:2}},maxAccJerk:{type:"double",id:14,options:{default:4}},deltaT:{type:"double",id:15,options:{default:.2}},sCurveConfig:{type:"PiecewiseJerkSpeedOptimizerConfig",id:16}}},TrajectoryPartitionConfig:{fields:{interpolatedPiecesNum:{type:"uint64",id:1,options:{default:50}},initialGearCheckHorizon:{type:"uint64",id:2,options:{default:3}},headingSearchingRange:{type:"double",id:3,options:{default:.3}},gearShiftPeriodDuration:{type:"double",id:4,options:{default:2}},gearShiftMaxT:{type:"double",id:5,options:{default:3}},gearShiftUnitT:{type:"double",id:6,options:{default:.02}}}},EStop:{fields:{isEstop:{type:"bool",id:1},reason:{type:"string",id:2}}},TaskStats:{fields:{name:{type:"string",id:1},timeMs:{type:"double",id:2}}},LatencyStats:{fields:{totalTimeMs:{type:"double",id:1},taskStats:{rule:"repeated",type:"TaskStats",id:2},initFrameTimeMs:{type:"double",id:3}}},JucType:{values:{UNKNOWN:0,IN_ROAD:1,CROSS_ROAD:2,FORK_ROAD:3,MAIN_SIDE:4,DEAD_END:5}},RSSInfo:{fields:{isRssSafe:{type:"bool",id:1},curDistLon:{type:"double",id:2},rssSafeDistLon:{type:"double",id:3},accLonRangeMinimum:{type:"double",id:4},accLonRangeMaximum:{type:"double",id:5},accLatLeftRangeMinimum:{type:"double",id:6},accLatLeftRangeMaximum:{type:"double",id:7},accLatRightRangeMinimum:{type:"double",id:8},accLatRightRangeMaximum:{type:"double",id:9}}},ADCTrajectory:{fields:{header:{type:"apollo.common.Header",id:1},totalPathLength:{type:"double",id:2},totalPathTime:{type:"double",id:3},estop:{type:"EStop",id:6},debug:{type:"apollo.planning_internal.Debug",id:8},isReplan:{type:"bool",id:9,options:{default:!1}},gear:{type:"apollo.canbus.Chassis.GearPosition",id:10},trajectoryPoint:{rule:"repeated",type:"apollo.common.TrajectoryPoint",id:12},pathPoint:{rule:"repeated",type:"apollo.common.PathPoint",id:13},decision:{type:"apollo.planning.DecisionResult",id:14},latencyStats:{type:"LatencyStats",id:15},routingHeader:{type:"apollo.common.Header",id:16},rightOfWayStatus:{type:"RightOfWayStatus",id:17},laneId:{rule:"repeated",type:"apollo.hdmap.Id",id:18},engageAdvice:{type:"apollo.common.EngageAdvice",id:19},criticalRegion:{type:"CriticalRegion",id:20},trajectoryType:{type:"TrajectoryType",id:21,options:{default:"UNKNOWN"}},replanReason:{type:"string",id:22},targetLaneId:{rule:"repeated",type:"apollo.hdmap.Id",id:23},carInDeadEnd:{type:"bool",id:24},rssInfo:{type:"RSSInfo",id:100}},nested:{RightOfWayStatus:{values:{UNPROTECTED:0,PROTECTED:1}},CriticalRegion:{fields:{region:{rule:"repeated",type:"apollo.common.Polygon",id:1}}},TrajectoryType:{values:{UNKNOWN:0,NORMAL:1,PATH_FALLBACK:2,SPEED_FALLBACK:3,PATH_REUSED:4}}}},TaskConfig:{oneofs:{taskConfig:{oneof:["creepDeciderConfig","laneChangeDeciderConfig","openSpaceFallbackDeciderConfig","openSpacePreStopDeciderConfig","openSpaceRoiDeciderConfig","pathAssessmentDeciderConfig","pathBoundsDeciderConfig","pathDeciderConfig","pathLaneBorrowDeciderConfig","pathReferenceDeciderConfig","pathReuseDeciderConfig","ruleBasedStopDeciderConfig","speedBoundsDeciderConfig","stBoundsDeciderConfig","openSpaceTrajectoryPartitionConfig","openSpaceTrajectoryProviderConfig","piecewiseJerkNonlinearSpeedOptimizerConfig","piecewiseJerkPathOptimizerConfig","piecewiseJerkSpeedOptimizerConfig","speedHeuristicOptimizerConfig","learningModelInferenceTaskConfig","learningModelInferenceTrajectoryTaskConfig"]}},fields:{taskType:{type:"TaskType",id:1},creepDeciderConfig:{type:"CreepDeciderConfig",id:2},laneChangeDeciderConfig:{type:"LaneChangeDeciderConfig",id:3},openSpaceFallbackDeciderConfig:{type:"OpenSpaceFallBackDeciderConfig",id:4},openSpacePreStopDeciderConfig:{type:"OpenSpacePreStopDeciderConfig",id:5},openSpaceRoiDeciderConfig:{type:"OpenSpaceRoiDeciderConfig",id:6},pathAssessmentDeciderConfig:{type:"PathAssessmentDeciderConfig",id:7},pathBoundsDeciderConfig:{type:"PathBoundsDeciderConfig",id:8},pathDeciderConfig:{type:"PathDeciderConfig",id:9},pathLaneBorrowDeciderConfig:{type:"PathLaneBorrowDeciderConfig",id:10},pathReferenceDeciderConfig:{type:"PathReferenceDeciderConfig",id:11},pathReuseDeciderConfig:{type:"PathReuseDeciderConfig",id:12},ruleBasedStopDeciderConfig:{type:"RuleBasedStopDeciderConfig",id:13},speedBoundsDeciderConfig:{type:"SpeedBoundsDeciderConfig",id:14},stBoundsDeciderConfig:{type:"STBoundsDeciderConfig",id:15},openSpaceTrajectoryPartitionConfig:{type:"OpenSpaceTrajectoryPartitionConfig",id:16},openSpaceTrajectoryProviderConfig:{type:"OpenSpaceTrajectoryProviderConfig",id:17},piecewiseJerkNonlinearSpeedOptimizerConfig:{type:"PiecewiseJerkNonlinearSpeedOptimizerConfig",id:18},piecewiseJerkPathOptimizerConfig:{type:"PiecewiseJerkPathOptimizerConfig",id:19},piecewiseJerkSpeedOptimizerConfig:{type:"PiecewiseJerkSpeedOptimizerConfig",id:20},speedHeuristicOptimizerConfig:{type:"SpeedHeuristicOptimizerConfig",id:21},learningModelInferenceTaskConfig:{type:"LearningModelInferenceTaskConfig",id:22},learningModelInferenceTrajectoryTaskConfig:{type:"LearningModelInferenceTrajectoryTaskConfig",id:23}},nested:{TaskType:{values:{CREEP_DECIDER:1,LANE_CHANGE_DECIDER:2,NAVI_OBSTACLE_DECIDER:3,NAVI_PATH_DECIDER:4,NAVI_SPEED_DECIDER:5,OPEN_SPACE_FALLBACK_DECIDER:6,OPEN_SPACE_PRE_STOP_DECIDER:7,OPEN_SPACE_ROI_DECIDER:8,PATH_ASSESSMENT_DECIDER:9,PATH_BOUNDS_DECIDER:10,PATH_DECIDER:11,PATH_LANE_BORROW_DECIDER:12,PATH_REFERENCE_DECIDER:13,PATH_REUSE_DECIDER:14,RSS_DECIDER:15,RULE_BASED_STOP_DECIDER:16,SPEED_BOUNDS_PRIORI_DECIDER:17,SPEED_BOUNDS_FINAL_DECIDER:18,SPEED_DECIDER:19,ST_BOUNDS_DECIDER:20,OPEN_SPACE_TRAJECTORY_PARTITION:21,OPEN_SPACE_TRAJECTORY_PROVIDER:22,PIECEWISE_JERK_NONLINEAR_SPEED_OPTIMIZER:23,PIECEWISE_JERK_PATH_OPTIMIZER:24,PIECEWISE_JERK_SPEED_OPTIMIZER:25,SPEED_HEURISTIC_OPTIMIZER:26,LEARNING_MODEL_INFERENCE_TASK:27,LEARNING_MODEL_INFERENCE_TRAJECTORY_TASK:28}}}},ScenarioBareIntersectionUnprotectedConfig:{fields:{startBareIntersectionScenarioDistance:{type:"double",id:1,options:{default:25}},enableExplicitStop:{type:"bool",id:2,options:{default:!1}},minPassSDistance:{type:"double",id:3,options:{default:3}},approachCruiseSpeed:{type:"double",id:4,options:{default:6.7056}},stopDistance:{type:"double",id:5,options:{default:.5}},stopTimeoutSec:{type:"float",id:6,options:{default:8}},creepTimeoutSec:{type:"float",id:7,options:{default:10}}}},ScenarioEmergencyPullOverConfig:{fields:{maxStopDeceleration:{type:"double",id:1,options:{default:3}},slowDownDecelerationTime:{type:"double",id:2,options:{default:3}},targetSlowDownSpeed:{type:"double",id:3,options:{default:2.5}},stopDistance:{type:"double",id:4,options:{default:1.5}}}},ScenarioEmergencyStopConfig:{fields:{maxStopDeceleration:{type:"double",id:1,options:{default:6}},stopDistance:{type:"double",id:2,options:{default:1}}}},ScenarioLaneFollowConfig:{fields:{}},ScenarioLearningModelSampleConfig:{fields:{}},ScenarioNarrowStreetUTurnConfig:{fields:{}},ScenarioParkAndGoConfig:{fields:{frontObstacleBuffer:{type:"double",id:1,options:{default:4}},headingBuffer:{type:"double",id:2,options:{default:.5}},minDistToDest:{type:"double",id:3,options:{default:25}},maxSteeringPercentageWhenCruise:{type:"double",id:4,options:{default:90}}}},ScenarioPullOverConfig:{fields:{startPullOverScenarioDistance:{type:"double",id:1,options:{default:50}},pullOverMinDistanceBuffer:{type:"double",id:2,options:{default:10}},maxDistanceStopSearch:{type:"double",id:3,options:{default:25}},maxSErrorToEndPoint:{type:"double",id:4,options:{default:.2}},maxLErrorToEndPoint:{type:"double",id:5,options:{default:.5}},maxThetaErrorToEndPoint:{type:"double",id:6,options:{default:.2}},maxDistanceErrorToEndPoint:{type:"double",id:7,options:{default:.2}},passDestinationThreshold:{type:"double",id:8,options:{default:10}},maxValidStopDistance:{type:"double",id:9,options:{default:1}},sDistanceToStopForOpenSpaceParking:{type:"double",id:10,options:{default:7}}}},ScenarioStopSignUnprotectedConfig:{fields:{startStopSignScenarioDistance:{type:"double",id:1,options:{default:5}},watchVehicleMaxValidStopDistance:{type:"double",id:2,options:{default:5}},maxValidStopDistance:{type:"double",id:3,options:{default:3.5}},stopDurationSec:{type:"float",id:4,options:{default:1}},minPassSDistance:{type:"double",id:5,options:{default:3}},stopTimeoutSec:{type:"float",id:6,options:{default:8}},creepTimeoutSec:{type:"float",id:7,options:{default:10}}}},ScenarioTrafficLightProtectedConfig:{fields:{startTrafficLightScenarioDistance:{type:"double",id:1,options:{default:5}},maxValidStopDistance:{type:"double",id:2,options:{default:2}},minPassSDistance:{type:"double",id:3,options:{default:3}}}},ScenarioTrafficLightUnprotectedLeftTurnConfig:{fields:{startTrafficLightScenarioDistance:{type:"double",id:1,options:{default:5}},approachCruiseSpeed:{type:"double",id:2,options:{default:2.78}},maxValidStopDistance:{type:"double",id:3,options:{default:3.5}},minPassSDistance:{type:"double",id:4,options:{default:3}},creepTimeoutSec:{type:"float",id:5,options:{default:10}},maxAdcSpeedBeforeCreep:{type:"double",id:6,options:{default:5.56}}}},ScenarioTrafficLightUnprotectedRightTurnConfig:{fields:{startTrafficLightScenarioDistance:{type:"double",id:1,options:{default:5}},enableRightTurnOnRed:{type:"bool",id:2,options:{default:!1}},maxValidStopDistance:{type:"double",id:3,options:{default:3.5}},minPassSDistance:{type:"double",id:4,options:{default:3}},redLightRightTurnStopDurationSec:{type:"float",id:5,options:{default:3}},creepTimeoutSec:{type:"float",id:6,options:{default:10}},maxAdcSpeedBeforeCreep:{type:"double",id:7,options:{default:3}}}},ScenarioValetParkingConfig:{fields:{parkingSpotRangeToStart:{type:"double",id:1,options:{default:20}},maxValidStopDistance:{type:"double",id:2,options:{default:1}}}},ScenarioDeadEndTurnAroundConfig:{fields:{deadEndStartRange:{type:"double",id:1,options:{default:20}},maxValidStopDistance:{type:"double",id:2,options:{default:1}}}},ScenarioYieldSignConfig:{fields:{startYieldSignScenarioDistance:{type:"double",id:1,options:{default:10}},maxValidStopDistance:{type:"double",id:2,options:{default:4.5}},minPassSDistance:{type:"double",id:3,options:{default:3}},creepTimeoutSec:{type:"float",id:4,options:{default:10}}}},ScenarioConfig:{oneofs:{scenarioConfig:{oneof:["laneFollowConfig","bareIntersectionUnprotectedConfig","emergencyPullOverConfig","emergencyStopConfig","learningModelSampleConfig","narrowStreetUTurnConfig","parkAndGoConfig","pullOverConfig","stopSignUnprotectedConfig","trafficLightProtectedConfig","trafficLightUnprotectedLeftTurnConfig","trafficLightUnprotectedRightTurnConfig","valetParkingConfig","yieldSignConfig","deadendTurnaroundConfig"]}},fields:{scenarioType:{type:"ScenarioType",id:1},laneFollowConfig:{type:"ScenarioLaneFollowConfig",id:2},bareIntersectionUnprotectedConfig:{type:"ScenarioBareIntersectionUnprotectedConfig",id:3},emergencyPullOverConfig:{type:"ScenarioEmergencyPullOverConfig",id:4},emergencyStopConfig:{type:"ScenarioEmergencyStopConfig",id:5},learningModelSampleConfig:{type:"ScenarioLearningModelSampleConfig",id:6},narrowStreetUTurnConfig:{type:"ScenarioNarrowStreetUTurnConfig",id:7},parkAndGoConfig:{type:"ScenarioParkAndGoConfig",id:8},pullOverConfig:{type:"ScenarioPullOverConfig",id:9},stopSignUnprotectedConfig:{type:"ScenarioStopSignUnprotectedConfig",id:10},trafficLightProtectedConfig:{type:"ScenarioTrafficLightProtectedConfig",id:11},trafficLightUnprotectedLeftTurnConfig:{type:"ScenarioTrafficLightUnprotectedLeftTurnConfig",id:12},trafficLightUnprotectedRightTurnConfig:{type:"ScenarioTrafficLightUnprotectedRightTurnConfig",id:13},valetParkingConfig:{type:"ScenarioValetParkingConfig",id:14},yieldSignConfig:{type:"ScenarioYieldSignConfig",id:15},deadendTurnaroundConfig:{type:"ScenarioDeadEndTurnAroundConfig",id:18},stageType:{rule:"repeated",type:"StageType",id:16,options:{packed:!1}},stageConfig:{rule:"repeated",type:"StageConfig",id:17}},nested:{ScenarioType:{values:{LANE_FOLLOW:0,BARE_INTERSECTION_UNPROTECTED:2,STOP_SIGN_PROTECTED:3,STOP_SIGN_UNPROTECTED:4,TRAFFIC_LIGHT_PROTECTED:5,TRAFFIC_LIGHT_UNPROTECTED_LEFT_TURN:6,TRAFFIC_LIGHT_UNPROTECTED_RIGHT_TURN:7,YIELD_SIGN:8,PULL_OVER:9,VALET_PARKING:10,EMERGENCY_PULL_OVER:11,EMERGENCY_STOP:12,NARROW_STREET_U_TURN:13,PARK_AND_GO:14,LEARNING_MODEL_SAMPLE:15,DEADEND_TURNAROUND:16}},StageType:{values:{NO_STAGE:0,LANE_FOLLOW_DEFAULT_STAGE:1,BARE_INTERSECTION_UNPROTECTED_APPROACH:200,BARE_INTERSECTION_UNPROTECTED_INTERSECTION_CRUISE:201,STOP_SIGN_UNPROTECTED_PRE_STOP:300,STOP_SIGN_UNPROTECTED_STOP:301,STOP_SIGN_UNPROTECTED_CREEP:302,STOP_SIGN_UNPROTECTED_INTERSECTION_CRUISE:303,TRAFFIC_LIGHT_PROTECTED_APPROACH:400,TRAFFIC_LIGHT_PROTECTED_INTERSECTION_CRUISE:401,TRAFFIC_LIGHT_UNPROTECTED_LEFT_TURN_APPROACH:410,TRAFFIC_LIGHT_UNPROTECTED_LEFT_TURN_CREEP:411,TRAFFIC_LIGHT_UNPROTECTED_LEFT_TURN_INTERSECTION_CRUISE:412,TRAFFIC_LIGHT_UNPROTECTED_RIGHT_TURN_STOP:420,TRAFFIC_LIGHT_UNPROTECTED_RIGHT_TURN_CREEP:421,TRAFFIC_LIGHT_UNPROTECTED_RIGHT_TURN_INTERSECTION_CRUISE:422,PULL_OVER_APPROACH:500,PULL_OVER_RETRY_APPROACH_PARKING:501,PULL_OVER_RETRY_PARKING:502,EMERGENCY_PULL_OVER_SLOW_DOWN:600,EMERGENCY_PULL_OVER_APPROACH:601,EMERGENCY_PULL_OVER_STANDBY:602,EMERGENCY_STOP_APPROACH:610,EMERGENCY_STOP_STANDBY:611,VALET_PARKING_APPROACHING_PARKING_SPOT:700,VALET_PARKING_PARKING:701,DEADEND_TURNAROUND_APPROACHING_TURNING_POINT:1100,DEADEND_TURNAROUND_TURNING:1101,PARK_AND_GO_CHECK:800,PARK_AND_GO_CRUISE:801,PARK_AND_GO_ADJUST:802,PARK_AND_GO_PRE_CRUISE:803,YIELD_SIGN_APPROACH:900,YIELD_SIGN_CREEP:901,LEARNING_MODEL_RUN:1e3}},StageConfig:{fields:{stageType:{type:"StageType",id:1},enabled:{type:"bool",id:2,options:{default:!0}},taskType:{rule:"repeated",type:"TaskConfig.TaskType",id:3,options:{packed:!1}},taskConfig:{rule:"repeated",type:"TaskConfig",id:4}}}}},PlannerPublicRoadConfig:{fields:{}},PlannerNaviConfig:{fields:{task:{rule:"repeated",type:"TaskConfig.TaskType",id:1,options:{packed:!1}},naviPathDeciderConfig:{type:"NaviPathDeciderConfig",id:2},naviSpeedDeciderConfig:{type:"NaviSpeedDeciderConfig",id:3},naviObstacleDeciderConfig:{type:"NaviObstacleDeciderConfig",id:4}}},PlannerType:{values:{RTK:0,PUBLIC_ROAD:1,NAVI:2,LATTICE:3}},RtkPlanningConfig:{fields:{plannerType:{type:"PlannerType",id:1}}},StandardPlanningConfig:{fields:{plannerType:{rule:"repeated",type:"PlannerType",id:1,options:{packed:!1}},plannerPublicRoadConfig:{type:"PlannerPublicRoadConfig",id:2}}},NavigationPlanningConfig:{fields:{plannerType:{rule:"repeated",type:"PlannerType",id:1,options:{packed:!1}},plannerNaviConfig:{type:"PlannerNaviConfig",id:4}}},TopicConfig:{fields:{chassisTopic:{type:"string",id:1},hmiStatusTopic:{type:"string",id:2},localizationTopic:{type:"string",id:3},planningPadTopic:{type:"string",id:4},planningTrajectoryTopic:{type:"string",id:5},predictionTopic:{type:"string",id:6},relativeMapTopic:{type:"string",id:7},routingRequestTopic:{type:"string",id:8},routingResponseTopic:{type:"string",id:9},storyTellingTopic:{type:"string",id:10},trafficLightDetectionTopic:{type:"string",id:11},planningLearningDataTopic:{type:"string",id:12}}},PlanningConfig:{oneofs:{planningConfig:{oneof:["rtkPlanningConfig","standardPlanningConfig","navigationPlanningConfig"]}},fields:{topicConfig:{type:"TopicConfig",id:1},learningMode:{type:"PlanningLearningMode",id:2},rtkPlanningConfig:{type:"RtkPlanningConfig",id:3},standardPlanningConfig:{type:"StandardPlanningConfig",id:4},navigationPlanningConfig:{type:"NavigationPlanningConfig",id:5},defaultTaskConfig:{rule:"repeated",type:"TaskConfig",id:6}},nested:{PlanningLearningMode:{values:{NO_LEARNING:0,E2E:1,HYBRID:2,RL_TEST:3,E2E_TEST:4,HYBRID_TEST:5}}}},PlanningSemanticMapConfig:{fields:{resolution:{type:"double",id:1},height:{type:"int32",id:100},width:{type:"int32",id:101},egoIdxX:{type:"int32",id:102},egoIdxY:{type:"int32",id:103},maxRandDeltaPhi:{type:"double",id:104},maxEgoFutureHorizon:{type:"double",id:105},maxEgoPastHorizon:{type:"double",id:106},maxObsFutureHorizon:{type:"double",id:107},maxObsPastHorizon:{type:"double",id:108},baseMapPadding:{type:"int32",id:200},cityDrivingMaxSpeed:{type:"double",id:201}}},StatsGroup:{fields:{max:{type:"double",id:1},min:{type:"double",id:2,options:{default:1e10}},sum:{type:"double",id:3},avg:{type:"double",id:4},num:{type:"int32",id:5}}},PlanningStats:{fields:{totalPathLength:{type:"StatsGroup",id:1},totalPathTime:{type:"StatsGroup",id:2},v:{type:"StatsGroup",id:3},a:{type:"StatsGroup",id:4},kappa:{type:"StatsGroup",id:5},dkappa:{type:"StatsGroup",id:6}}},BareIntersectionStatus:{fields:{currentPncJunctionOverlapId:{type:"string",id:1},donePncJunctionOverlapId:{type:"string",id:2},clearCounter:{type:"uint32",id:3}}},ChangeLaneStatus:{fields:{status:{type:"Status",id:1},pathId:{type:"string",id:2},timestamp:{type:"double",id:3},existLaneChangeStartPosition:{type:"bool",id:4,options:{default:!1}},laneChangeStartPosition:{type:"apollo.common.Point3D",id:5},lastSucceedTimestamp:{type:"double",id:6},isCurrentOptSucceed:{type:"bool",id:7,options:{default:!1}},isClearToChangeLane:{type:"bool",id:8,options:{default:!1}}},nested:{Status:{values:{IN_CHANGE_LANE:1,CHANGE_LANE_FAILED:2,CHANGE_LANE_FINISHED:3}}}},CreepDeciderStatus:{fields:{creepClearCounter:{type:"uint32",id:1}}},StopTime:{fields:{obstacleId:{type:"string",id:1},stopTimestampSec:{type:"double",id:2}}},CrosswalkStatus:{fields:{crosswalkId:{type:"string",id:1},stopTime:{rule:"repeated",type:"StopTime",id:2},finishedCrosswalk:{rule:"repeated",type:"string",id:3}}},DestinationStatus:{fields:{hasPassedDestination:{type:"bool",id:1,options:{default:!1}}}},EmergencyStopStatus:{fields:{stopFencePoint:{type:"apollo.common.PointENU",id:1}}},OpenSpaceStatus:{fields:{partitionedTrajectoriesIndexHistory:{rule:"repeated",type:"string",id:1},positionInit:{type:"bool",id:2,options:{default:!1}}}},ParkAndGoStatus:{fields:{adcInitPosition:{type:"apollo.common.PointENU",id:1},adcInitHeading:{type:"double",id:2},inCheckStage:{type:"bool",id:3},adcAdjustEndPose:{type:"apollo.common.PointENU",id:4}}},PathDeciderStatus:{fields:{frontStaticObstacleCycleCounter:{type:"int32",id:1,options:{default:0}},ableToUseSelfLaneCounter:{type:"int32",id:2,options:{default:0}},isInPathLaneBorrowScenario:{type:"bool",id:3,options:{default:!1}},frontStaticObstacleId:{type:"string",id:4,options:{default:""}},decidedSidePassDirection:{rule:"repeated",type:"LaneBorrowDirection",id:5,options:{packed:!1}}},nested:{LaneBorrowDirection:{values:{LEFT_BORROW:1,RIGHT_BORROW:2}}}},PullOverStatus:{fields:{pullOverType:{type:"PullOverType",id:1},planPullOverPath:{type:"bool",id:2,options:{default:!1}},position:{type:"apollo.common.PointENU",id:3},theta:{type:"double",id:4},lengthFront:{type:"double",id:5},lengthBack:{type:"double",id:6},widthLeft:{type:"double",id:7},widthRight:{type:"double",id:8}},nested:{PullOverType:{values:{PULL_OVER:1,EMERGENCY_PULL_OVER:2}}}},ReroutingStatus:{fields:{lastReroutingTime:{type:"double",id:1},needRerouting:{type:"bool",id:2,options:{default:!1}},routingRequest:{type:"apollo.routing.RoutingRequest",id:3}}},SpeedDeciderStatus:{fields:{pedestrianStopTime:{rule:"repeated",type:"StopTime",id:1}}},ScenarioStatus:{fields:{scenarioType:{type:"ScenarioConfig.ScenarioType",id:1},stageType:{type:"ScenarioConfig.StageType",id:2}}},StopSignStatus:{fields:{currentStopSignOverlapId:{type:"string",id:1},doneStopSignOverlapId:{type:"string",id:2},waitForObstacleId:{rule:"repeated",type:"string",id:3}}},TrafficLightStatus:{fields:{currentTrafficLightOverlapId:{rule:"repeated",type:"string",id:1},doneTrafficLightOverlapId:{rule:"repeated",type:"string",id:2}}},YieldSignStatus:{fields:{currentYieldSignOverlapId:{rule:"repeated",type:"string",id:1},doneYieldSignOverlapId:{rule:"repeated",type:"string",id:2},waitForObstacleId:{rule:"repeated",type:"string",id:3}}},PlanningStatus:{fields:{bareIntersection:{type:"BareIntersectionStatus",id:1},changeLane:{type:"ChangeLaneStatus",id:2},creepDecider:{type:"CreepDeciderStatus",id:3},crosswalk:{type:"CrosswalkStatus",id:4},destination:{type:"DestinationStatus",id:5},emergencyStop:{type:"EmergencyStopStatus",id:6},openSpace:{type:"OpenSpaceStatus",id:7},parkAndGo:{type:"ParkAndGoStatus",id:8},pathDecider:{type:"PathDeciderStatus",id:9},pullOver:{type:"PullOverStatus",id:10},rerouting:{type:"ReroutingStatus",id:11},scenario:{type:"ScenarioStatus",id:12},speedDecider:{type:"SpeedDeciderStatus",id:13},stopSign:{type:"StopSignStatus",id:14},trafficLight:{type:"TrafficLightStatus",id:15},yieldSign:{type:"YieldSignStatus",id:16}}},QpSplineSmootherConfig:{fields:{splineOrder:{type:"uint32",id:1,options:{default:5}},maxSplineLength:{type:"double",id:2,options:{default:25}},regularizationWeight:{type:"double",id:3,options:{default:.1}},secondDerivativeWeight:{type:"double",id:4,options:{default:0}},thirdDerivativeWeight:{type:"double",id:5,options:{default:100}}}},SpiralSmootherConfig:{fields:{maxDeviation:{type:"double",id:1,options:{default:.1}},piecewiseLength:{type:"double",id:2,options:{default:10}},maxIteration:{type:"uint32",id:3,options:{default:1e3}},optTol:{type:"double",id:4,options:{default:1e-8}},optAcceptableTol:{type:"double",id:5,options:{default:1e-6}},optAcceptableIteration:{type:"uint32",id:6,options:{default:15}},weightCurveLength:{type:"double",id:7,options:{default:1}},weightKappa:{type:"double",id:8,options:{default:1}},weightDkappa:{type:"double",id:9,options:{default:100}}}},DiscretePointsSmootherConfig:{oneofs:{SmootherConfig:{oneof:["cosThetaSmoothing","femPosDeviationSmoothing"]}},fields:{smoothingMethod:{type:"SmoothingMethod",id:3,options:{default:"FEM_POS_DEVIATION_SMOOTHING"}},cosThetaSmoothing:{type:"CosThetaSmootherConfig",id:4},femPosDeviationSmoothing:{type:"FemPosDeviationSmootherConfig",id:5}},nested:{SmoothingMethod:{values:{NOT_DEFINED:0,COS_THETA_SMOOTHING:1,FEM_POS_DEVIATION_SMOOTHING:2}}}},ReferenceLineSmootherConfig:{oneofs:{SmootherConfig:{oneof:["qpSpline","spiral","discretePoints"]}},fields:{maxConstraintInterval:{type:"double",id:1,options:{default:5}},longitudinalBoundaryBound:{type:"double",id:2,options:{default:1}},maxLateralBoundaryBound:{type:"double",id:3,options:{default:.5}},minLateralBoundaryBound:{type:"double",id:4,options:{default:.2}},numOfTotalPoints:{type:"uint32",id:5,options:{default:500}},curbShift:{type:"double",id:6,options:{default:.2}},lateralBuffer:{type:"double",id:7,options:{default:.2}},resolution:{type:"double",id:8,options:{default:.02}},qpSpline:{type:"QpSplineSmootherConfig",id:20},spiral:{type:"SpiralSmootherConfig",id:21},discretePoints:{type:"DiscretePointsSmootherConfig",id:22}}},SLBoundary:{fields:{startS:{type:"double",id:1},endS:{type:"double",id:2},startL:{type:"double",id:3},endL:{type:"double",id:4},boundaryPoint:{rule:"repeated",type:"apollo.common.SLPoint",id:5}}},STDrivableBoundaryInstance:{fields:{t:{type:"double",id:1},sLower:{type:"double",id:2},sUpper:{type:"double",id:3},vObsLower:{type:"double",id:4},vObsUpper:{type:"double",id:5}}},STDrivableBoundary:{fields:{stBoundary:{rule:"repeated",type:"STDrivableBoundaryInstance",id:1}}},CreepDeciderConfig:{fields:{stopDistance:{type:"double",id:1,options:{default:.5}},speedLimit:{type:"double",id:2,options:{default:1}},maxValidStopDistance:{type:"double",id:3,options:{default:.3}},minBoundaryT:{type:"double",id:4,options:{default:6}},ignoreMaxStMinT:{type:"double",id:5,options:{default:.1}},ignoreMinStMinS:{type:"double",id:6,options:{default:15}}}},LaneChangeDeciderConfig:{fields:{enableLaneChangeUrgencyCheck:{type:"bool",id:1},enablePrioritizeChangeLane:{type:"bool",id:2,options:{default:!1}},enableRemoveChangeLane:{type:"bool",id:3,options:{default:!1}},recklessChangeLane:{type:"bool",id:4,options:{default:!1}},changeLaneSuccessFreezeTime:{type:"double",id:5,options:{default:1.5}},changeLaneFailFreezeTime:{type:"double",id:6,options:{default:1}}}},LearningModelInferenceTaskConfig:{fields:{modelType:{type:"ModelType",id:1},cpuModelFile:{type:"string",id:2},gpuModelFile:{type:"string",id:3},useCuda:{type:"bool",id:4,options:{default:!0}},trajectoryDeltaT:{type:"double",id:5,options:{default:.2}},allowEmptyLearningBasedData:{type:"bool",id:6,options:{default:!1}},allowEmptyOutputTrajectory:{type:"bool",id:7,options:{default:!1}}},nested:{ModelType:{values:{CNN:1,CNN_LSTM:2}}}},LearningModelInferenceTrajectoryTaskConfig:{fields:{minAdcFutureTrajectoryTimeLength:{type:"double",id:1,options:{default:2}}}},NaviObstacleDeciderConfig:{fields:{minNudgeDistance:{type:"double",id:1,options:{default:.2}},maxNudgeDistance:{type:"double",id:2,options:{default:1.2}},maxAllowNudgeSpeed:{type:"double",id:3,options:{default:16.667}},safeDistance:{type:"double",id:4,options:{default:.2}},nudgeAllowTolerance:{type:"double",id:5,options:{default:.05}},cyclesNumber:{type:"uint32",id:6,options:{default:3}},judgeDisCoeff:{type:"double",id:7,options:{default:2}},basisDisValue:{type:"double",id:8,options:{default:30}},lateralVelocityValue:{type:"double",id:9,options:{default:.5}},speedDeciderDetectRange:{type:"double",id:10,options:{default:1}},maxKeepNudgeCycles:{type:"uint32",id:11,options:{default:100}}}},NaviPathDeciderConfig:{fields:{minPathLength:{type:"double",id:1,options:{default:5}},minLookForwardTime:{type:"uint32",id:2,options:{default:2}},maxKeepLaneDistance:{type:"double",id:3,options:{default:.8}},maxKeepLaneShiftY:{type:"double",id:4,options:{default:20}},minKeepLaneOffset:{type:"double",id:5,options:{default:15}},keepLaneShiftCompensation:{type:"double",id:6,options:{default:.01}},moveDestLaneConfigTalbe:{type:"MoveDestLaneConfigTable",id:7},moveDestLaneCompensation:{type:"double",id:8,options:{default:.35}},maxKappaThreshold:{type:"double",id:9,options:{default:0}},kappaMoveDestLaneCompensation:{type:"double",id:10,options:{default:0}},startPlanPointFrom:{type:"uint32",id:11,options:{default:0}}}},MoveDestLaneConfigTable:{fields:{lateralShift:{rule:"repeated",type:"ShiftConfig",id:1}}},ShiftConfig:{fields:{maxSpeed:{type:"double",id:1,options:{default:4.16}},maxMoveDestLaneShiftY:{type:"double",id:3,options:{default:.4}}}},NaviSpeedDeciderConfig:{fields:{preferredAccel:{type:"double",id:1,options:{default:2}},preferredDecel:{type:"double",id:2,options:{default:2}},preferredJerk:{type:"double",id:3,options:{default:2}},maxAccel:{type:"double",id:4,options:{default:4}},maxDecel:{type:"double",id:5,options:{default:5}},obstacleBuffer:{type:"double",id:6,options:{default:.5}},safeDistanceBase:{type:"double",id:7,options:{default:2}},safeDistanceRatio:{type:"double",id:8,options:{default:1}},followingAccelRatio:{type:"double",id:9,options:{default:.5}},softCentricAccelLimit:{type:"double",id:10,options:{default:1.2}},hardCentricAccelLimit:{type:"double",id:11,options:{default:1.5}},hardSpeedLimit:{type:"double",id:12,options:{default:100}},hardAccelLimit:{type:"double",id:13,options:{default:10}},enableSafePath:{type:"bool",id:14,options:{default:!0}},enablePlanningStartPoint:{type:"bool",id:15,options:{default:!0}},enableAccelAutoCompensation:{type:"bool",id:16,options:{default:!0}},kappaPreview:{type:"double",id:17,options:{default:0}},kappaThreshold:{type:"double",id:18,options:{default:0}}}},PathAssessmentDeciderConfig:{fields:{}},PathBoundsDeciderConfig:{fields:{isLaneBorrowing:{type:"bool",id:1},isPullOver:{type:"bool",id:2},pullOverDestinationToAdcBuffer:{type:"double",id:3,options:{default:25}},pullOverDestinationToPathendBuffer:{type:"double",id:4,options:{default:10}},pullOverRoadEdgeBuffer:{type:"double",id:5,options:{default:.15}},pullOverApproachLonDistanceAdjustFactor:{type:"double",id:6,options:{default:1.5}},adcBufferCoeff:{type:"double",id:7,options:{default:1}},isExtendLaneBoundsToIncludeAdc:{type:"bool",id:8,options:{default:!0}}}},PathDeciderConfig:{fields:{staticObstacleBuffer:{type:"double",id:1,options:{default:.3}}}},PathLaneBorrowDeciderConfig:{fields:{allowLaneBorrowing:{type:"bool",id:1}}},PathReferenceDeciderConfig:{fields:{minPathReferenceLength:{type:"uint32",id:1,options:{default:20}},weightXRefPathReference:{type:"double",id:2}}},PathReuseDeciderConfig:{fields:{reusePath:{type:"bool",id:1}}},PiecewiseJerkNonlinearSpeedOptimizerConfig:{fields:{accWeight:{type:"double",id:1,options:{default:500}},jerkWeight:{type:"double",id:2,options:{default:100}},latAccWeight:{type:"double",id:3,options:{default:500}},sPotentialWeight:{type:"double",id:4,options:{default:10}},refVWeight:{type:"double",id:5,options:{default:10}},refSWeight:{type:"double",id:6,options:{default:10}},endSWeight:{type:"double",id:7,options:{default:10}},endVWeight:{type:"double",id:8,options:{default:10}},endAWeight:{type:"double",id:9,options:{default:10}},softSBoundWeight:{type:"double",id:10,options:{default:10}},useWarmStart:{type:"bool",id:100,options:{default:!0}}}},PiecewiseJerkPathOptimizerConfig:{fields:{defaultPathConfig:{type:"PiecewiseJerkPathWeights",id:1},laneChangePathConfig:{type:"PiecewiseJerkPathWeights",id:2},pathReferenceLWeight:{type:"double",id:3,options:{default:0}}}},PiecewiseJerkPathWeights:{fields:{lWeight:{type:"double",id:1,options:{default:1}},dlWeight:{type:"double",id:2,options:{default:100}},ddlWeight:{type:"double",id:3,options:{default:1e3}},dddlWeight:{type:"double",id:4,options:{default:1e4}}}},PiecewiseJerkSpeedOptimizerConfig:{fields:{accWeight:{type:"double",id:1,options:{default:1}},jerkWeight:{type:"double",id:2,options:{default:10}},kappaPenaltyWeight:{type:"double",id:3,options:{default:1e3}},refSWeight:{type:"double",id:4,options:{default:10}},refVWeight:{type:"double",id:5,options:{default:10}}}},RuleBasedStopDeciderConfig:{fields:{maxAdcStopSpeed:{type:"double",id:1,options:{default:.3}},maxValidStopDistance:{type:"double",id:2,options:{default:.5}},searchBeamLength:{type:"double",id:3,options:{default:5}},searchBeamRadiusIntensity:{type:"double",id:4,options:{default:.08}},searchRange:{type:"double",id:5,options:{default:3.14}},isBlockAngleThreshold:{type:"double",id:6,options:{default:1.57}},approachDistanceForLaneChange:{type:"double",id:10,options:{default:80}},urgentDistanceForLaneChange:{type:"double",id:11,options:{default:50}}}},SpeedBoundsDeciderConfig:{fields:{totalTime:{type:"double",id:1,options:{default:7}},boundaryBuffer:{type:"double",id:2,options:{default:.1}},maxCentricAccelerationLimit:{type:"double",id:3,options:{default:2}},minimalKappa:{type:"double",id:4,options:{default:1e-5}},pointExtension:{type:"double",id:5,options:{default:1}},lowestSpeed:{type:"double",id:6,options:{default:2.5}},collisionSafetyRange:{type:"double",id:7,options:{default:1}},staticObsNudgeSpeedRatio:{type:"double",id:8},dynamicObsNudgeSpeedRatio:{type:"double",id:9}}},SpeedHeuristicOptimizerConfig:{fields:{defaultSpeedConfig:{type:"DpStSpeedOptimizerConfig",id:1},laneChangeSpeedConfig:{type:"DpStSpeedOptimizerConfig",id:2}}},DpStSpeedOptimizerConfig:{fields:{unitT:{type:"double",id:1,options:{default:1}},denseDimensionS:{type:"int32",id:2,options:{default:41}},denseUnitS:{type:"double",id:3,options:{default:.5}},sparseUnitS:{type:"double",id:4,options:{default:1}},speedWeight:{type:"double",id:10,options:{default:0}},accelWeight:{type:"double",id:11,options:{default:10}},jerkWeight:{type:"double",id:12,options:{default:10}},obstacleWeight:{type:"double",id:13,options:{default:1}},referenceWeight:{type:"double",id:14,options:{default:0}},goDownBuffer:{type:"double",id:15,options:{default:5}},goUpBuffer:{type:"double",id:16,options:{default:5}},defaultObstacleCost:{type:"double",id:20,options:{default:1e10}},defaultSpeedCost:{type:"double",id:31,options:{default:1}},exceedSpeedPenalty:{type:"double",id:32,options:{default:10}},lowSpeedPenalty:{type:"double",id:33,options:{default:2.5}},referenceSpeedPenalty:{type:"double",id:34,options:{default:1}},keepClearLowSpeedPenalty:{type:"double",id:35,options:{default:10}},accelPenalty:{type:"double",id:40,options:{default:2}},decelPenalty:{type:"double",id:41,options:{default:2}},positiveJerkCoeff:{type:"double",id:50,options:{default:1}},negativeJerkCoeff:{type:"double",id:51,options:{default:300}},maxAcceleration:{type:"double",id:60,options:{default:4.5}},maxDeceleration:{type:"double",id:61,options:{default:-4.5}},safeTimeBuffer:{type:"double",id:70,options:{default:3}},safeDistance:{type:"double",id:71,options:{default:20}},spatialPotentialPenalty:{type:"double",id:80,options:{default:1}},isLaneChanging:{type:"bool",id:81,options:{default:!1}}}},STBoundsDeciderConfig:{fields:{totalTime:{type:"double",id:1,options:{default:7}}}},BacksideVehicleConfig:{fields:{backsideLaneWidth:{type:"double",id:1,options:{default:4}}}},CrosswalkConfig:{fields:{stopDistance:{type:"double",id:1,options:{default:1}},maxStopDeceleration:{type:"double",id:2,options:{default:4}},minPassSDistance:{type:"double",id:3,options:{default:1}},maxValidStopDistance:{type:"double",id:4,options:{default:3}},expandSDistance:{type:"double",id:5,options:{default:2}},stopStrictLDistance:{type:"double",id:6,options:{default:4}},stopLooseLDistance:{type:"double",id:7,options:{default:5}},stopTimeout:{type:"double",id:8,options:{default:10}}}},DestinationConfig:{fields:{stopDistance:{type:"double",id:1,options:{default:.5}}}},KeepClearConfig:{fields:{enableKeepClearZone:{type:"bool",id:1,options:{default:!0}},enableJunction:{type:"bool",id:2,options:{default:!0}},minPassSDistance:{type:"double",id:3,options:{default:2}},alignWithTrafficSignTolerance:{type:"double",id:4,options:{default:4.5}}}},ReferenceLineEndConfig:{fields:{stopDistance:{type:"double",id:1,options:{default:.5}},minReferenceLineRemainLength:{type:"double",id:2,options:{default:50}}}},ReroutingConfig:{fields:{cooldownTime:{type:"double",id:1,options:{default:3}},prepareReroutingTime:{type:"double",id:2,options:{default:2}}}},StopSignConfig:{fields:{enabled:{type:"bool",id:1,options:{default:!0}},stopDistance:{type:"double",id:2,options:{default:1}}}},TrafficLightConfig:{fields:{enabled:{type:"bool",id:1,options:{default:!0}},stopDistance:{type:"double",id:2,options:{default:1}},maxStopDeceleration:{type:"double",id:3,options:{default:4}}}},YieldSignConfig:{fields:{enabled:{type:"bool",id:1,options:{default:!0}},stopDistance:{type:"double",id:2,options:{default:1}},startWatchDistance:{type:"double",id:3,options:{default:2}}}},TrafficRuleConfig:{oneofs:{config:{oneof:["backsideVehicle","crosswalk","destination","keepClear","referenceLineEnd","rerouting","stopSign","trafficLight","yieldSign"]}},fields:{ruleId:{type:"RuleId",id:1},enabled:{type:"bool",id:2},backsideVehicle:{type:"BacksideVehicleConfig",id:3},crosswalk:{type:"CrosswalkConfig",id:4},destination:{type:"DestinationConfig",id:5},keepClear:{type:"KeepClearConfig",id:6},referenceLineEnd:{type:"ReferenceLineEndConfig",id:7},rerouting:{type:"ReroutingConfig",id:8},stopSign:{type:"StopSignConfig",id:9},trafficLight:{type:"TrafficLightConfig",id:10},yieldSign:{type:"YieldSignConfig",id:11}},nested:{RuleId:{values:{BACKSIDE_VEHICLE:1,CROSSWALK:2,DESTINATION:3,KEEP_CLEAR:4,REFERENCE_LINE_END:5,REROUTING:6,STOP_SIGN:7,TRAFFIC_LIGHT:8,YIELD_SIGN:9}}}},TrafficRuleConfigs:{fields:{config:{rule:"repeated",type:"TrafficRuleConfig",id:1}}},CosThetaSmootherConfig:{fields:{weightCosIncludedAngle:{type:"double",id:1,options:{default:1e4}},weightAnchorPoints:{type:"double",id:2,options:{default:1}},weightLength:{type:"double",id:3,options:{default:1}},printLevel:{type:"int32",id:4,options:{default:0}},maxNumOfIterations:{type:"int32",id:5,options:{default:500}},acceptableNumOfIterations:{type:"int32",id:6,options:{default:15}},tol:{type:"double",id:7,options:{default:1e-8}},acceptableTol:{type:"double",id:8,options:{default:.1}},ipoptUseAutomaticDifferentiation:{type:"bool",id:9,options:{default:!1}}}},FemPosDeviationSmootherConfig:{fields:{weightFemPosDeviation:{type:"double",id:2,options:{default:1e10}},weightRefDeviation:{type:"double",id:3,options:{default:1}},weightPathLength:{type:"double",id:4,options:{default:1}},applyCurvatureConstraint:{type:"bool",id:5,options:{default:!1}},weightCurvatureConstraintSlackVar:{type:"double",id:6,options:{default:100}},curvatureConstraint:{type:"double",id:7,options:{default:.2}},useSqp:{type:"bool",id:8,options:{default:!1}},sqpFtol:{type:"double",id:9,options:{default:1e-4}},sqpCtol:{type:"double",id:10,options:{default:.001}},sqpPenMaxIter:{type:"int32",id:11,options:{default:10}},sqpSubMaxIter:{type:"int32",id:12,options:{default:100}},maxIter:{type:"int32",id:100,options:{default:500}},timeLimit:{type:"double",id:101,options:{default:0}},verbose:{type:"bool",id:102,options:{default:!1}},scaledTermination:{type:"bool",id:103,options:{default:!0}},warmStart:{type:"bool",id:104,options:{default:!0}},printLevel:{type:"int32",id:200,options:{default:0}},maxNumOfIterations:{type:"int32",id:201,options:{default:500}},acceptableNumOfIterations:{type:"int32",id:202,options:{default:15}},tol:{type:"double",id:203,options:{default:1e-8}},acceptableTol:{type:"double",id:204,options:{default:.1}}}},QuadraticProgrammingProblem:{fields:{paramSize:{type:"int32",id:1},quadraticMatrix:{type:"QPMatrix",id:2},bias:{rule:"repeated",type:"double",id:3,options:{packed:!1}},equalityMatrix:{type:"QPMatrix",id:4},equalityValue:{rule:"repeated",type:"double",id:5,options:{packed:!1}},inequalityMatrix:{type:"QPMatrix",id:6},inequalityValue:{rule:"repeated",type:"double",id:7,options:{packed:!1}},inputMarker:{rule:"repeated",type:"double",id:8,options:{packed:!1}},optimalParam:{rule:"repeated",type:"double",id:9,options:{packed:!1}}}},QPMatrix:{fields:{rowSize:{type:"int32",id:1},colSize:{type:"int32",id:2},element:{rule:"repeated",type:"double",id:3,options:{packed:!1}}}},QuadraticProgrammingProblemSet:{fields:{problem:{rule:"repeated",type:"QuadraticProgrammingProblem",id:1}}}}},planning_internal:{nested:{Debug:{fields:{planningData:{type:"PlanningData",id:2}}},SpeedPlan:{fields:{name:{type:"string",id:1},speedPoint:{rule:"repeated",type:"apollo.common.SpeedPoint",id:2}}},StGraphBoundaryDebug:{fields:{name:{type:"string",id:1},point:{rule:"repeated",type:"apollo.common.SpeedPoint",id:2},type:{type:"StBoundaryType",id:3}},nested:{StBoundaryType:{values:{ST_BOUNDARY_TYPE_UNKNOWN:1,ST_BOUNDARY_TYPE_STOP:2,ST_BOUNDARY_TYPE_FOLLOW:3,ST_BOUNDARY_TYPE_YIELD:4,ST_BOUNDARY_TYPE_OVERTAKE:5,ST_BOUNDARY_TYPE_KEEP_CLEAR:6,ST_BOUNDARY_TYPE_DRIVABLE_REGION:7}}}},SLFrameDebug:{fields:{name:{type:"string",id:1},sampledS:{rule:"repeated",type:"double",id:2,options:{packed:!1}},staticObstacleLowerBound:{rule:"repeated",type:"double",id:3,options:{packed:!1}},dynamicObstacleLowerBound:{rule:"repeated",type:"double",id:4,options:{packed:!1}},staticObstacleUpperBound:{rule:"repeated",type:"double",id:5,options:{packed:!1}},dynamicObstacleUpperBound:{rule:"repeated",type:"double",id:6,options:{packed:!1}},mapLowerBound:{rule:"repeated",type:"double",id:7,options:{packed:!1}},mapUpperBound:{rule:"repeated",type:"double",id:8,options:{packed:!1}},slPath:{rule:"repeated",type:"apollo.common.SLPoint",id:9},aggregatedBoundaryS:{rule:"repeated",type:"double",id:10,options:{packed:!1}},aggregatedBoundaryLow:{rule:"repeated",type:"double",id:11,options:{packed:!1}},aggregatedBoundaryHigh:{rule:"repeated",type:"double",id:12,options:{packed:!1}}}},STGraphDebug:{fields:{name:{type:"string",id:1},boundary:{rule:"repeated",type:"StGraphBoundaryDebug",id:2},speedLimit:{rule:"repeated",type:"apollo.common.SpeedPoint",id:3},speedProfile:{rule:"repeated",type:"apollo.common.SpeedPoint",id:4},speedConstraint:{type:"STGraphSpeedConstraint",id:5},kernelCruiseRef:{type:"STGraphKernelCuiseRef",id:6},kernelFollowRef:{type:"STGraphKernelFollowRef",id:7}},nested:{STGraphSpeedConstraint:{fields:{t:{rule:"repeated",type:"double",id:1,options:{packed:!1}},lowerBound:{rule:"repeated",type:"double",id:2,options:{packed:!1}},upperBound:{rule:"repeated",type:"double",id:3,options:{packed:!1}}}},STGraphKernelCuiseRef:{fields:{t:{rule:"repeated",type:"double",id:1,options:{packed:!1}},cruiseLineS:{rule:"repeated",type:"double",id:2,options:{packed:!1}}}},STGraphKernelFollowRef:{fields:{t:{rule:"repeated",type:"double",id:1,options:{packed:!1}},followLineS:{rule:"repeated",type:"double",id:2,options:{packed:!1}}}}}},SignalLightDebug:{fields:{adcSpeed:{type:"double",id:1},adcFrontS:{type:"double",id:2},signal:{rule:"repeated",type:"SignalDebug",id:3}},nested:{SignalDebug:{fields:{lightId:{type:"string",id:1},color:{type:"apollo.perception.TrafficLight.Color",id:2},lightStopS:{type:"double",id:3},adcStopDeceleration:{type:"double",id:4},isStopWallCreated:{type:"bool",id:5}}}}},DecisionTag:{fields:{deciderTag:{type:"string",id:1},decision:{type:"apollo.planning.ObjectDecisionType",id:2}}},ObstacleDebug:{fields:{id:{type:"string",id:1},slBoundary:{type:"apollo.planning.SLBoundary",id:2},decisionTag:{rule:"repeated",type:"DecisionTag",id:3},verticesXCoords:{rule:"repeated",type:"double",id:4,options:{packed:!1}},verticesYCoords:{rule:"repeated",type:"double",id:5,options:{packed:!1}}}},ReferenceLineDebug:{fields:{id:{type:"string",id:1},length:{type:"double",id:2},cost:{type:"double",id:3},isChangeLanePath:{type:"bool",id:4},isDrivable:{type:"bool",id:5},isProtected:{type:"bool",id:6},isOffroad:{type:"bool",id:7},minimumBoundary:{type:"double",id:8},averageKappa:{type:"double",id:9,options:{deprecated:!0}},averageDkappa:{type:"double",id:10,options:{deprecated:!0}},kappaRms:{type:"double",id:11},dkappaRms:{type:"double",id:12},kappaMaxAbs:{type:"double",id:13},dkappaMaxAbs:{type:"double",id:14},averageOffset:{type:"double",id:15}}},SampleLayerDebug:{fields:{slPoint:{rule:"repeated",type:"apollo.common.SLPoint",id:1}}},DpPolyGraphDebug:{fields:{sampleLayer:{rule:"repeated",type:"SampleLayerDebug",id:1},minCostPoint:{rule:"repeated",type:"apollo.common.SLPoint",id:2}}},ScenarioDebug:{fields:{scenarioType:{type:"apollo.planning.ScenarioConfig.ScenarioType",id:1},stageType:{type:"apollo.planning.ScenarioConfig.StageType",id:2},msg:{type:"string",id:3}}},Trajectories:{fields:{trajectory:{rule:"repeated",type:"apollo.common.Trajectory",id:1}}},OpenSpaceDebug:{fields:{trajectories:{type:"apollo.planning_internal.Trajectories",id:1},warmStartTrajectory:{type:"apollo.common.VehicleMotion",id:2},smoothedTrajectory:{type:"apollo.common.VehicleMotion",id:3},warmStartDualLambda:{rule:"repeated",type:"double",id:4,options:{packed:!1}},warmStartDualMiu:{rule:"repeated",type:"double",id:5,options:{packed:!1}},optimizedDualLambda:{rule:"repeated",type:"double",id:6,options:{packed:!1}},optimizedDualMiu:{rule:"repeated",type:"double",id:7,options:{packed:!1}},xyBoundary:{rule:"repeated",type:"double",id:8,options:{packed:!1}},obstacles:{rule:"repeated",type:"apollo.planning_internal.ObstacleDebug",id:9},roiShiftPoint:{type:"apollo.common.TrajectoryPoint",id:10},endPoint:{type:"apollo.common.TrajectoryPoint",id:11},partitionedTrajectories:{type:"apollo.planning_internal.Trajectories",id:12},chosenTrajectory:{type:"apollo.planning_internal.Trajectories",id:13},isFallbackTrajectory:{type:"bool",id:14},fallbackTrajectory:{type:"apollo.planning_internal.Trajectories",id:15},trajectoryStitchingPoint:{type:"apollo.common.TrajectoryPoint",id:16},futureCollisionPoint:{type:"apollo.common.TrajectoryPoint",id:17},timeLatency:{type:"double",id:18,options:{default:0}},originPoint:{type:"apollo.common.PointENU",id:19},originHeadingRad:{type:"double",id:20}}},SmootherDebug:{fields:{isSmoothed:{type:"bool",id:1},type:{type:"SmootherType",id:2,options:{default:"SMOOTHER_NONE"}},reason:{type:"string",id:3}},nested:{SmootherType:{values:{SMOOTHER_NONE:1,SMOOTHER_CLOSE_STOP:2}}}},PullOverDebug:{fields:{position:{type:"apollo.common.PointENU",id:1},theta:{type:"double",id:2},lengthFront:{type:"double",id:3},lengthBack:{type:"double",id:4},widthLeft:{type:"double",id:5},widthRight:{type:"double",id:6}}},PlanningData:{fields:{adcPosition:{type:"apollo.localization.LocalizationEstimate",id:7},chassis:{type:"apollo.canbus.Chassis",id:8},routing:{type:"apollo.routing.RoutingResponse",id:9},initPoint:{type:"apollo.common.TrajectoryPoint",id:10},path:{rule:"repeated",type:"apollo.common.Path",id:6},speedPlan:{rule:"repeated",type:"SpeedPlan",id:13},stGraph:{rule:"repeated",type:"STGraphDebug",id:14},slFrame:{rule:"repeated",type:"SLFrameDebug",id:15},predictionHeader:{type:"apollo.common.Header",id:16},signalLight:{type:"SignalLightDebug",id:17},obstacle:{rule:"repeated",type:"ObstacleDebug",id:18},referenceLine:{rule:"repeated",type:"ReferenceLineDebug",id:19},dpPolyGraph:{type:"DpPolyGraphDebug",id:20},latticeStImage:{type:"LatticeStTraining",id:21},relativeMap:{type:"apollo.relative_map.MapMsg",id:22},autoTuningTrainingData:{type:"AutoTuningTrainingData",id:23},frontClearDistance:{type:"double",id:24},chart:{rule:"repeated",type:"apollo.dreamview.Chart",id:25},scenario:{type:"ScenarioDebug",id:26},openSpace:{type:"OpenSpaceDebug",id:27},smoother:{type:"SmootherDebug",id:28},pullOver:{type:"PullOverDebug",id:29},hybridModel:{type:"HybridModelDebug",id:30}}},LatticeStPixel:{fields:{s:{type:"int32",id:1},t:{type:"int32",id:2},r:{type:"uint32",id:3},g:{type:"uint32",id:4},b:{type:"uint32",id:5}}},LatticeStTraining:{fields:{pixel:{rule:"repeated",type:"LatticeStPixel",id:1},timestamp:{type:"double",id:2},annotation:{type:"string",id:3},numSGrids:{type:"uint32",id:4},numTGrids:{type:"uint32",id:5},sResolution:{type:"double",id:6},tResolution:{type:"double",id:7}}},CostComponents:{fields:{costComponent:{rule:"repeated",type:"double",id:1,options:{packed:!1}}}},AutoTuningTrainingData:{fields:{teacherComponent:{type:"CostComponents",id:1},studentComponent:{type:"CostComponents",id:2}}},CloudReferenceLineRequest:{fields:{laneSegment:{rule:"repeated",type:"apollo.routing.LaneSegment",id:1}}},CloudReferenceLineRoutingRequest:{fields:{routing:{type:"apollo.routing.RoutingResponse",id:1}}},CloudReferenceLineResponse:{fields:{segment:{rule:"repeated",type:"apollo.common.Path",id:1}}},HybridModelDebug:{fields:{usingLearningModelOutput:{type:"bool",id:1,options:{default:!1}},learningModelOutputUsageRatio:{type:"double",id:2},learningModelOutputFailReason:{type:"string",id:3},evaluatedPathReference:{type:"apollo.common.Path",id:4}}}}},perception:{nested:{TrafficLightBox:{fields:{x:{type:"int32",id:1},y:{type:"int32",id:2},width:{type:"int32",id:3},height:{type:"int32",id:4},color:{type:"TrafficLight.Color",id:5},selected:{type:"bool",id:6},cameraName:{type:"string",id:7}}},TrafficLightDebug:{fields:{cropbox:{type:"TrafficLightBox",id:1},box:{rule:"repeated",type:"TrafficLightBox",id:2},signalNum:{type:"int32",id:3},validPos:{type:"int32",id:4},tsDiffPos:{type:"double",id:5},tsDiffSys:{type:"double",id:6},projectError:{type:"int32",id:7},distanceToStopLine:{type:"double",id:8},cameraId:{type:"int32",id:9,options:{deprecated:!0}},cropRoi:{rule:"repeated",type:"TrafficLightBox",id:10},projectedRoi:{rule:"repeated",type:"TrafficLightBox",id:11},rectifiedRoi:{rule:"repeated",type:"TrafficLightBox",id:12},debugRoi:{rule:"repeated",type:"TrafficLightBox",id:13}}},TrafficLight:{fields:{color:{type:"Color",id:1},id:{type:"string",id:2},confidence:{type:"double",id:3,options:{default:1}},trackingTime:{type:"double",id:4},blink:{type:"bool",id:5},remainingTime:{type:"double",id:6}},nested:{Color:{values:{UNKNOWN:0,RED:1,YELLOW:2,GREEN:3,BLACK:4}}}},TrafficLightDetection:{fields:{header:{type:"apollo.common.Header",id:2},trafficLight:{rule:"repeated",type:"TrafficLight",id:1},trafficLightDebug:{type:"TrafficLightDebug",id:3},containLights:{type:"bool",id:4},cameraId:{type:"CameraID",id:5}},nested:{CameraID:{values:{CAMERA_FRONT_LONG:0,CAMERA_FRONT_NARROW:1,CAMERA_FRONT_SHORT:2,CAMERA_FRONT_WIDE:3}}}},BBox2D:{fields:{xmin:{type:"double",id:1},ymin:{type:"double",id:2},xmax:{type:"double",id:3},ymax:{type:"double",id:4}}},LightStatus:{fields:{brakeVisible:{type:"double",id:1},brakeSwitchOn:{type:"double",id:2},leftTurnVisible:{type:"double",id:3},leftTurnSwitchOn:{type:"double",id:4},rightTurnVisible:{type:"double",id:5},rightTurnSwitchOn:{type:"double",id:6}}},V2XInformation:{fields:{v2xType:{rule:"repeated",type:"V2XType",id:1,options:{packed:!1}}},nested:{V2XType:{values:{NONE:0,ZOMBIES_CAR:1,BLIND_ZONE:2}}}},SensorMeasurement:{fields:{sensorId:{type:"string",id:1},id:{type:"int32",id:2},position:{type:"apollo.common.Point3D",id:3},theta:{type:"double",id:4},length:{type:"double",id:5},width:{type:"double",id:6},height:{type:"double",id:7},velocity:{type:"apollo.common.Point3D",id:8},type:{type:"PerceptionObstacle.Type",id:9},subType:{type:"PerceptionObstacle.SubType",id:10},timestamp:{type:"double",id:11},box:{type:"BBox2D",id:12}}},Trajectory:{fields:{probability:{type:"double",id:1},trajectoryPoint:{rule:"repeated",type:"apollo.common.TrajectoryPoint",id:2}}},DebugMessage:{fields:{trajectory:{rule:"repeated",type:"Trajectory",id:1}}},PerceptionObstacle:{fields:{id:{type:"int32",id:1},position:{type:"apollo.common.Point3D",id:2},theta:{type:"double",id:3},velocity:{type:"apollo.common.Point3D",id:4},length:{type:"double",id:5},width:{type:"double",id:6},height:{type:"double",id:7},polygonPoint:{rule:"repeated",type:"apollo.common.Point3D",id:8},trackingTime:{type:"double",id:9},type:{type:"Type",id:10},timestamp:{type:"double",id:11},pointCloud:{rule:"repeated",type:"double",id:12},confidence:{type:"double",id:13,options:{deprecated:!0}},confidenceType:{type:"ConfidenceType",id:14,options:{deprecated:!0}},drops:{rule:"repeated",type:"apollo.common.Point3D",id:15,options:{deprecated:!0}},acceleration:{type:"apollo.common.Point3D",id:16},anchorPoint:{type:"apollo.common.Point3D",id:17},bbox2d:{type:"BBox2D",id:18},subType:{type:"SubType",id:19},measurements:{rule:"repeated",type:"SensorMeasurement",id:20},heightAboveGround:{type:"double",id:21,options:{default:null}},positionCovariance:{rule:"repeated",type:"double",id:22},velocityCovariance:{rule:"repeated",type:"double",id:23},accelerationCovariance:{rule:"repeated",type:"double",id:24},lightStatus:{type:"LightStatus",id:25},msg:{type:"DebugMessage",id:26},source:{type:"Source",id:27,options:{default:"HOST_VEHICLE"}},v2xInfo:{type:"V2XInformation",id:28}},nested:{Type:{values:{UNKNOWN:0,UNKNOWN_MOVABLE:1,UNKNOWN_UNMOVABLE:2,PEDESTRIAN:3,BICYCLE:4,VEHICLE:5}},ConfidenceType:{values:{CONFIDENCE_UNKNOWN:0,CONFIDENCE_CNN:1,CONFIDENCE_RADAR:2}},SubType:{values:{ST_UNKNOWN:0,ST_UNKNOWN_MOVABLE:1,ST_UNKNOWN_UNMOVABLE:2,ST_CAR:3,ST_VAN:4,ST_TRUCK:5,ST_BUS:6,ST_CYCLIST:7,ST_MOTORCYCLIST:8,ST_TRICYCLIST:9,ST_PEDESTRIAN:10,ST_TRAFFICCONE:11}},Source:{values:{HOST_VEHICLE:0,V2X:1}}}},LaneMarker:{fields:{laneType:{type:"apollo.hdmap.LaneBoundaryType.Type",id:1},quality:{type:"double",id:2},modelDegree:{type:"int32",id:3},c0Position:{type:"double",id:4},c1HeadingAngle:{type:"double",id:5},c2Curvature:{type:"double",id:6},c3CurvatureDerivative:{type:"double",id:7},viewRange:{type:"double",id:8},longitudeStart:{type:"double",id:9},longitudeEnd:{type:"double",id:10}}},LaneMarkers:{fields:{leftLaneMarker:{type:"LaneMarker",id:1},rightLaneMarker:{type:"LaneMarker",id:2},nextLeftLaneMarker:{rule:"repeated",type:"LaneMarker",id:3},nextRightLaneMarker:{rule:"repeated",type:"LaneMarker",id:4}}},CIPVInfo:{fields:{cipvId:{type:"int32",id:1},potentialCipvId:{rule:"repeated",type:"int32",id:2,options:{packed:!1}}}},PerceptionObstacles:{fields:{perceptionObstacle:{rule:"repeated",type:"PerceptionObstacle",id:1},header:{type:"apollo.common.Header",id:2},errorCode:{type:"apollo.common.ErrorCode",id:3,options:{default:"OK"}},laneMarker:{type:"LaneMarkers",id:4},cipvInfo:{type:"CIPVInfo",id:5}}}}},routing:{nested:{LaneWaypoint:{fields:{id:{type:"string",id:1},s:{type:"double",id:2},pose:{type:"apollo.common.PointENU",id:3},heading:{type:"double",id:4}}},LaneSegment:{fields:{id:{type:"string",id:1},startS:{type:"double",id:2},endS:{type:"double",id:3}}},ParkingSpaceType:{values:{VERTICAL_PLOT:0,PARALLEL_PARKING:1}},DeadEndRoutingType:{values:{ROUTING_OTHER:0,ROUTING_IN:1,ROUTING_OUT:2}},ParkingInfo:{fields:{parkingSpaceId:{type:"string",id:1},parkingPoint:{type:"apollo.common.PointENU",id:2},parkingSpaceType:{type:"ParkingSpaceType",id:3},cornerPoint:{type:"apollo.hdmap.Polygon",id:4}}},DeadEndInfo:{fields:{deadEndRoutingType:{type:"DeadEndRoutingType",id:1},targetPoint:{type:"apollo.common.PointENU",id:2}}},RoutingRequest:{fields:{header:{type:"apollo.common.Header",id:1},waypoint:{rule:"repeated",type:"LaneWaypoint",id:2},blacklistedLane:{rule:"repeated",type:"LaneSegment",id:3},blacklistedRoad:{rule:"repeated",type:"string",id:4},broadcast:{type:"bool",id:5,options:{default:!0}},parkingSpace:{type:"apollo.hdmap.ParkingSpace",id:6,options:{deprecated:!0}},parkingInfo:{type:"ParkingInfo",id:7},deadEndInfo:{type:"DeadEndInfo",id:8}}},Measurement:{fields:{distance:{type:"double",id:1}}},ChangeLaneType:{values:{FORWARD:0,LEFT:1,RIGHT:2}},Passage:{fields:{segment:{rule:"repeated",type:"LaneSegment",id:1},canExit:{type:"bool",id:2},changeLaneType:{type:"ChangeLaneType",id:3,options:{default:"FORWARD"}}}},RoadSegment:{fields:{id:{type:"string",id:1},passage:{rule:"repeated",type:"Passage",id:2}}},RoutingResponse:{fields:{header:{type:"apollo.common.Header",id:1},road:{rule:"repeated",type:"RoadSegment",id:2},measurement:{type:"Measurement",id:3},routingRequest:{type:"RoutingRequest",id:4},mapVersion:{type:"bytes",id:5},status:{type:"apollo.common.StatusPb",id:6}}}}},hdmap:{nested:{Projection:{fields:{proj:{type:"string",id:1}}},Header:{fields:{version:{type:"bytes",id:1},date:{type:"bytes",id:2},projection:{type:"Projection",id:3},district:{type:"bytes",id:4},generation:{type:"bytes",id:5},revMajor:{type:"bytes",id:6},revMinor:{type:"bytes",id:7},left:{type:"double",id:8},top:{type:"double",id:9},right:{type:"double",id:10},bottom:{type:"double",id:11},vendor:{type:"bytes",id:12}}},Map:{fields:{header:{type:"Header",id:1},crosswalk:{rule:"repeated",type:"Crosswalk",id:2},junction:{rule:"repeated",type:"Junction",id:3},lane:{rule:"repeated",type:"Lane",id:4},stopSign:{rule:"repeated",type:"StopSign",id:5},signal:{rule:"repeated",type:"Signal",id:6},yield:{rule:"repeated",type:"YieldSign",id:7},overlap:{rule:"repeated",type:"Overlap",id:8},clearArea:{rule:"repeated",type:"ClearArea",id:9},speedBump:{rule:"repeated",type:"SpeedBump",id:10},road:{rule:"repeated",type:"Road",id:11},parkingSpace:{rule:"repeated",type:"ParkingSpace",id:12},pncJunction:{rule:"repeated",type:"PNCJunction",id:13},rsu:{rule:"repeated",type:"RSU",id:14}}},ClearArea:{fields:{id:{type:"Id",id:1},overlapId:{rule:"repeated",type:"Id",id:2},polygon:{type:"Polygon",id:3}}},Crosswalk:{fields:{id:{type:"Id",id:1},polygon:{type:"Polygon",id:2},overlapId:{rule:"repeated",type:"Id",id:3}}},Polygon:{fields:{point:{rule:"repeated",type:"apollo.common.PointENU",id:1}}},LineSegment:{fields:{point:{rule:"repeated",type:"apollo.common.PointENU",id:1}}},CurveSegment:{oneofs:{curveType:{oneof:["lineSegment"]}},fields:{lineSegment:{type:"LineSegment",id:1},s:{type:"double",id:6},startPosition:{type:"apollo.common.PointENU",id:7},heading:{type:"double",id:8},length:{type:"double",id:9}}},Curve:{fields:{segment:{rule:"repeated",type:"CurveSegment",id:1}}},Id:{fields:{id:{type:"string",id:1}}},Junction:{fields:{id:{type:"Id",id:1},polygon:{type:"Polygon",id:2},overlapId:{rule:"repeated",type:"Id",id:3},type:{type:"Type",id:4}},nested:{Type:{values:{UNKNOWN:0,IN_ROAD:1,CROSS_ROAD:2,FORK_ROAD:3,MAIN_SIDE:4,DEAD_END:5}}}},LaneBoundaryType:{fields:{s:{type:"double",id:1},types:{rule:"repeated",type:"Type",id:2,options:{packed:!1}}},nested:{Type:{values:{UNKNOWN:0,DOTTED_YELLOW:1,DOTTED_WHITE:2,SOLID_YELLOW:3,SOLID_WHITE:4,DOUBLE_YELLOW:5,CURB:6}}}},LaneBoundary:{fields:{curve:{type:"Curve",id:1},length:{type:"double",id:2},virtual:{type:"bool",id:3},boundaryType:{rule:"repeated",type:"LaneBoundaryType",id:4}}},LaneSampleAssociation:{fields:{s:{type:"double",id:1},width:{type:"double",id:2}}},Lane:{fields:{id:{type:"Id",id:1},centralCurve:{type:"Curve",id:2},leftBoundary:{type:"LaneBoundary",id:3},rightBoundary:{type:"LaneBoundary",id:4},length:{type:"double",id:5},speedLimit:{type:"double",id:6},overlapId:{rule:"repeated",type:"Id",id:7},predecessorId:{rule:"repeated",type:"Id",id:8},successorId:{rule:"repeated",type:"Id",id:9},leftNeighborForwardLaneId:{rule:"repeated",type:"Id",id:10},rightNeighborForwardLaneId:{rule:"repeated",type:"Id",id:11},type:{type:"LaneType",id:12},turn:{type:"LaneTurn",id:13},leftNeighborReverseLaneId:{rule:"repeated",type:"Id",id:14},rightNeighborReverseLaneId:{rule:"repeated",type:"Id",id:15},junctionId:{type:"Id",id:16},leftSample:{rule:"repeated",type:"LaneSampleAssociation",id:17},rightSample:{rule:"repeated",type:"LaneSampleAssociation",id:18},direction:{type:"LaneDirection",id:19},leftRoadSample:{rule:"repeated",type:"LaneSampleAssociation",id:20},rightRoadSample:{rule:"repeated",type:"LaneSampleAssociation",id:21},selfReverseLaneId:{rule:"repeated",type:"Id",id:22}},nested:{LaneType:{values:{NONE:1,CITY_DRIVING:2,BIKING:3,SIDEWALK:4,PARKING:5,SHOULDER:6}},LaneTurn:{values:{NO_TURN:1,LEFT_TURN:2,RIGHT_TURN:3,U_TURN:4}},LaneDirection:{values:{FORWARD:1,BACKWARD:2,BIDIRECTION:3}}}},LaneOverlapInfo:{fields:{startS:{type:"double",id:1},endS:{type:"double",id:2},isMerge:{type:"bool",id:3},regionOverlapId:{type:"Id",id:4}}},SignalOverlapInfo:{fields:{}},StopSignOverlapInfo:{fields:{}},CrosswalkOverlapInfo:{fields:{regionOverlapId:{type:"Id",id:1}}},JunctionOverlapInfo:{fields:{}},YieldOverlapInfo:{fields:{}},ClearAreaOverlapInfo:{fields:{}},SpeedBumpOverlapInfo:{fields:{}},ParkingSpaceOverlapInfo:{fields:{}},PNCJunctionOverlapInfo:{fields:{}},RSUOverlapInfo:{fields:{}},RegionOverlapInfo:{fields:{id:{type:"Id",id:1},polygon:{rule:"repeated",type:"Polygon",id:2}}},ObjectOverlapInfo:{oneofs:{overlapInfo:{oneof:["laneOverlapInfo","signalOverlapInfo","stopSignOverlapInfo","crosswalkOverlapInfo","junctionOverlapInfo","yieldSignOverlapInfo","clearAreaOverlapInfo","speedBumpOverlapInfo","parkingSpaceOverlapInfo","pncJunctionOverlapInfo","rsuOverlapInfo"]}},fields:{id:{type:"Id",id:1},laneOverlapInfo:{type:"LaneOverlapInfo",id:3},signalOverlapInfo:{type:"SignalOverlapInfo",id:4},stopSignOverlapInfo:{type:"StopSignOverlapInfo",id:5},crosswalkOverlapInfo:{type:"CrosswalkOverlapInfo",id:6},junctionOverlapInfo:{type:"JunctionOverlapInfo",id:7},yieldSignOverlapInfo:{type:"YieldOverlapInfo",id:8},clearAreaOverlapInfo:{type:"ClearAreaOverlapInfo",id:9},speedBumpOverlapInfo:{type:"SpeedBumpOverlapInfo",id:10},parkingSpaceOverlapInfo:{type:"ParkingSpaceOverlapInfo",id:11},pncJunctionOverlapInfo:{type:"PNCJunctionOverlapInfo",id:12},rsuOverlapInfo:{type:"RSUOverlapInfo",id:13}}},Overlap:{fields:{id:{type:"Id",id:1},object:{rule:"repeated",type:"ObjectOverlapInfo",id:2},regionOverlap:{rule:"repeated",type:"RegionOverlapInfo",id:3}}},ParkingSpace:{fields:{id:{type:"Id",id:1},polygon:{type:"Polygon",id:2},overlapId:{rule:"repeated",type:"Id",id:3},heading:{type:"double",id:4}}},ParkingLot:{fields:{id:{type:"Id",id:1},polygon:{type:"Polygon",id:2},overlapId:{rule:"repeated",type:"Id",id:3}}},Passage:{fields:{id:{type:"Id",id:1},signalId:{rule:"repeated",type:"Id",id:2},yieldId:{rule:"repeated",type:"Id",id:3},stopSignId:{rule:"repeated",type:"Id",id:4},laneId:{rule:"repeated",type:"Id",id:5},type:{type:"Type",id:6}},nested:{Type:{values:{UNKNOWN:0,ENTRANCE:1,EXIT:2}}}},PassageGroup:{fields:{id:{type:"Id",id:1},passage:{rule:"repeated",type:"Passage",id:2}}},PNCJunction:{fields:{id:{type:"Id",id:1},polygon:{type:"Polygon",id:2},overlapId:{rule:"repeated",type:"Id",id:3},passageGroup:{rule:"repeated",type:"PassageGroup",id:4}}},BoundaryEdge:{fields:{curve:{type:"Curve",id:1},type:{type:"Type",id:2}},nested:{Type:{values:{UNKNOWN:0,NORMAL:1,LEFT_BOUNDARY:2,RIGHT_BOUNDARY:3}}}},BoundaryPolygon:{fields:{edge:{rule:"repeated",type:"BoundaryEdge",id:1}}},RoadBoundary:{fields:{outerPolygon:{type:"BoundaryPolygon",id:1},hole:{rule:"repeated",type:"BoundaryPolygon",id:2}}},RoadROIBoundary:{fields:{id:{type:"Id",id:1},roadBoundaries:{rule:"repeated",type:"RoadBoundary",id:2}}},RoadSection:{fields:{id:{type:"Id",id:1},laneId:{rule:"repeated",type:"Id",id:2},boundary:{type:"RoadBoundary",id:3}}},Road:{fields:{id:{type:"Id",id:1},section:{rule:"repeated",type:"RoadSection",id:2},junctionId:{type:"Id",id:3},type:{type:"Type",id:4}},nested:{Type:{values:{UNKNOWN:0,HIGHWAY:1,CITY_ROAD:2,PARK:3}}}},RSU:{fields:{id:{type:"Id",id:1},junctionId:{type:"Id",id:2},overlapId:{rule:"repeated",type:"Id",id:3}}},Subsignal:{fields:{id:{type:"Id",id:1},type:{type:"Type",id:2},location:{type:"apollo.common.PointENU",id:3}},nested:{Type:{values:{UNKNOWN:1,CIRCLE:2,ARROW_LEFT:3,ARROW_FORWARD:4,ARROW_RIGHT:5,ARROW_LEFT_AND_FORWARD:6,ARROW_RIGHT_AND_FORWARD:7,ARROW_U_TURN:8}}}},SignInfo:{fields:{type:{type:"Type",id:1}},nested:{Type:{values:{None:0,NO_RIGHT_TURN_ON_RED:1}}}},Signal:{fields:{id:{type:"Id",id:1},boundary:{type:"Polygon",id:2},subsignal:{rule:"repeated",type:"Subsignal",id:3},overlapId:{rule:"repeated",type:"Id",id:4},type:{type:"Type",id:5},stopLine:{rule:"repeated",type:"Curve",id:6},signInfo:{rule:"repeated",type:"SignInfo",id:7}},nested:{Type:{values:{UNKNOWN:1,MIX_2_HORIZONTAL:2,MIX_2_VERTICAL:3,MIX_3_HORIZONTAL:4,MIX_3_VERTICAL:5,SINGLE:6}}}},SpeedBump:{fields:{id:{type:"Id",id:1},overlapId:{rule:"repeated",type:"Id",id:2},position:{rule:"repeated",type:"Curve",id:3}}},SpeedControl:{fields:{name:{type:"string",id:1},polygon:{type:"apollo.hdmap.Polygon",id:2},speedLimit:{type:"double",id:3}}},SpeedControls:{fields:{speedControl:{rule:"repeated",type:"SpeedControl",id:1}}},StopSign:{fields:{id:{type:"Id",id:1},stopLine:{rule:"repeated",type:"Curve",id:2},overlapId:{rule:"repeated",type:"Id",id:3},type:{type:"StopType",id:4}},nested:{StopType:{values:{UNKNOWN:0,ONE_WAY:1,TWO_WAY:2,THREE_WAY:3,FOUR_WAY:4,ALL_WAY:5}}}},YieldSign:{fields:{id:{type:"Id",id:1},stopLine:{rule:"repeated",type:"Curve",id:2},overlapId:{rule:"repeated",type:"Id",id:3}}}}},prediction:{nested:{Lane:{fields:{currentLaneFeature:{rule:"repeated",type:"LaneFeature",id:1},laneFeature:{type:"LaneFeature",id:2},nearbyLaneFeature:{rule:"repeated",type:"LaneFeature",id:3},laneGraph:{type:"LaneGraph",id:4},laneGraphOrdered:{type:"LaneGraph",id:5},labelUpdateTimeDelta:{type:"double",id:26}}},LaneFeature:{fields:{laneId:{type:"string",id:1},laneTurnType:{type:"uint32",id:2},laneS:{type:"double",id:3},laneL:{type:"double",id:4},angleDiff:{type:"double",id:5},distToLeftBoundary:{type:"double",id:6},distToRightBoundary:{type:"double",id:7},laneHeading:{type:"double",id:8},laneType:{type:"apollo.hdmap.Lane.LaneType",id:9}}},JunctionExit:{fields:{exitLaneId:{type:"string",id:1},exitPosition:{type:"apollo.common.Point3D",id:2},exitHeading:{type:"double",id:3},exitWidth:{type:"double",id:4}}},JunctionFeature:{fields:{junctionId:{type:"string",id:1},junctionRange:{type:"double",id:2},enterLane:{type:"LaneFeature",id:3},junctionExit:{rule:"repeated",type:"JunctionExit",id:4},junctionMlpFeature:{rule:"repeated",type:"double",id:5,options:{packed:!1}},junctionMlpLabel:{rule:"repeated",type:"int32",id:6,options:{packed:!1}},junctionMlpProbability:{rule:"repeated",type:"double",id:7,options:{packed:!1}},startLaneId:{rule:"repeated",type:"string",id:8}}},ObstaclePriority:{fields:{priority:{type:"Priority",id:25,options:{default:"NORMAL"}}},nested:{Priority:{values:{CAUTION:1,NORMAL:2,IGNORE:3}}}},ObstacleInteractiveTag:{fields:{interactiveTag:{type:"InteractiveTag",id:37,options:{default:"NONINTERACTION"}}},nested:{InteractiveTag:{values:{INTERACTION:1,NONINTERACTION:2}}}},Trajectory:{fields:{probability:{type:"double",id:1},trajectoryPoint:{rule:"repeated",type:"apollo.common.TrajectoryPoint",id:2}}},Feature:{fields:{id:{type:"int32",id:1},polygonPoint:{rule:"repeated",type:"apollo.common.Point3D",id:30},position:{type:"apollo.common.Point3D",id:2},frontPosition:{type:"apollo.common.Point3D",id:27},velocity:{type:"apollo.common.Point3D",id:3},rawVelocity:{type:"apollo.common.Point3D",id:28},acceleration:{type:"apollo.common.Point3D",id:4},velocityHeading:{type:"double",id:5},speed:{type:"double",id:6},acc:{type:"double",id:7},theta:{type:"double",id:8},length:{type:"double",id:9},width:{type:"double",id:10},height:{type:"double",id:11},trackingTime:{type:"double",id:12},timestamp:{type:"double",id:13},lane:{type:"Lane",id:14},junctionFeature:{type:"JunctionFeature",id:26},tPosition:{type:"apollo.common.Point3D",id:16},tVelocity:{type:"apollo.common.Point3D",id:17,options:{deprecated:!0}},tVelocityHeading:{type:"double",id:18,options:{deprecated:!0}},tSpeed:{type:"double",id:19,options:{deprecated:!0}},tAcceleration:{type:"apollo.common.Point3D",id:20,options:{deprecated:!0}},tAcc:{type:"double",id:21,options:{deprecated:!0}},isStill:{type:"bool",id:22,options:{default:!1}},type:{type:"apollo.perception.PerceptionObstacle.Type",id:23},labelUpdateTimeDelta:{type:"double",id:24},priority:{type:"ObstaclePriority",id:25},interactiveTag:{type:"ObstacleInteractiveTag",id:37},isNearJunction:{type:"bool",id:29,options:{default:!1}},futureTrajectoryPoints:{rule:"repeated",type:"PredictionTrajectoryPoint",id:31},shortTermPredictedTrajectoryPoints:{rule:"repeated",type:"apollo.common.TrajectoryPoint",id:32},predictedTrajectory:{rule:"repeated",type:"Trajectory",id:33},adcTrajectoryPoint:{rule:"repeated",type:"apollo.common.TrajectoryPoint",id:34},adcTimestamp:{type:"double",id:38},adcLocalization:{type:"apollo.perception.PerceptionObstacle",id:39},surroundingLaneId:{rule:"repeated",type:"string",id:35},withinLaneId:{rule:"repeated",type:"string",id:36}}},ObstacleHistory:{fields:{feature:{rule:"repeated",type:"Feature",id:1},isTrainable:{type:"bool",id:2,options:{default:!1}}}},FrameEnv:{fields:{timestamp:{type:"double",id:1},egoHistory:{type:"ObstacleHistory",id:2},obstaclesHistory:{rule:"repeated",type:"ObstacleHistory",id:3}}},LanePoint:{fields:{position:{type:"apollo.common.Point3D",id:1},heading:{type:"double",id:2,options:{default:0}},width:{type:"double",id:3,options:{default:0}},relativeS:{type:"double",id:4,options:{default:0}},relativeL:{type:"double",id:5,options:{default:0}},angleDiff:{type:"double",id:6,options:{default:0}},kappa:{type:"double",id:7,options:{default:0}},scenarioType:{type:"ScenarioType",id:8},speedLimit:{type:"double",id:9}},nested:{ScenarioType:{values:{URBAN_ROAD:0,JUNCTION:1,HIGHWAY:2}}}},LaneSegment:{fields:{laneId:{type:"string",id:1},startS:{type:"double",id:2,options:{default:0}},endS:{type:"double",id:3,options:{default:0}},laneTurnType:{type:"uint32",id:4,options:{default:0}},lanePoint:{rule:"repeated",type:"LanePoint",id:5},adcS:{type:"double",id:7,options:{default:0}},adcLanePointIdx:{type:"int32",id:8,options:{default:0}},totalLength:{type:"double",id:6,options:{default:0}}}},NearbyObstacle:{fields:{id:{type:"int32",id:1},s:{type:"double",id:2},l:{type:"double",id:3}}},StopSign:{fields:{stopSignId:{type:"string",id:1},laneId:{type:"string",id:2},laneS:{type:"double",id:3},laneSequenceS:{type:"double",id:4}}},LaneSequence:{fields:{laneSequenceId:{type:"int32",id:1},laneSegment:{rule:"repeated",type:"LaneSegment",id:2},adcLaneSegmentIdx:{type:"int32",id:23,options:{default:0}},pathPoint:{rule:"repeated",type:"apollo.common.PathPoint",id:8},laneType:{type:"apollo.hdmap.Lane.LaneType",id:22},laneS:{type:"double",id:17},laneL:{type:"double",id:18},vehicleOnLane:{type:"bool",id:10},nearbyObstacle:{rule:"repeated",type:"NearbyObstacle",id:3},stopSign:{type:"StopSign",id:20},rightOfWay:{type:"int32",id:21},features:{type:"Features",id:4},label:{type:"int32",id:5,options:{default:0}},probability:{type:"double",id:6,options:{default:0}},acceleration:{type:"double",id:7,options:{default:0}},timeToLaneCenter:{type:"double",id:16},timeToLaneEdge:{type:"double",id:19},behaviorType:{type:"BehaviorType",id:9},currLanePoint:{rule:"repeated",type:"LanePoint",id:11},leftNeighborPoint:{rule:"repeated",type:"LanePoint",id:12},rightNeighborPoint:{rule:"repeated",type:"LanePoint",id:13},leftNearbyObstacle:{rule:"repeated",type:"NearbyObstacle",id:14},rightNearbyObstacle:{rule:"repeated",type:"NearbyObstacle",id:15}},nested:{Features:{fields:{mlpFeatures:{rule:"repeated",type:"double",id:1,options:{packed:!1}}}},BehaviorType:{values:{NOT_GOTO_LANE:1,CONSTANT_SPEED:2,SMALL_ACCELERATION:3,LARGE_ACCELERATION:4,SMALL_DECELERATION:5,LARGE_DECELERATION:6}}}},LaneGraph:{fields:{laneSequence:{rule:"repeated",type:"LaneSequence",id:1}}},LaneObstacle:{fields:{obstacleId:{type:"int32",id:1},laneId:{type:"string",id:2},laneS:{type:"double",id:3},laneL:{type:"double",id:4}}},PredictionPathPoint:{fields:{x:{rule:"required",type:"double",id:1},y:{rule:"required",type:"double",id:2},velocityHeading:{type:"double",id:3}}},PredictionTrajectoryPoint:{fields:{pathPoint:{rule:"required",type:"PredictionPathPoint",id:1},timestamp:{rule:"required",type:"double",id:2}}},ObstacleIntent:{fields:{type:{type:"Type",id:1,options:{default:"UNKNOWN"}}},nested:{Type:{values:{UNKNOWN:0,STOP:1,STATIONARY:2,MOVING:3,CHANGE_LANE:4,LOW_ACCELERATION:5,HIGH_ACCELERATION:6,LOW_DECELERATION:7,HIGH_DECELERATION:8}}}},Intent:{fields:{type:{type:"Type",id:1,options:{default:"UNKNOWN"}}},nested:{Type:{values:{UNKNOWN:0,STOP:1,CRUISE:2,CHANGE_LANE:3}}}},PredictionObstacle:{fields:{perceptionObstacle:{type:"apollo.perception.PerceptionObstacle",id:1},timestamp:{type:"double",id:2},predictedPeriod:{type:"double",id:3},trajectory:{rule:"repeated",type:"Trajectory",id:4},intent:{type:"ObstacleIntent",id:5},priority:{type:"ObstaclePriority",id:6},interactiveTag:{type:"ObstacleInteractiveTag",id:9},isStatic:{type:"bool",id:7,options:{default:!1}},feature:{rule:"repeated",type:"Feature",id:8}}},PredictionObstacles:{fields:{header:{type:"apollo.common.Header",id:1},predictionObstacle:{rule:"repeated",type:"PredictionObstacle",id:2},perceptionErrorCode:{type:"apollo.common.ErrorCode",id:3},startTimestamp:{type:"double",id:4},endTimestamp:{type:"double",id:5},intent:{type:"Intent",id:6},scenario:{type:"Scenario",id:7}}},Scenario:{fields:{type:{type:"Type",id:1,options:{default:"UNKNOWN"}},junctionId:{type:"string",id:2}},nested:{Type:{values:{UNKNOWN:0,CRUISE:1e3,CRUISE_URBAN:1001,CRUISE_HIGHWAY:1002,JUNCTION:2e3,JUNCTION_TRAFFIC_LIGHT:2001,JUNCTION_STOP_SIGN:2002}}}}}},relative_map:{nested:{NavigationPath:{fields:{path:{type:"apollo.common.Path",id:1},pathPriority:{type:"uint32",id:2}}},NavigationInfo:{fields:{header:{type:"apollo.common.Header",id:1},navigationPath:{rule:"repeated",type:"NavigationPath",id:2}}},MapMsg:{fields:{header:{type:"apollo.common.Header",id:1},hdmap:{type:"apollo.hdmap.Map",id:2},navigationPath:{keyType:"string",type:"NavigationPath",id:3},laneMarker:{type:"apollo.perception.LaneMarkers",id:4},localization:{type:"apollo.localization.LocalizationEstimate",id:5}}},SampleParam:{fields:{straightSampleInterval:{type:"double",id:1,options:{default:3}},smallKappaSampleInterval:{type:"double",id:2,options:{default:1}},middleKappaSampleInterval:{type:"double",id:3,options:{default:.4}},largeKappaSampleInterval:{type:"double",id:4,options:{default:.1}},smallKappa:{type:"double",id:5,options:{default:.002}},middleKappa:{type:"double",id:6,options:{default:.008}},largeKappa:{type:"double",id:7,options:{default:.02}}}},NavigatorConfig:{fields:{enableNavigatorDownsample:{type:"bool",id:1,options:{default:!0}},sampleParam:{type:"SampleParam",id:2}}},MapGenerationParam:{fields:{defaultLeftWidth:{type:"double",id:1,options:{default:1.75}},defaultRightWidth:{type:"double",id:2,options:{default:1.75}},defaultSpeedLimit:{type:"double",id:3,options:{default:29.0576}}}},NavigationLaneConfig:{fields:{minLaneMarkerQuality:{type:"double",id:1,options:{default:.5}},laneSource:{type:"LaneSource",id:2},maxLenFromNavigationLine:{type:"double",id:3,options:{default:250}},minLenForNavigationLane:{type:"double",id:4,options:{default:150}},maxLenForNavigationLane:{type:"double",id:5,options:{default:250}},ratioNavigationLaneLenToSpeed:{type:"double",id:6,options:{default:8}},maxDistanceToNavigationLine:{type:"double",id:7,options:{default:15}},minViewRangeToUseLaneMarker:{type:"double",id:8,options:{default:.5}},minLaneHalfWidth:{type:"double",id:9,options:{default:1.5}},maxLaneHalfWidth:{type:"double",id:10,options:{default:2}},laneMarkerWeight:{type:"double",id:11,options:{default:.1}}},nested:{LaneSource:{values:{PERCEPTION:1,OFFLINE_GENERATED:2}}}},RelativeMapConfig:{fields:{mapParam:{type:"MapGenerationParam",id:1},navigationLane:{type:"NavigationLaneConfig",id:2}}}}},audio:{nested:{MovingResult:{values:{UNKNOWN:0,APPROACHING:1,DEPARTING:2,STATIONARY:3}},AudioType:{values:{UNKNOWN_TYPE:0,POLICE:1,AMBULANCE:2,FIRETRUCK:3}},AudioDirection:{values:{UNKNOWN_DIRECTION:0,FRONT:1,LEFT:2,BACK:3,RIGHT:4}},AudioEvent:{fields:{header:{type:"apollo.common.Header",id:1},id:{type:"int32",id:2},movingResult:{type:"apollo.audio.MovingResult",id:3,options:{default:"UNKNOWN"}},audioType:{type:"apollo.audio.AudioType",id:4,options:{default:"UNKNOWN_TYPE"}},sirenIsOn:{type:"bool",id:5},audioDirection:{type:"apollo.audio.AudioDirection",id:6,options:{default:"UNKNOWN_DIRECTION"}},pose:{type:"apollo.localization.Pose",id:7}}}}}}}}}},function(e){e.exports={nested:{apollo:{nested:{dreamview:{nested:{PointCloud:{fields:{num:{rule:"repeated",type:"float",id:1}}}}}}}}}}]);
//# sourceMappingURL=worker.bundle.js.map