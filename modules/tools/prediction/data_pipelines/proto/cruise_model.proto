syntax = "proto2";

// Helpers:

message TensorParameter {
  repeated float data = 1 [packed = true];
  repeated int32 shape = 2;
}

message InputParameter {
  repeated int32 input_shape = 1;
  optional string dtype = 2;  // data type of the input
  optional bool sparse = 3;
}

// Basic layers

message Conv1dParameter {
  repeated int32 shape = 1;
  optional bool use_bias = 2;
  optional TensorParameter kernel = 3;
  optional TensorParameter bias = 4;
  optional int32 stride = 5;
}

message DenseParameter {
  optional int32 units = 1;
  optional string activation = 2;
  optional bool use_bias = 3;
  optional TensorParameter weights = 4;
  optional TensorParameter bias = 5;
}

message ActivationParameter {
  optional string activation = 1;
}

message MaxPool1dParameter {
  optional int32 kernel_size = 1;
  optional int32 stride = 2;
}

message AvgPool1dParameter {
  optional int32 kernel_size = 1;
  optional int32 stride = 2;
}

// Intermediate building blocks:

message LaneFeatureConvParameter {
  optional Conv1dParameter conv1d_0 = 1;
  optional ActivationParameter activation_1 = 2;
  optional Conv1dParameter conv1d_2 = 3;
  optional ActivationParameter activation_3 = 4;
  optional Conv1dParameter conv1d_4 = 5;
}

message ObsFeatureFCParameter {
  optional DenseParameter linear_0 = 1;
  optional ActivationParameter activation_1 = 2;
  optional DenseParameter linear_3 = 3;
  optional ActivationParameter activation_4 = 4;
}

message ClassifyParameter {
  optional DenseParameter linear_0 = 1;
  optional ActivationParameter activation_1 = 2;
  optional DenseParameter linear_3 = 3;
  optional ActivationParameter activation_4 = 4;
  optional DenseParameter linear_6 = 5;
  optional ActivationParameter activation_7 = 6;
  optional DenseParameter linear_9 = 7;
  optional ActivationParameter activation_10 = 8;
}

message RegressParameter {
  optional DenseParameter linear_0 = 1;
  optional ActivationParameter activation_1 = 2;
  optional DenseParameter linear_3 = 3;
  optional ActivationParameter activation_4 = 4;
  optional DenseParameter linear_6 = 5;
  optional ActivationParameter activation_7 = 6;
  optional DenseParameter linear_9 = 7;
  optional ActivationParameter activation_10 = 8;
}

// Final model

// next id =
message CruiseModelParameter {
  optional LaneFeatureConvParameter lane_feature_conv = 1;
  optional MaxPool1dParameter lane_feature_maxpool = 2;
  optional AvgPool1dParameter lane_feature_avgpool = 3;
  optional ObsFeatureFCParameter obs_feature_fc = 5;
  optional ClassifyParameter classify = 6;
  optional RegressParameter regress = 7;
}
